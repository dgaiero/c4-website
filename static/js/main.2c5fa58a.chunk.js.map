{"version":3,"sources":["AdditionalDataModal.js","LoadingModal.js","helper.js","Loading.js","Pagination.js","actions/keywordActions.js","actions/organizationActions.js","actions/collaborationsActions.js","Keywords.js","Organizations.js","User.js","copyQueryToClipboard.js","PasteQueryFromKeyboard.js","universityCollaborators/searchForUniversityForm.js","actions/menuActions.js","actions/searchForUnivCollaboratorActions.js","head.js","universityCollaborators/searchForUniversity.js","loader.js","universityCollaborators/TableView.js","Navigation.js","DebugMessage.js","actions/settingsActions.js","WelcomeJumbotron.js","indexPage.js","ParseSaveQuery.js","404.js","ComingSoon.js","RootContainer.js","App.js","AppInfo.js","Footer.js","reducers/settingsReducer.js","reducers/keywordReducer.js","reducers/organizationReducer.js","reducers/menuReducer.js","reducers/collaborationsReducer.js","reducers/searchForUnivCollaboratorReducer.js","reducers/rootReducer.js","registerServiceWorker.js","index.js"],"names":["AdditionalDataModal","_this$props","this","props","openStatus","toggle","size","title","body","react_default","a","createElement","Modal","isOpen","centered","ModalHeader","ModalBody","ModalFooter","Button","color","onClick","Component","LoadingModal","toTitleCase","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","isEmpty","queryData","empty","activityKeywords","length","topicalKeywords","collaborations","selectedUniversities","NBSP","Loading","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","errorModalOpenToggle","setState","errorModalOpenFlag","state","status","errorModalTitle","errorModalBody","loadingItems","loadingStatus","error","bodyText","entries","response","data","map","_ref","_ref2","slicedToArray","key","value","push","toString","_unused","friendlyName","condition","_this2","Spinner","href","showErrorInfo","buildErrorMessage","_this3","Fragment","AdditionalDataModal_AdditionalDataModal","LoadingModal_LoadingModal","loadInfo","loadingText","connect","settings","keywords","orgs","collaborators","PaginationWrapper","pager","items","setPage","initialPage","prevProps","prevState","page","pageSize","totalPages","getPager","pageOfItems","slice","startIndex","endIndex","onChangePage","totalItems","currentPage","startPage","endPage","Math","ceil","min","pages","toConsumableArray","Array","keys","i","Pagination","aria-label","PaginationItem","disabled","PaginationLink","first","previous","index","active","next","last","React","defaultProps","Actions","FETCH_KEYWORDS_BEGIN","FETCH_KEYWORDS_SUCCESS","FETCH_KEYWORDS_FAILURE","fetchKeywordsBegin","type","fetchKeywordsSuccess","payload","fetchKeywordsFailure","FETCH_ORGANIZATIONS_BEGIN","FETCH_ORGANIZATIONS_SUCCESS","FETCH_ORGANIZATIONS_FAILURE","fetchOrganizationsBegin","fetchOrganizationsSuccess","organizations","fetchOrganizationsFailure","FETCH_COLLABORATIONS_BEGIN","FETCH_COLLABORATIONS_SUCCESS","FETCH_COLLABORATIONS_FAILURE","fetchCollaborationsBegin","fetchCollaborationsSuccess","fetchCollaborationsFailure","getKeywordType","shortKeywordType","name","getKeywordSortOrder","shortKeywordSortOrder","Keywords","buildKeywordOverviewModalBody","modalBody","keywordID","ListGroupItem","tag","showKeywordExtendedData","action","keywordName","ListGroup","buildDisplayText","displayText","keywordIDs","substring","displayLength","showKeywordOverviewModal","keywordOverviewModalTitle","keywordOverviewModalBody","showKeywordDetailModal","keywordDetailModalTitle","keywordDetailModalBody","id","keywordInfo","Badge","keywordType","sortOrder","keywordDescription","keywordsLoading","loading","keywordError","getOrgType","shortOrgType","Organizations","buildOrganizationOverviewModalBody","organizationID","showOrgExtendedData","orgNameUnique","organizationIDs","showOrganizationOverviewModal","organizationOverviewModalTitle","organizationOverviewModalBody","showOrganizationDetailModal","organizationDetailModalTitle","organizationDetailModalBody","orgID","orgInfo","orgType","website","outline","target","rel","orgsLoading","orgError","getUserTypes","shortUserType","library","add","faInfo","UserDetail","showUserDetailModal","user","firstName","lastName","userType","obfuscate_default","email","emailAddress","jobTitle","description","split","userDetailModalTitle","userDetailModalBody","showUserDetails","index_es","icon","base64","require","CopyQueryToClipboard","copyCode","copyURL","query","endpoint","protocol","window","location","host","encodedQuery","encode","URL","concat","InputGroup","Input","placeholder","InputGroupAddon","addonType","lib","text","onCopy","UncontrolledPopover","trigger","placement","PopoverHeader","PopoverBody","PasteQueryToClipboard","runQuery","newLocation","history","bind","assertThisInitialized","handleChange","event","onChange","autoFocus","SearchForUniversityForm","getUnivertisyTypes","orgTypes","filter","org","includes","label","getCollaborationsTypes","collaboration","collaborationName","getKeywordTypes","keywordsFiltered","keyword","keywordLow","keywordMedium","keywordHigh","keywordLowNormalized","keywordMediumNormalized","options","e","_e$target","checked","objectSpread","defineProperty","selectedQuery","validate","emailState","selectedOption","modal","dropdownOpen","copyToClipBoardToggle","pasteFromClipBoardToggle","handleSubmit","univOptions","aKeywords","tKeywords","syntheticEvent","preventDefault","submitHandler","Form","onSubmit","Col","FormGroup","Label","react_select_browser_esm","ref","val","isMulti","autoBlur","closeOnSelect","closeMenuOnSelect","FormText","Row","style","display","Dropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","divider","copyQueryToClipboard_CopyQueryToClipboard","buildQueryString","PasteQueryFromKeyboard_PasteQueryToClipboard","withRouter","nav","TOGGLE_DEV_MODE","TOGGLE_NAV_BAR","TOGGLE_SEARCH_FOR_UNIV_COLLABORATOR","toggleDevMode","toggleSearchForUnivCollaborator","FETCH_COLLABORATORS_BEGIN","FETCH_COLLABORATORS_SUCCESS","FETCH_COLLABORATORS_FAILURE","SET_QUERY_STATEMENT","SET_URL","setQueryStatement","delimiter","appTitle","Title","Helmet","faLifeRing","queryString","buildURL","item","url","params","SearchForCollaborator","selectedQueryStatements","fetchUnivCollaborators","readParams","initialLoad","orgsA","aKey","tKey","cKey","parsed","parse","search","keyA","isArray","keyID","keyT","clb","clbID","orgL","Jumbotron","fluid","Container","className","UncontrolledAlert","react_router_dom","to","searchForUniversityForm","mapDispatchToProps","dispatch","axios","get","then","res","catch","err","setURL","univCollaborators","Loader","pair","values","loader","every","x","TableView","renderDisplayUserItems","pageItems","scope","src_Organizations","organization","src_Keywords","User","fetchKeywords","fetchOrganizations","fetchCollaborations","collaborationsLoading","collaborationsError","univCollaboratorsLoading","univCollaboratorsError","loadStatus","calculateLoadingState","src_Loading","searchForUniversity","Alert","Table","hover","responsive","src_Pagination","Navigation","Navbar","dark","expand","NavbarBrand","RRNavLink","exact","siteHeading","NavbarToggler","toggleNavBar","Collapse","navOpen","navbar","Nav","NavItem","NavLink","activeClassName","DebugMessage","navIsOpen","devModeOpen","commitBranch","commitMessage","commitHash","FETCH_SETTINGS_BEGIN","FETCH_SETTINGS_SUCCESS","FETCH_SETTINGS_FAILURE","fetchSettingsBegin","fetchSettingsSuccess","fetchSettingsFailure","WelcomeJumbotron","frontHeading","frontMessage","frontMessageSubText","additionEmailAddress","LookingForUnivCollaboratorCard","Card","border","overflow","borderRadius","CardBody","CardText","CardFooter","LookingForGovCollaboratorCard","FrontPageCards","PasteQCode","src_WelcomeJumbotron","CardDeck","marginBottom","indexPage_LookingForUnivCollaboratorCard","indexPage_LookingForGovCollaboratorCard","ParseSaveQuery","seconds","tick","timer","setInterval","clearInterval","match","pathname","decoded_query","decode","react_router","NotFound","ComingSoon","defaults","baseURL","RootContainer","fetchSettings","src_DebugMessage","src_Navigation","path","component","App","store","es","AppInfo","tab1Content","hash","tab2Content","licenseError","loadLicense","license","content","tab3Content","moduleLicenseError","loadModuleLicense","moduleLicense","tab4Content","CardColumns","CardImg","top","width","src","alt","loadVersionHash","commitError","activeTab","getCommitHash","getLicense","getModuleLicenses","sha","_this4","tab","_this5","pills","classnames","TabContent","TabPane","tabId","faInfoCircle","Footer","showAppInfoModal","backgroundColor","src_AppInfo","initialState","searchForCollaborator","combineReducers","arguments","undefined","TOGGLE_SEARCH_FOR_COLLABORATOR","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","applyMiddleware","thunk","createStore","createStoreWithMiddleware","rootReducer","ReactDOM","render","src_App_0","src_Footer","document","getElementById","process","origin","addEventListener","fetch","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2c5fa58a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n   Button, Modal, ModalHeader, ModalBody, ModalFooter,\r\n} from 'reactstrap';\r\nimport './Modal.css';\r\n\r\nexport default class AdditionalDataModal extends Component {\r\n   \r\n   /* Passed in:\r\n      props:\r\n         - title\r\n         - body\r\n    */\r\n\r\n   render() {\r\n      const { openStatus, toggle, size, title, body } = this.props;\r\n      return (\r\n         <Modal isOpen={openStatus} toggle={toggle} centered size={size}>\r\n            <ModalHeader toggle={toggle}>{title}</ModalHeader>\r\n            <ModalBody>\r\n               {body}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" onClick={toggle}>Close</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      );\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n   Modal, ModalHeader, ModalBody,\r\n} from 'reactstrap';\r\nimport './Modal.css';\r\n\r\nexport default class LoadingModal extends Component {\r\n   \r\n   /* Passed in:\r\n      props:\r\n         - title\r\n         - body\r\n    */\r\n\r\n   render() {\r\n      const { openStatus, size } = this.props;\r\n      return (\r\n         <Modal isOpen={openStatus} centered size={size}>\r\n            <ModalHeader>{this.props.title}</ModalHeader>\r\n            <ModalBody>\r\n               {this.props.body}\r\n            </ModalBody>\r\n         </Modal>\r\n      );\r\n   }\r\n}","export function toTitleCase(str) {\r\n   return str.replace(\r\n      /\\w\\S*/g,\r\n      function (txt) {\r\n         return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n      }\r\n   );\r\n}\r\n\r\n\r\nexport const isEmpty = (queryData) => {\r\n   let empty = true;\r\n   if (queryData.activityKeywords.length !== 0) {\r\n      empty = false;\r\n   }\r\n   if (queryData.topicalKeywords.length !== 0) {\r\n      empty = false;\r\n   }\r\n   if (queryData.collaborations.length !== 0) {\r\n      empty = false;\r\n   }\r\n   if (queryData.selectedUniversities.length !== 0) {\r\n      empty = false;\r\n   }\r\n   return empty;\r\n}\r\n\r\nexport const NBSP = '\\u00A0'","import React, { Component } from 'react';\r\nimport {\r\n   Spinner,\r\n} from 'reactstrap';\r\nimport ErrorModal from './AdditionalDataModal';\r\nimport LoadingModal from './LoadingModal'\r\nimport './App.css';\r\nimport { connect } from 'react-redux'\r\nimport { toTitleCase } from './helper'\r\n\r\n\r\nclass Loading extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         status: false,\r\n         errorModalOpenFlag: false,\r\n         errorModalTitle: '',\r\n         errorModalBody: '',\r\n         loadingItems: {},\r\n         loadingStatus: false,\r\n      }\r\n   }\r\n\r\n   buildErrorMessage(error) {\r\n      let bodyText = []\r\n      try {\r\n         const errorJSON = Object.entries(error.response.data)\r\n         errorJSON.map((([key, value]) => {\r\n            bodyText.push(<span key={key}><b>{toTitleCase(key)}</b>: {value.toString()}</span>)\r\n         }))\r\n      }\r\n      catch {\r\n         bodyText.push(<span key='UDEFERR'><b>Detail</b>: Undefined Error</span>)\r\n      }\r\n      return (bodyText)\r\n   }\r\n\r\n   loadingText(friendlyName, condition, error) {\r\n      let status = <Spinner color=\"primary\" size=\"sm\" />\r\n      if (error !== null) {\r\n         status = <a href=\"#0\" key=\"ERROR\" onClick={() => this.showErrorInfo(error.toString(), this.buildErrorMessage(error))}>Error</a>\r\n      }\r\n      else if (condition === false) {\r\n         status = 'done'\r\n      }\r\n\r\n      return (condition === false && error === null) ? null : <div key={friendlyName}>Loading {friendlyName}... {status}</div>\r\n\r\n   }\r\n\r\n   showErrorInfo(title, body) {\r\n      this.setState({ errorModalTitle: title, errorModalBody: body, errorModalOpenFlag: !this.state.errorModalOpenFlag });\r\n   }\r\n\r\n   errorModalOpenToggle = () => {\r\n      this.setState({ errorModalOpenFlag: !this.state.errorModalOpenFlag });\r\n   };\r\n\r\n\r\n   render() {\r\n      const { body, status } = this.props;\r\n      return (\r\n         <>\r\n            <ErrorModal\r\n               openStatus={this.state.errorModalOpenFlag}\r\n               title={this.state.errorModalTitle}\r\n               body={this.state.errorModalBody}\r\n               toggle={this.errorModalOpenToggle}\r\n               size={'lg'}\r\n            />\r\n            <LoadingModal\r\n               openStatus={!status}\r\n               title={<div>Loading Components</div>}\r\n               body={body.map(loadInfo => this.loadingText(loadInfo.friendlyName, loadInfo.condition, loadInfo.error))}\r\n            />\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   settings: state.settings,\r\n   keywords: state.keywords,\r\n   orgs: state.orgs,\r\n   collaborators: state.collaborators,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Loading)","/*\r\n * Pagination component modified from @cornflourblue on github\r\n * https://github.com/cornflourblue/react-pagination-example\r\n *\r\n * MIT License\r\n * \r\n * Copyright (c) 2017 Jason Watmore\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n * \r\n * The above copyright notice and this permission notice shall be included in \r\n * all copies or substantial portions of the Software.\r\n * \r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\r\n\r\nconst propTypes = {\r\n   items: PropTypes.array.isRequired,\r\n   onChangePage: PropTypes.func.isRequired,\r\n   initialPage: PropTypes.number,\r\n   pageSize: PropTypes.number\r\n}\r\n\r\nconst defaultProps = {\r\n   initialPage: 1,\r\n   pageSize: 30\r\n}\r\n\r\nclass PaginationWrapper extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { pager: {} };\r\n   }\r\n\r\n   componentDidMount() {\r\n      // set page if items array isn't empty\r\n      if (this.props.items && this.props.items.length) {\r\n         this.setPage(this.props.initialPage);\r\n      }\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState) {\r\n      // reset page if items array has changed\r\n      if (this.props.items !== prevProps.items) {\r\n         this.setPage(this.props.initialPage);\r\n      }\r\n   }\r\n\r\n   setPage(page) {\r\n      var { items, pageSize } = this.props;\r\n      var pager = this.state.pager;\r\n\r\n      if (page < 1 || page > pager.totalPages) {\r\n         return;\r\n      }\r\n\r\n      // get new pager object for specified page\r\n      pager = this.getPager(items.length, page, pageSize);\r\n\r\n      // get new page of items from items array\r\n      var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\r\n\r\n      // update state\r\n      this.setState({ pager: pager });\r\n\r\n      // call change page function in parent component\r\n      this.props.onChangePage(pageOfItems);\r\n   }\r\n\r\n   getPager(totalItems, currentPage, pageSize) {\r\n      // default to first page\r\n      currentPage = currentPage || 1;\r\n\r\n      // default page size is 10\r\n      pageSize = pageSize || 10;\r\n\r\n      // calculate total pages\r\n      var totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n      var startPage, endPage;\r\n      if (totalPages <= 10) {\r\n         // less than 10 total pages so show all\r\n         startPage = 1;\r\n         endPage = totalPages;\r\n      } else {\r\n         // more than 10 total pages so calculate start and end pages\r\n         if (currentPage <= 6) {\r\n            startPage = 1;\r\n            endPage = 10;\r\n         } else if (currentPage + 4 >= totalPages) {\r\n            startPage = totalPages - 9;\r\n            endPage = totalPages;\r\n         } else {\r\n            startPage = currentPage - 5;\r\n            endPage = currentPage + 4;\r\n         }\r\n      }\r\n\r\n      // calculate start and end item indexes\r\n      var startIndex = (currentPage - 1) * pageSize;\r\n      var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n      // create an array of pages to ng-repeat in the pager control\r\n      var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\r\n\r\n      // return object with all pager properties required by the view\r\n      return {\r\n         totalItems: totalItems,\r\n         currentPage: currentPage,\r\n         pageSize: pageSize,\r\n         totalPages: totalPages,\r\n         startPage: startPage,\r\n         endPage: endPage,\r\n         startIndex: startIndex,\r\n         endIndex: endIndex,\r\n         pages: pages\r\n      };\r\n   }\r\n\r\n   render() {\r\n      var pager = this.state.pager;\r\n\r\n      if (!pager.pages || pager.pages.length <= 1) {\r\n         // don't display pager if there is only 1 page\r\n         return null;\r\n      }\r\n\r\n      return (\r\n         <Pagination aria-label=\"pagination\">\r\n\r\n            <PaginationItem disabled={pager.currentPage === 1 ? true : false}>\r\n               <PaginationLink first href=\"#0\" onClick={() => this.setPage(1)}/>\r\n            </PaginationItem>\r\n\r\n            <PaginationItem disabled={pager.currentPage === 1 ? true : false}>\r\n               <PaginationLink previous href=\"#0\" onClick={() => this.setPage(pager.currentPage - 1)} />\r\n            </PaginationItem>\r\n\r\n            {pager.pages.map((page, index) =>\r\n               <PaginationItem key={index} active={pager.currentPage === page ? true : false}>\r\n                  <PaginationLink href=\"#0\" onClick={() => this.setPage(page)}>{page}</PaginationLink>\r\n               </PaginationItem>\r\n            )}\r\n\r\n            <PaginationItem disabled={pager.currentPage === pager.totalPages ? true : false}>\r\n               <PaginationLink next href=\"#0\" onClick={() => this.setPage(pager.currentPage + 1)} />\r\n            </PaginationItem>\r\n\r\n            <PaginationItem disabled={pager.currentPage === pager.totalPages ? true : false}>\r\n               <PaginationLink last href=\"#0\" onClick={() => this.setPage(pager.totalPages)} />\r\n            </PaginationItem>\r\n\r\n         </Pagination>\r\n\r\n      );\r\n   }\r\n}\r\n\r\nPaginationWrapper.propTypes = propTypes;\r\nPaginationWrapper.defaultProps = defaultProps;\r\nexport default PaginationWrapper;","\r\nimport axios from \"axios\";\r\n\r\nexport const Actions = {\r\n   FETCH_KEYWORDS_BEGIN: 'FETCH_KEYWORDS_BEGIN',\r\n   FETCH_KEYWORDS_SUCCESS: 'FETCH_KEYWORDS_SUCCESS',\r\n   FETCH_KEYWORDS_FAILURE: 'FETCH_KEYWORDS_FAILURE'\r\n}\r\n\r\nexport const fetchKeywordsBegin = () => ({\r\n   type: Actions.FETCH_KEYWORDS_BEGIN\r\n});\r\n\r\nexport const fetchKeywordsSuccess = (keywords) => ({\r\n   type: Actions.FETCH_KEYWORDS_SUCCESS,\r\n   payload: { keywords }\r\n})\r\n\r\nexport const fetchKeywordsFailure = (error) => ({\r\n   type: Actions.FETCH_KEYWORDS_FAILURE,\r\n   payload: { error }\r\n})\r\n\r\nexport function fetchKeywords() {\r\n   let keywords = [];\r\n   return dispatch => {\r\n      dispatch(fetchKeywordsBegin());\r\n      return axios.get('api/v1/keywords/?format=json')\r\n         .then(response => {\r\n            response.data.map(keyword => {\r\n               keywords[keyword.id] = keyword;\r\n               return keyword;\r\n            });\r\n            dispatch(fetchKeywordsSuccess(keywords));\r\n         })\r\n         .catch(error => dispatch(fetchKeywordsFailure(error))\r\n      );\r\n   }\r\n}","\r\nimport axios from \"axios\";\r\n\r\nexport const Actions = {\r\n   FETCH_ORGANIZATIONS_BEGIN: 'FETCH_ORGANIZATIONS_BEGIN',\r\n   FETCH_ORGANIZATIONS_SUCCESS: 'FETCH_ORGANIZATIONS_SUCCESS',\r\n   FETCH_ORGANIZATIONS_FAILURE: 'FETCH_ORGANIZATIONS_FAILURE'\r\n}\r\n\r\nexport const fetchOrganizationsBegin = () => ({\r\n   type: Actions.FETCH_ORGANIZATIONS_BEGIN\r\n});\r\n\r\nexport const fetchOrganizationsSuccess = (organizations) => ({\r\n   type: Actions.FETCH_ORGANIZATIONS_SUCCESS,\r\n   payload: { organizations }\r\n})\r\n\r\nexport const fetchOrganizationsFailure = (error) => ({\r\n   type: Actions.FETCH_ORGANIZATIONS_FAILURE,\r\n   payload: { error }\r\n})\r\n\r\nexport function fetchOrganizations() {\r\n   let organizations = [];\r\n   return dispatch => {\r\n      dispatch(fetchOrganizationsBegin());\r\n      return axios.get('api/v1/orgs/?format=json')\r\n         .then(response => {\r\n            response.data.map(organization => {\r\n               organizations[organization.id] = organization;\r\n               return organization;\r\n            });\r\n            dispatch(fetchOrganizationsSuccess(organizations));\r\n         })\r\n         .catch(error => dispatch(fetchOrganizationsFailure(error))\r\n         );\r\n   }\r\n}","\nimport axios from \"axios\";\n\nexport const Actions = {\n   FETCH_COLLABORATIONS_BEGIN: 'FETCH_COLLABORATIONS_BEGIN',\n   FETCH_COLLABORATIONS_SUCCESS: 'FETCH_COLLABORATIONS_SUCCESS',\n   FETCH_COLLABORATIONS_FAILURE: 'FETCH_COLLABORATIONS_FAILURE'\n}\n\nexport const fetchCollaborationsBegin = () => ({\n   type: Actions.FETCH_COLLABORATIONS_BEGIN\n});\n\nexport const fetchCollaborationsSuccess = (collaborations) => ({\n   type: Actions.FETCH_COLLABORATIONS_SUCCESS,\n   payload: { collaborations }\n})\n\nexport const fetchCollaborationsFailure = (error) => ({\n   type: Actions.FETCH_COLLABORATIONS_FAILURE,\n   payload: { error }\n})\n\nexport function fetchCollaborations() {\n   let collaborations = [];\n   return dispatch => {\n      dispatch(fetchCollaborationsBegin());\n      return axios.get('api/v1/collaborations/?format=json')\n         .then(response => {\n            response.data.map(collaboration => {\n               collaborations[collaboration.id] = collaboration;\n               return collaboration;\n            });\n            dispatch(fetchCollaborationsSuccess(collaborations));\n         })\n         .catch(error => dispatch(fetchCollaborationsFailure(error))\n         );\n   }\n}","import React, { Component } from 'react';\r\nimport {\r\n   Badge,\r\n   ListGroupItem,\r\n   ListGroup,\r\n} from 'reactstrap';\r\n\r\nimport BaseModal from './AdditionalDataModal';\r\nimport { connect } from 'react-redux'\r\nimport './App.css';\r\n\r\nimport { toTitleCase, NBSP } from './helper'\r\n\r\nfunction getKeywordType(shortKeywordType) {\r\n   if (shortKeywordType === \"TK\") {\r\n      return { name: \"Topical\", color: \"primary\" }\r\n   }\r\n   if (shortKeywordType === \"AK\") {\r\n      return { name: \"Activity\", color: \"secondary\" }\r\n   }\r\n}\r\n\r\nfunction getKeywordSortOrder(shortKeywordSortOrder) {\r\n   if (shortKeywordSortOrder === \"HS\") {\r\n      return { name: \"High Level\", color: \"success\" }\r\n   }\r\n   if (shortKeywordSortOrder === \"MS\") {\r\n      return { name: \"Medium Level\", color: \"warning\" }\r\n   }\r\n   if (shortKeywordSortOrder === \"LS\") {\r\n      return { name: \"Low Level\", color: \"danger\" }\r\n   }\r\n}\r\n\r\nclass Keywords extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         showKeywordOverviewModal: false,\r\n         keywordOverviewModalTitle: 'User Keywords',\r\n         keywordOverviewModalBody: [],\r\n\r\n         showKeywordDetailModal: false,\r\n         keywordDetailModalTitle: 'User Keywords',\r\n         keywordDetailModalBody: [],\r\n      };\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.setState({ keywordOverviewModalBody: this.buildKeywordOverviewModalBody() })\r\n      this.buildDisplayText();\r\n   }\r\n\r\n   buildKeywordOverviewModalBody = () => {\r\n      let modalBody = [];\r\n      const keywordIDs = this.props.items;\r\n      keywordIDs.map(\r\n         keywordID => (\r\n            modalBody.push(\r\n            <ListGroupItem\r\n               key={keywordID} \r\n               tag=\"a\" \r\n               onClick={() => this.showKeywordExtendedData(keywordID)} \r\n               href=\"#0\" \r\n               action\r\n            >\r\n               {toTitleCase(this.props.keywords[keywordID].keywordName)}\r\n            </ListGroupItem>)))\r\n      modalBody = <ListGroup>{modalBody}</ListGroup>\r\n      return modalBody;\r\n   }\r\n\r\n   buildDisplayText = () => {\r\n      let displayText = ''\r\n      const keywordIDs = this.props.items;\r\n\r\n      keywordIDs.map(keywordID => (\r\n         displayText += toTitleCase(\r\n            this.props.keywords[keywordID].keywordName) + \", \"));\r\n      displayText = displayText.substring(0, displayText.length - 2)\r\n      if (displayText.length > this.props.displayLength)\r\n         displayText = displayText.substring(0, this.props.displayLength) + \"...\"\r\n      if (displayText.length > 0)\r\n         displayText = \r\n         <a \r\n            href=\"#0\"\r\n            key={keywordIDs} \r\n            onClick={\r\n               () => this.setState(\r\n                  {\r\n                     showKeywordOverviewModal: !this.state.showKeywordOverviewModal\r\n                  })\r\n               }\r\n         >\r\n            {displayText}\r\n         </a>\r\n      else\r\n         displayText = \"No Keywords\"\r\n      return displayText;\r\n   }\r\n\r\n   showKeywordExtendedData(id) {\r\n      let keywordInfo = this.props.keywords[id];\r\n\r\n      let title = \r\n         <div>\r\n            More Information on <b>{keywordInfo.keywordName.toLowerCase()}</b> keyword\r\n         </div>\r\n      let body = (\r\n         <div>\r\n            <Badge \r\n               color={getKeywordType(keywordInfo.keywordType).color}>\r\n               {getKeywordType(keywordInfo.keywordType).name}\r\n            </Badge>\r\n            {NBSP}\r\n            <Badge \r\n               color={getKeywordSortOrder(keywordInfo.sortOrder).color}>\r\n               {getKeywordSortOrder(keywordInfo.sortOrder).name}\r\n            </Badge>\r\n            <br />\r\n         <span>{keywordInfo.keywordDescription !== null ? keywordInfo.keywordDescription : \"No description provided.\"}</span>\r\n      </div>);\r\n      this.setState({ keywordDetailModalTitle: title, keywordDetailModalBody: body, showKeywordDetailModal: !this.state.showKeywordDetailModal });\r\n   }\r\n\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n         {this.buildDisplayText()}\r\n         <BaseModal\r\n            openStatus={this.state.showKeywordOverviewModal}\r\n            title={this.state.keywordOverviewModalTitle}\r\n            body={this.state.keywordOverviewModalBody}\r\n            toggle={() => this.setState(\r\n               {\r\n                  showKeywordOverviewModal: !this.state.showKeywordOverviewModal\r\n               })}\r\n            size='lg'\r\n         />\r\n         <BaseModal\r\n            openStatus={this.state.showKeywordDetailModal}\r\n            title={this.state.keywordDetailModalTitle}\r\n            body={this.state.keywordDetailModalBody}\r\n            toggle={() => this.setState(\r\n               {\r\n                  showKeywordDetailModal: !this.state.showKeywordDetailModal\r\n               })}\r\n            size='lg'\r\n         />\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   keywords: state.keywords.items,\r\n   keywordsLoading: state.keywords.loading,\r\n   keywordError: state.keywords.error,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Keywords);","import React, { Component } from 'react';\r\nimport {\r\n   Button,\r\n   Badge,\r\n   ListGroupItem,\r\n   ListGroup,\r\n} from 'reactstrap';\r\n\r\nimport BaseModal from './AdditionalDataModal';\r\nimport { connect } from 'react-redux'\r\nimport './App.css';\r\n\r\nimport { NBSP } from './helper'\r\n\r\nfunction getOrgType(shortOrgType) {\r\n   if (shortOrgType === \"IO\") {\r\n      return { name: \"Institution\", color: \"primary\" }\r\n   }\r\n   if (shortOrgType === \"CY\") {\r\n      return { name: \"City\", color: \"secondary\" }\r\n   }\r\n   if (shortOrgType === \"CO\") {\r\n      return { name: \"County\", color: \"success\" }\r\n   }\r\n   if (shortOrgType === \"NG\") {\r\n      return { name: \"NGO\", color: \"warning\" }\r\n   }\r\n   if (shortOrgType === \"RA\") {\r\n      return { name: \"Regional Agency\", color: \"info\" }\r\n   }\r\n}\r\n\r\nclass Organizations extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         showOrganizationOverviewModal: false,\r\n         organizationOverviewModalTitle: 'User Organizations',\r\n         organizationOverviewModalBody: [],\r\n\r\n         showOrganizationDetailModal: false,\r\n         organizationDetailModalTitle: 'User Organizations',\r\n         organizationDetailModalBody: [],\r\n      };\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.setState({ organizationOverviewModalBody: this.buildOrganizationOverviewModalBody() })\r\n      // this.buildDisplayText();\r\n   }\r\n\r\n   buildOrganizationOverviewModalBody = () => {\r\n      let modalBody = [];\r\n      const organizationIDs = this.props.items;\r\n      organizationIDs.map(\r\n         organizationID => (\r\n            modalBody.push(\r\n               <ListGroupItem\r\n                  key={organizationID}\r\n                  tag=\"a\"\r\n                  onClick={() => this.showOrgExtendedData(organizationID)}\r\n                  href=\"#0\"\r\n                  action\r\n               >\r\n                  {this.props.orgs[organizationID].orgNameUnique}\r\n               </ListGroupItem>)))\r\n      modalBody = <ListGroup>{modalBody}</ListGroup>\r\n      return modalBody;\r\n   }\r\n\r\n   buildDisplayText = () => {\r\n      let displayText = ''\r\n      const organizationIDs = this.props.items;\r\n\r\n      organizationIDs.map(organizationID => (\r\n         displayText += this.props.orgs[organizationID].orgNameUnique + \", \"));\r\n      displayText = displayText.substring(0, displayText.length - 2)\r\n      if (displayText.length > this.props.displayLength)\r\n         displayText = displayText.substring(0, this.props.displayLength) + \"...\"\r\n      if (displayText.length > 0)\r\n         displayText =\r\n            <a\r\n               href=\"#0\"\r\n               key={organizationIDs}\r\n               onClick={\r\n                  () => this.setState(\r\n                     {\r\n                        showOrganizationOverviewModal: !this.state.showOrganizationOverviewModal\r\n                     })\r\n               }\r\n            >\r\n               {displayText}\r\n            </a>\r\n      else\r\n         displayText = \"No Organizations\"\r\n      return displayText;\r\n   }\r\n\r\n   showOrgExtendedData(orgID) {\r\n      let orgInfo = this.props.orgs[orgID];\r\n      let title = \r\n         <div>\r\n            {this.props.orgs[orgID].orgNameUnique}\r\n            {NBSP}\r\n            <Badge color={getOrgType(orgInfo.orgType).color}>\r\n            {getOrgType(orgInfo.orgType).name}\r\n            </Badge>\r\n         </div>\r\n      let body = (orgInfo.website !== null && orgInfo.website !== \"\") ? (\r\n         <Button outline color=\"primary\" size=\"sm\" href={orgInfo.website} target=\"_blank\" rel=\"noopener noreferrer\">Visit Website</Button>\r\n      ) : \"No website provided\";\r\n      this.setState({ organizationDetailModalTitle: title, organizationDetailModalBody: body, showOrganizationDetailModal: !this.state.showOrganizationDetailModal });\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            {this.buildDisplayText()}\r\n            <BaseModal\r\n               openStatus={this.state.showOrganizationOverviewModal}\r\n               title={this.state.organizationOverviewModalTitle}\r\n               body={this.state.organizationOverviewModalBody}\r\n               toggle={() => this.setState(\r\n                  {\r\n                     showOrganizationOverviewModal: !this.state.showOrganizationOverviewModal\r\n                  })}\r\n               size='lg'\r\n            />\r\n            <BaseModal\r\n               openStatus={this.state.showOrganizationDetailModal}\r\n               title={this.state.organizationDetailModalTitle}\r\n               body={this.state.organizationDetailModalBody}\r\n               toggle={() => this.setState(\r\n                  {\r\n                     showOrganizationDetailModal: !this.state.showOrganizationDetailModal\r\n                  })}\r\n               size='lg'\r\n            />\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   orgs: state.orgs.items,\r\n   orgsLoading: state.orgs.loading,\r\n   orgError: state.orgs.error,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Organizations);","import React, { Component } from 'react';\r\nimport {\r\n   Button,\r\n   Badge,\r\n} from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faInfo } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport UserDetailModal from './AdditionalDataModal';\r\nimport Obfuscate from 'react-obfuscate'\r\nimport './App.css';\r\n\r\nimport { NBSP } from './helper'\r\n\r\nlibrary.add(faInfo);\r\n\r\n\r\nfunction getUserTypes(shortUserType) {\r\n   switch (shortUserType) {\r\n      case \"US\":\r\n         return { name: \"University Faculty/Staff\", color: \"primary\" };\r\n      case \"CS\":\r\n         return { name: \"City Staff\", color: \"secondary\" };\r\n      case \"CO\":\r\n         return { name: \"County Staff\", color: \"success\" }\r\n      case \"NS\":\r\n         return { name: \"NGO Staff\", color: \"danger\" }\r\n      case \"RS\":\r\n         return { name: \"Regional Staff\", color: \"warning\" }\r\n      default:\r\n         return { name: \"Error\", color: \"dark\" }\r\n   }\r\n}\r\n\r\nclass UserDetail extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         showUserDetails: false,\r\n         userDetailModalTitle: '',\r\n         userDetailModalBody: '',\r\n      }\r\n   }\r\n\r\n   showUserDetailModal = () => {\r\n      let user = this.props.user\r\n      let title = <div>About <b>{user.firstName} {user.lastName}</b></div>;\r\n      let body = <div>\r\n         <Badge color={getUserTypes(user.userType).color}>{getUserTypes(user.userType).name}</Badge><br />\r\n         <b>Email: </b><Obfuscate email={user.emailAddress} /><br />\r\n         {user.website ? <div><b>Website: </b>{NBSP}<a href={user.website} target=\"_blank\" rel=\"noopener noreferrer\">{user.website}</a></div> : \"\"}\r\n         {user.jobTitle ? <div><b>Job Title: </b>{NBSP}{user.jobTitle}</div> : \"\"}\r\n         {user.description ? <div><b>About: </b>{NBSP}{user.description.split(\"\\n\").map((i, key) => {\r\n            return <div key={key}>{i}< br /></div>;\r\n         })}</div> : \"\"}\r\n      </div>\r\n      this.setState({userDetailModalTitle: title, userDetailModalBody: body, showUserDetails: true})\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <Button onClick={() => this.showUserDetailModal()}><FontAwesomeIcon icon=\"info\" />{NBSP}</Button>\r\n            <UserDetailModal\r\n               openStatus={this.state.showUserDetails}\r\n               title={this.state.userDetailModalTitle}\r\n               body={this.state.userDetailModalBody}\r\n               toggle={() => this.setState({ showUserDetails: !this.state.showUserDetails})}\r\n               size={'lg'}\r\n            />\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default UserDetail","import React, { Component } from 'react';\r\nimport {\r\n   Button,\r\n   Modal,\r\n   ModalHeader,\r\n   ModalBody,\r\n   ModalFooter,\r\n   InputGroup,\r\n   InputGroupAddon,\r\n   Input,\r\n   UncontrolledPopover,\r\n   PopoverHeader,\r\n   PopoverBody\r\n} from 'reactstrap';\r\nimport './Modal.css';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nvar base64 = require('base-64');\r\n\r\n\r\nexport default class CopyQueryToClipboard extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         copyCode: false,\r\n         copyURL: false,\r\n      }\r\n   }\r\n   /* Passed in:\r\n      props:\r\n         - title\r\n         - body\r\n    */\r\n\r\n   render() {\r\n      const { openStatus, toggle, size, query, endpoint } = this.props;\r\n      const protocol = window.location.protocol;\r\n      const host = window.location.host;\r\n      const encodedQuery = base64.encode(endpoint + \"?\" + query)\r\n      const URL = protocol.concat(\"//\", host, \"/save/\", encodedQuery);\r\n      return (\r\n         <Modal isOpen={openStatus} toggle={toggle} centered size={size}>\r\n            <ModalHeader toggle={toggle}>Copy Query to Clipboard</ModalHeader>\r\n            <ModalBody>\r\n               Saving or sharing a query is easy! You can copy the code below to\r\n               your clipboard and paste it in on this page later, or you can copy\r\n               the sharable URL.< br />\r\n               <b>Copy code to clipboard</b>\r\n\r\n               <InputGroup>\r\n                  <Input disabled placeholder={encodedQuery} />\r\n                  <InputGroupAddon addonType=\"append\">\r\n\r\n                     <CopyToClipboard text={encodedQuery}\r\n                        onCopy={() => this.setState({ copyCode: true })}>\r\n                        <Button id=\"copyCodeToClipboard\" color=\"success\">Copy to clipboard</Button>\r\n                     </CopyToClipboard>\r\n                     <UncontrolledPopover trigger=\"focus\" placement=\"right\" target=\"copyCodeToClipboard\">\r\n                        <PopoverHeader>Copied Code to Clipboard</PopoverHeader>\r\n                        <PopoverBody>You can share or save this code to return to this query later!<br /><kbd>Ctrl</kbd> + <kbd>V</kbd> can retrieve the code from your clipboard.</PopoverBody>\r\n                     </UncontrolledPopover>\r\n                  </InputGroupAddon>\r\n               </InputGroup>\r\n               <br />\r\n               <b>Want to Copy a URL instead?</b>\r\n\r\n               <InputGroup>\r\n                  <Input disabled placeholder={URL} />\r\n                  <InputGroupAddon addonType=\"append\">\r\n\r\n                     <CopyToClipboard text={URL}\r\n                        onCopy={() => this.setState({ copyURL: true })}>\r\n                        <Button id=\"copyURLToClipboard\" color=\"success\">Copy to clipboard</Button>\r\n                     </CopyToClipboard>\r\n                     <UncontrolledPopover trigger=\"focus\" placement=\"right\" target=\"copyURLToClipboard\">\r\n                        <PopoverHeader>Copied URL to Clipboard</PopoverHeader>\r\n                        <PopoverBody>You can share or save this URL to return to this query later!<br /><kbd>Ctrl</kbd> + <kbd>V</kbd> can retrieve the code from your clipboard.</PopoverBody>\r\n                     </UncontrolledPopover>\r\n                  </InputGroupAddon>\r\n               </InputGroup>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" onClick={toggle}>Close</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      );\r\n   }\r\n}","import React, { Component } from 'react';\nimport {\n   Button, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon, Input\n} from 'reactstrap';\nimport './Modal.css';\n\n\nexport default class PasteQueryToClipboard extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         value: '',\n      }\n      this.runQuery = this.runQuery.bind(this)\n      this.handleChange = this.handleChange.bind(this)\n   }\n   /* Passed in:\n      props:\n         - title\n         - body\n    */\n\n   runQuery = () => {\n\n      let newLocation = \"save/\" + this.state.value\n      this.props.history.push(newLocation)\n   }\n\n   handleChange(event) {\n   this.setState({ value: event.target.value });\n   }\n\n   render() {\n      const { openStatus, toggle, size } = this.props;\n      return (\n         <Modal isOpen={openStatus} toggle={toggle} centered size={size}>\n            <ModalHeader toggle={toggle}>Paste Query from Clipboard</ModalHeader>\n            <ModalBody>\n               If you have a code, paste it below to convert it into a query.< br />\n               <b>Paste Code From Clipboard</b>\n\n               <InputGroup>\n                  <Input value={this.state.value} onChange={this.handleChange} autoFocus=\"true\"/>\n                  <InputGroupAddon addonType=\"append\">\n                     <Button color=\"success\" onClick={() => this.runQuery()}>Run Query</Button>\n                  </InputGroupAddon>\n               </InputGroup>\n            </ModalBody>\n            <ModalFooter>\n               <Button color=\"primary\" onClick={toggle}>Close</Button>\n            </ModalFooter>\n         </Modal>\n      );\n   }\n}","import React, { Component } from 'react';\r\nimport Select from 'react-select'\r\nimport {\r\n   Col, Row, Form,\r\n   FormGroup, Label,\r\n   Button, FormText, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, UncontrolledAlert\r\n} from 'reactstrap';\r\nimport '../Modal.css';\r\nimport CopyToClipBoardModal from '../copyQueryToClipboard'\r\nimport PasteFromCipboardModal from '../PasteQueryFromKeyboard'\r\nimport { withRouter } from \"react-router\";\r\nimport { NBSP, isEmpty } from '../helper';\r\nimport { buildQueryString } from './searchForUniversity'\r\nimport { connect } from 'react-redux'\r\n\r\nclass SearchForUniversityForm extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         queryData: this.props.selectedQuery,\r\n         validate: {\r\n            emailState: '',\r\n         },\r\n         selectedOption: null,\r\n         modal: false,\r\n         dropdownOpen: false,\r\n\r\n         copyToClipBoardToggle: false,\r\n         pasteFromClipBoardToggle: false,\r\n      }\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.univOptions = this.getUnivertisyTypes();\r\n      this.aKeywords = this.getKeywordTypes('AK');\r\n      this.tKeywords = this.getKeywordTypes('TK');\r\n      this.collaborations = this.getCollaborationsTypes();;\r\n   }\r\n\r\n   getUnivertisyTypes = () => {\r\n      const orgTypes = [\"IO\"]\r\n      let univOrgs = this.props.orgs.items.filter(function (org) { return orgTypes.includes(org.orgType)});\r\n      return univOrgs.map(org => ({label: org.orgNameUnique, value: org.id}));\r\n   }\r\n\r\n   getCollaborationsTypes = () => {\r\n      return this.props.collaborations.items.map(collaboration => ({ label: collaboration.collaborationName, value: collaboration.id }));\r\n   }\r\n\r\n   getKeywordTypes = (keywordType) => {\r\n      const keywordsFiltered = this.props.keywords.items.filter(function (keyword) { return keyword.keywordType === keywordType })\r\n      const keywordLow = keywordsFiltered.filter(function (keyword) { return keyword.sortOrder === \"LS\" });\r\n      const keywordMedium = keywordsFiltered.filter(function (keyword) { return keyword.sortOrder === \"MS\" });\r\n      const keywordHigh = keywordsFiltered.filter(function (keyword) { return keyword.sortOrder === \"HS\" });\r\n      let keywordLowNormalized = keywordLow.map(keyword => ({\r\n         label: keyword.keywordName,\r\n         value: keyword.id\r\n      }));\r\n      let keywordMediumNormalized = keywordMedium.map(keyword => ({\r\n         label: keyword.keywordName,\r\n         value: keyword.id\r\n      }));\r\n      let keywordHighNormalized = keywordHigh.map(keyword => ({\r\n         label: keyword.keywordName,\r\n         value: keyword.id\r\n      }));\r\n      let keywordOptionData =\r\n         [\r\n            {\r\n               label: 'High Level Keywords',\r\n               options: keywordHighNormalized,\r\n            },\r\n            {\r\n               label: 'Medium Level Keywords',\r\n               options: keywordMediumNormalized,\r\n            },\r\n            {\r\n               label: 'Low Level Keywords',\r\n               options: keywordLowNormalized,\r\n            },\r\n         ];\r\n         return keywordOptionData;\r\n   }\r\n\r\n   handleChange = (e) => {\r\n      let { name, value } = e.target;\r\n      if (e.target.type === \"checkbox\") {\r\n         value = e.target.checked;\r\n      }\r\n      const queryData = { ...this.state.queryData, [name]: value === null ? [] : value };\r\n      this.setState({ queryData });\r\n   };\r\n\r\n   handleSubmit(syntheticEvent) {\r\n      syntheticEvent.preventDefault();\r\n      this.props.submitHandler(this.state.queryData);\r\n\r\n   }\r\n\r\n\r\n\r\n   render() {\r\n\r\n      return (\r\n         <Form onSubmit={this.handleSubmit}>\r\n            <Col>\r\n               <FormGroup>\r\n                  <Label>University Selection</Label>\r\n                  <Select\r\n                     ref=\"universitySelection\"\r\n                     name=\"universitySelection\"\r\n\r\n                     value={this.state.queryData.selectedUniversities}\r\n                     options={this.univOptions}\r\n                     onChange={(val) => this.handleChange({ target: { name: 'selectedUniversities', value: val } })}\r\n                     isMulti={true}\r\n                     autoBlur={false}\r\n                     closeOnSelect={false}\r\n                     closeMenuOnSelect={false}\r\n                  />\r\n               </FormGroup>\r\n\r\n               <FormGroup>\r\n                  <Label>Activity Keywords Selection</Label>\r\n                  <Select\r\n                     ref=\"activityKeywords\"\r\n                     value={this.state.queryData.activityKeywords}\r\n                     options = {this.aKeywords}\r\n                     onChange={(val) => this.handleChange({ target: { name: 'activityKeywords', value: val } })}\r\n                     isMulti={true}\r\n                     autoBlur={false}\r\n                     closeOnSelect={false}\r\n                     closeMenuOnSelect={false}\r\n                  />\r\n                  <FormText>You can leave this blank to select all activity keywords.</FormText>\r\n               </FormGroup>\r\n\r\n               <FormGroup>\r\n                  <Label>Topical Keywords Selection</Label>\r\n                  <Select\r\n                     ref=\"topicalKeywords\"\r\n                     value={this.state.queryData.topicalKeywords}\r\n                     options={this.tKeywords}\r\n                     onChange={(val) => this.handleChange({ target: { name: 'topicalKeywords', value: val } })}\r\n                     isMulti={true}\r\n                     autoBlur={false}\r\n                     closeOnSelect={false}\r\n                     closeMenuOnSelect={false}\r\n                  />\r\n                  <FormText>You can leave this blank to select all topical keywords.</FormText>\r\n               </FormGroup>\r\n               \r\n               <FormGroup>\r\n                  <Label>Collaborations Selection</Label>\r\n                  <Select\r\n                     ref=\"collaborations\"\r\n                     value={this.state.queryData.collaborations}\r\n                     options={this.collaborations}\r\n                     onChange={(val) => this.handleChange({ target: { name: 'collaborations', value: val } })}\r\n                     isMulti={true}\r\n                     autoBlur={false}\r\n                     closeOnSelect={false}\r\n                     closeMenuOnSelect={false}\r\n                  />\r\n                  <FormText>You can leave this blank to select all topical keywords.</FormText>\r\n               </FormGroup>\r\n\r\n               <Row>\r\n                  {/* {isEmpty(this.state.queryData) ?\r\n                  <UncontrolledAlert color=\"info\">\r\n                     <b>FYI:</b> You need to select some parameters to save a query!\r\n                  </UncontrolledAlert> : null} */}\r\n               </Row>\r\n               <Row>\r\n                  <div>\r\n                     <div id=\"runQueryButton\" style={{ display: 'inline-block' }}>\r\n                     <Button color=\"success\"><span>Run Query</span></Button>\r\n                     </div>\r\n                  </div>\r\n                  {NBSP}\r\n                  <div>\r\n                     <Dropdown isOpen={this.state.dropdownOpen} toggle={() => this.setState(prevState => ({ dropdownOpen: !prevState.dropdownOpen }))}>\r\n                        <DropdownToggle caret>\r\n                           More Actions\r\n                        </DropdownToggle>\r\n                        <DropdownMenu>\r\n                           <DropdownItem disabled>Export Search (coming soon)</DropdownItem>\r\n                           <DropdownItem divider />\r\n                           <DropdownItem disabled={isEmpty(this.state.queryData)} onClick={() => this.setState({ copyToClipBoardToggle: !this.state.copyToClipBoardToggle })}>Save Query</DropdownItem>\r\n                           <DropdownItem onClick={() => this.setState({ pasteFromClipBoardToggle: !this.state.pasteFromClipBoardToggle })}>Paste Query</DropdownItem>\r\n                        </DropdownMenu>\r\n                     </Dropdown>\r\n                     <CopyToClipBoardModal\r\n                        openStatus={this.state.copyToClipBoardToggle}\r\n                        query={buildQueryString(this.state.queryData)}\r\n                        endpoint=\"univCollaborator\"\r\n                        toggle={() => this.setState(\r\n                           {\r\n                              copyToClipBoardToggle: !this.state.copyToClipBoardToggle\r\n                           })}\r\n                        size='lg'\r\n                     />\r\n                     <PasteFromCipboardModal\r\n                        openStatus={this.state.pasteFromClipBoardToggle}\r\n                        endpoint=\"univCollaborator\"\r\n                        history={this.props.history}\r\n                        toggle={() => this.setState(\r\n                           {\r\n                              pasteFromClipBoardToggle: !this.state.pasteFromClipBoardToggle\r\n                           })}\r\n                        size='lg'\r\n                     />\r\n                     \r\n                  </div>\r\n               </Row>\r\n            </Col>\r\n         </Form>\r\n      );\r\n   }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n   nav: state.nav,\r\n   orgs: state.orgs,\r\n   keywords: state.keywords,\r\n   collaborations: state.collaborations,\r\n   collaborators: state.collaborators,\r\n})\r\n\r\nSearchForUniversityForm = withRouter(SearchForUniversityForm);\r\n\r\nexport default connect(mapStateToProps)(SearchForUniversityForm);","export const Actions = {\r\n   TOGGLE_DEV_MODE: 'TOGGLE_DEV_MODE',\r\n   TOGGLE_NAV_BAR: 'TOGGLE_NAV_BAR',\r\n\r\n   TOGGLE_SEARCH_FOR_UNIV_COLLABORATOR: 'TOGGLE_SEARCH_FOR_UNIV_COLLABORATOR',\r\n}\r\n\r\nexport const toggleDevMode = () => ({\r\n   type: Actions.TOGGLE_DEV_MODE\r\n});\r\n\r\nexport const toggleNavBar = () => ({\r\n   type: Actions.TOGGLE_NAV_BAR\r\n});\r\n\r\nexport const toggleSearchForUnivCollaborator = () => ({\r\n   type: Actions.TOGGLE_SEARCH_FOR_UNIV_COLLABORATOR\r\n})","\r\nimport axios from \"axios\";\r\n\r\nexport const Actions = {\r\n   FETCH_COLLABORATORS_BEGIN: 'FETCH_COLLABORATORS_BEGIN',\r\n   FETCH_COLLABORATORS_SUCCESS: 'FETCH_COLLABORATORS_SUCCESS',\r\n   FETCH_COLLABORATORS_FAILURE: 'FETCH_COLLABORATORS_FAILURE',\r\n   SET_QUERY_STATEMENT: 'SET_QUERY_STATEMENT',\r\n   SET_URL: 'SET_URL'\r\n}\r\n\r\nexport const fetchUnivCollaboratorsBegin = () => ({\r\n   type: Actions.FETCH_COLLABORATORS_BEGIN\r\n});\r\n\r\nexport const fetchUnivCollaboratorsSuccess = (collaborators) => ({\r\n   type: Actions.FETCH_COLLABORATORS_SUCCESS,\r\n   payload: { collaborators }\r\n})\r\n\r\nexport const fetchUnivCollaboratorsFailure = (error) => ({\r\n   type: Actions.FETCH_COLLABORATORS_FAILURE,\r\n   payload: { error }\r\n})\r\n\r\nexport const setURL = (URL) => ({\r\n   type: Actions.SET_URL,\r\n   payload: { URL }\r\n})\r\n\r\nexport const setQueryStatement = (query) => ({\r\n   type: Actions.SET_QUERY_STATEMENT,\r\n   payload: { query }\r\n})\r\n\r\nexport const fetchUnivCollaborators = (url) => {\r\n   return dispatch => {\r\n      dispatch(fetchUnivCollaboratorsBegin());\r\n\r\n      axios.get(url)\r\n      .then (res => {dispatch(fetchUnivCollaboratorsSuccess(res.data));})\r\n         .catch(err => { dispatch(fetchUnivCollaboratorsFailure(err));});\r\n   }\r\n}","import React from 'react'\n\nimport { Helmet } from 'react-helmet'\n\nexport const delimiter = \"|\"\nexport const appTitle = \"4C Member Lookup\"\n\nexport default function Title(props) {\n   return (\n      <Helmet>\n         <title>{props.name} {delimiter} {appTitle}</title>\n      </Helmet>\n   )\n}","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Jumbotron, UncontrolledAlert\r\n} from 'reactstrap';\r\n\r\nimport SearchForCollaboratorForm from './searchForUniversityForm';\r\nimport { connect } from 'react-redux'\r\nimport { toggleSearchForUnivCollaborator } from '../actions/menuActions'\r\nimport { fetchUnivCollaborators, setURL, setQueryStatement } from '../actions/searchForUnivCollaboratorActions'\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from 'react-router-dom';\r\nimport { isEmpty } from '../helper'\r\nimport '../App.css';\r\nimport Title from '../head'\r\n\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faLifeRing } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faLifeRing);\r\n\r\nconst queryString = require('query-string');\r\n\r\n\r\nexport function buildURL(item) {\r\n   let org = item.selectedUniversities;\r\n   let activityKeywords = item.activityKeywords;\r\n   let topicalKeywords = item.topicalKeywords;\r\n   let collaborations = item.collaborations;\r\n   var url = \"/api/v1/users/?format=json\";\r\n   if (org) {\r\n      for (let i = 0; i < org.length; i++) {\r\n         url += '&organization=' + org[i].value;\r\n      }\r\n   }\r\n   if (activityKeywords) {\r\n      for (let i = 0; i < activityKeywords.length; i++) {\r\n         url += '&keywords=' + activityKeywords[i].value;\r\n      }\r\n   }\r\n   if (topicalKeywords) {\r\n      for (let i = 0; i < topicalKeywords.length; i++) {\r\n         url += '&keywords=' + topicalKeywords[i].value;\r\n      }\r\n   }\r\n   if (collaborations) {\r\n      for (let i = 0; i < collaborations.length; i++) {\r\n         url += '&collaborations=' + collaborations[i].value;\r\n      }\r\n   }\r\n   return url;\r\n\r\n}\r\n\r\nexport function buildQueryString(item) {\r\n   let org = item.selectedUniversities;\r\n   let activityKeywords = item.activityKeywords;\r\n   let topicalKeywords = item.topicalKeywords;\r\n   let collaborations = item.collaborations;\r\n   var params = \"\"\r\n   if (org) {\r\n      for (let i = 0; i < org.length; i++) {\r\n         params += 'org=' + org[i].value + '&';\r\n      }\r\n   }\r\n   if (activityKeywords) {\r\n      for (let i = 0; i < activityKeywords.length; i++) {\r\n         params += 'keyA=' + activityKeywords[i].value + '&';\r\n      }\r\n   }\r\n   if (topicalKeywords) {\r\n      for (let i = 0; i < topicalKeywords.length; i++) {\r\n         params += 'keyT=' + topicalKeywords[i].value + '&';\r\n      }\r\n   }\r\n   if (collaborations) {\r\n      for (let i = 0; i < collaborations.length; i++) {\r\n         params += 'clb=' + collaborations[i].value + '&';\r\n      }\r\n   }\r\n   params = params.substring(0, params.length - 1)\r\n   return params;\r\n}\r\n\r\nclass SearchForCollaborator extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         'selectedQueryStatements': {\r\n            activityKeywords: [],\r\n            topicalKeywords: [],\r\n            collaborations: [],\r\n            selectedUniversities: [],\r\n         },\r\n         readParams : false,\r\n         initialLoad: false\r\n      };\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.readParams = this.readParams.bind(this);\r\n   }\r\n\r\n\r\n   componentDidMount() {\r\n      if (isEmpty(this.props.collaborators.selectedQueryStatements)) {\r\n         this.readParams()\r\n         \r\n      }\r\n      else {\r\n         this.props.fetchUnivCollaborators(buildURL(this.props.collaborators.selectedQueryStatements));\r\n         this.props.history.push(`?${buildQueryString(this.props.collaborators.selectedQueryStatements)}`);\r\n         this.setState({ readParams: true })\r\n      }\r\n   }\r\n\r\n   readParams() {\r\n      let orgsA = [];\r\n      let aKey = [];\r\n      let tKey = [];\r\n      let cKey = [];\r\n      const parsed = queryString.parse(this.props.location.search);\r\n      if (parsed.keyA) {\r\n         let keyA = parsed.keyA;\r\n         if (!(Array.isArray(parsed.keyA))) {\r\n            keyA = [parsed.keyA]\r\n         }\r\n         keyA.map(keyID => aKey.push({ label: this.props.keywords.items[keyID].keywordName, value: keyID }))\r\n      }\r\n      if (parsed.keyT) {\r\n         let keyT = parsed.keyT;\r\n         if (!(Array.isArray(parsed.keyT))) {\r\n            keyT = [parsed.keyT]\r\n         }\r\n         keyT.map(keyID => tKey.push({ label: this.props.keywords.items[keyID].keywordName, value: keyID }))\r\n      }\r\n      if (parsed.clb) {\r\n         let clb = parsed.clb;\r\n         if (!(Array.isArray(parsed.clb))) {\r\n            clb = [parsed.clb]\r\n         }\r\n         clb.map(clbID => cKey.push({ label: this.props.collaborations.items[clbID].collaborationName, value: clbID }))\r\n      }\r\n      if (parsed.org) {\r\n         let orgL = parsed.org;\r\n         if (!(Array.isArray(orgL))) {\r\n            orgL = [parsed.org]\r\n         }\r\n         orgL.map(orgID => orgsA.push({ label: this.props.orgs.items[orgID].orgNameUnique, value: orgID }))\r\n      }\r\n      let selectedQueryStatements = {\r\n         activityKeywords: aKey,\r\n         topicalKeywords: tKey,\r\n         collaborations: cKey,\r\n         selectedUniversities: orgsA\r\n      }\r\n      this.props.setQueryStatement(selectedQueryStatements)\r\n      this.props.fetchUnivCollaborators(buildURL(selectedQueryStatements));\r\n      this.setState({readParams: true})\r\n   }\r\n\r\n   handleSubmit = (item) => {\r\n      if (this.props.collaborators.selectedQueryStatements === item) {\r\n         return\r\n      }\r\n      this.props.setQueryStatement(item);\r\n      this.props.history.push(`?${buildQueryString(item)}`);\r\n      this.props.fetchUnivCollaborators(buildURL(item));\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <Title name=\"Search for University Collaborator\" />\r\n            <Jumbotron fluid>\r\n               <Container fluid>\r\n                  <h1 className=\"display-3\">Looking for a Collaborator?</h1>\r\n                  <p className=\"lead\">Use the form below to query potential collaborators.</p>\r\n                  <UncontrolledAlert color=\"light\">\r\n                     <h4 className=\"alert-heading\"><FontAwesomeIcon icon=\"life-ring\" /> Need Help?</h4>\r\n                        <p>\r\n                           If you're looking for potential university collaborators, then you're in the right place! If instead, you want to search for NGO or government (city, regional, county), you'll need to go <Link to=\"govNGOCollaborator\">here</Link>.\r\n                        </p>\r\n                     <hr />\r\n                        <p className=\"mb-0\">\r\n                           <b>Universities</b><br />\r\n                           To select universities that you can collaborate with, use the <code>University Selection</code> dropdown. You can select universities and departments or, you can start typing in the field to filter universities. To select an entire univeristy, you'll need to individually select each department.\r\n                           <br /><b>Keywords</b><br />\r\n                           Selecting keywords is very similar. The only difference is the keywords are broken up into high level, medium level, and low level. You can think of a high level keyword as <b>Fruit</b>, a medium level keyword <b>Apple</b> and a low level keyword <b>Honeycrisp</b>. This way, you can more easily narrow your search.\r\n                           <br /><b>Collaborations</b><br />\r\n                           To select collaborations, it's identical to Universities, you can select a collaboration, or type to filter the results.\r\n                           <br /><b>There's More!</b><br />\r\n                           If you want to save a query for later or share it with someone, click the <code>More Actions</code> dropdown, and then select <code>Save Query</code> (Note, you can only select this button if there are no parameters selected).<br />\r\n                           If you have a code from someone else, you can use the <code>Paste Query</code> option to paste your qcode (query code) and the system will return the same query that was saved.\r\n                        </p>\r\n                  </UncontrolledAlert>\r\n                  {this.state.readParams? \r\n                  <SearchForCollaboratorForm \r\n                     selectedQuery={this.props.collaborators.selectedQueryStatements}\r\n                     submitHandler={this.handleSubmit}\r\n                     history={this.props.history}/>: null}\r\n               </Container>\r\n            </Jumbotron>\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   nav: state.nav,\r\n   orgs: state.orgs,\r\n   keywords: state.keywords,\r\n   collaborations: state.collaborations,\r\n   collaborators: state.univCollaborators,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   toggleSearchForUnivCollaborator,\r\n   fetchUnivCollaborators,\r\n   setURL,\r\n   setQueryStatement,\r\n};\r\n\r\n// function mapDispatchToProps(dispatch) {\r\n//    return bindActionCreators({ toggleSearchForCollaborator, fetchCollaborators}, dispatch)\r\n// }\r\n\r\nSearchForCollaborator = withRouter(SearchForCollaborator);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForCollaborator);","export default class Loader {\r\n   static loadingItems = {};\r\n   static loadingStatus = false;\r\n\r\n   static addLoadItem(key, value) {\r\n      var pair = {[key]: value}\r\n      this.loadingItems = {...this.loadingItems, ...pair}\r\n      // this.loadingStatus = this.calculateLoadingState();\r\n   }\r\n\r\n   static getLoadingItems() {\r\n      return Object.values(this.loadingItems)\r\n   }\r\n\r\n   static loadingState() {\r\n      return this.loadingStatus;\r\n   }\r\n\r\n   static calculateLoadingState(loader) {\r\n      let openStatus = [];\r\n      let loadValues = loader;\r\n      loadValues.map(loadInfo => openStatus.push(loadInfo.condition, loadInfo.error !== null))\r\n      openStatus = openStatus.every(x => x === false);\r\n      return openStatus\r\n   }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Table,\r\n   Spinner,\r\n   Alert,\r\n} from 'reactstrap';\r\nimport PaginationWrapper from '../Pagination'\r\nimport { connect } from 'react-redux'\r\nimport {fetchKeywords} from '../actions/keywordActions'\r\nimport {fetchOrganizations} from '../actions/organizationActions'\r\nimport { fetchCollaborations } from '../actions/collaborationsActions'\r\nimport Keyword from '../Keywords'\r\nimport Organizations from '../Organizations'\r\nimport UserDetail from '../User'\r\nimport SearchForCollaborator from './searchForUniversity'\r\nimport Loader from '../loader';\r\nimport Loading from '../Loading'\r\nimport '../App.css';\r\nimport Obfuscate from 'react-obfuscate'\r\nimport { isEmpty } from '../helper'\r\n\r\nclass TableView extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         pageItems: [],\r\n         pageSize: 30,\r\n      };\r\n      this.onChangePage = this.onChangePage.bind(this);\r\n   }\r\n  \r\n   componentDidMount() {\r\n      this.props.fetchKeywords();\r\n      this.props.fetchOrganizations();\r\n      this.props.fetchCollaborations();\r\n   }\r\n\r\n   onChangePage(pageOfItems) {\r\n      this.setState({ pageItems: pageOfItems })\r\n   }\r\n\r\n   renderDisplayUserItems = () => {\r\n      const items = this.state.pageItems;\r\n      let renderItems = \"\"\r\n      renderItems = items.map(item => (\r\n         <tr key={item.id}>\r\n            <th scope=\"row\">{item.firstName} {item.lastName}</th>\r\n            <td>{!this.props.orgsLoading || this.props.orgs === [] ? <Organizations items={item.organization} displayLength={20} /> : <Spinner color=\"primary\" />}</td>\r\n            <td><Obfuscate email={item.emailAddress} /></td>\r\n            <td>{!this.props.keywordsLoading || this.props.keywords === [] ? <Keyword items={item.keywords} displayLength={75}/> : <Spinner color=\"primary\" />}</td>\r\n            <td><UserDetail user={item}/></td>\r\n         </tr>\r\n      ));\r\n      return renderItems;\r\n   };\r\n\r\n   render() {\r\n      let loader = [\r\n         { friendlyName: 'Keywords', condition: this.props.keywordsLoading, error: this.props.keywordError },\r\n         { friendlyName: 'Organizations', condition: this.props.orgsLoading, error: this.props.orgError },\r\n         { friendlyName: 'Collaborations', condition: this.props.collaborationsLoading, error: this.props.collaborationsError },\r\n         { friendlyName: 'University Collaborators', condition: this.props.univCollaboratorsLoading, error: this.props.univCollaboratorsError },\r\n      ]\r\n      let loadStatus = Loader.calculateLoadingState(loader);      \r\n      return (\r\n         <>\r\n            <Loading body={loader} status={loadStatus} />\r\n            {(!this.props.keywordsLoading || this.props.keywords === []) && (!this.props.orgsLoading || this.props.orgs === []) && (!this.props.collaborationsLoading || this.props.collaborations === []) ? <SearchForCollaborator /> : null }\r\n         <Container fluid>\r\n            {this.props.univCollaborators.length === 0 ? \r\n               <Alert color=\"info\">\r\n                  <h4 className=\"alert-heading\">No Results</h4>\r\n                  <p>\r\n                     Hmm, it looks like there are no results with your\r\n                     current query. Try a different combination.\r\n                  </p>\r\n               </Alert> :\r\n               <>\r\n                  <Table hover responsive>\r\n                     <thead>\r\n                        <tr>\r\n                           <th>Name</th>\r\n                           <th>Organization(s)</th>\r\n                           <th>Email Address</th>\r\n                           <th>Keyword(s)</th>\r\n                           <th>More Information</th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {this.renderDisplayUserItems()}\r\n                     </tbody>\r\n                  </Table>\r\n                     <PaginationWrapper pageSize={this.state.pageSize} items={this.props.univCollaborators} onChangePage={this.onChangePage} />\r\n               </>\r\n            }\r\n         </Container>\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   keywords: state.keywords.items,\r\n   keywordsLoading: state.keywords.loading,\r\n   keywordError: state.keywords.error,\r\n\r\n   orgs: state.orgs.items,\r\n   orgsLoading: state.orgs.loading,\r\n   orgError: state.orgs.error,\r\n\r\n   univCollaborators: state.univCollaborators.items,\r\n   univCollaboratorsLoading: state.univCollaborators.loading,\r\n   univCollaboratorsError: state.univCollaborators.error,\r\n\r\n   collaborations: state.collaborations.items,\r\n   collaborationsLoading: state.collaborations.loading,\r\n   collaborationsError: state.collaborations.error,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   fetchKeywords,\r\n   fetchOrganizations,\r\n   fetchCollaborations\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableView);","import React, { Component } from 'react';\r\nimport {\r\n   Collapse,\r\n   Navbar,\r\n   NavbarToggler,\r\n   NavbarBrand,\r\n   Nav,\r\n   NavItem,\r\n   NavLink,\r\n   } from 'reactstrap';\r\nimport './App.css';\r\nimport { connect } from 'react-redux';\r\nimport { toggleNavBar, toggleDevMode, toggleSearchForUnivCollaborator } from './actions/menuActions'\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\n\r\nclass Navigation extends Component {\r\n\r\n   render() {\r\n      const {nav, settings} = this.props;\r\n      return (\r\n\r\n         <Navbar color=\"dark\" dark expand=\"md\">\r\n            <NavbarBrand tag={RRNavLink} exact to=\"/\">{settings.siteHeading}</NavbarBrand>\r\n            <NavbarToggler onClick={() => this.props.toggleNavBar()} />\r\n            <Collapse isOpen={nav.navOpen} navbar>\r\n               <Nav className=\"ml-auto\" navbar>\r\n                  <NavItem>\r\n                     <NavLink tag={RRNavLink} exact to=\"/univCollaborator\" activeClassName=\"active\">Search for a University Collaborator</NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                     <NavLink tag={RRNavLink} exact to=\"/govNGOCollaborator\" activeClassName=\"active\">Search for an NGO/Government Collaborator</NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                  </NavItem>\r\n               </Nav>\r\n            </Collapse>\r\n         </Navbar>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   nav: state.nav,\r\n   settings: state.settings,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   toggleNavBar,\r\n   toggleDevMode,\r\n   toggleSearchForUnivCollaborator\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation)","import React, { Component } from 'react';\r\nimport {\r\n   Alert,\r\n} from 'reactstrap';\r\nimport './App.css';\r\nimport { connect } from 'react-redux';\r\nimport {toggleDevMode} from './actions/menuActions'\r\n\r\nclass DebugMessage extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n         navIsOpen: false,\r\n         devModeOpen: true,\r\n      };\r\n   }\r\n\r\n   render() {\r\n      const { nav, settings } = this.props;\r\n      return (\r\n         <>\r\n         {settings.commitBranch === \"dev\" ? (\r\n               <Alert color=\"light\" isOpen={nav.devModeOpen} toggle={() => this.props.toggleDevMode()}>\r\n                  <h4 className=\"alert-heading\">Development Mode</h4>\r\n                  <p>\r\n                     The 4C database query utility is currently being <b>developed</b>. To view the repository, please visit: <a href=\"https://github.com/dgaiero/c4-website\">https://github.com/dgaiero/c4-website</a>\r\n                  </p>\r\n                  <p>\r\n                     Directory information contained on this website may be falsified while the site is under development.\r\n                  </p>\r\n                  <hr />\r\n                  <p className=\"mb-0\">\r\n                     The current running commit has a message of: <em>{settings.commitMessage}</em>< br />\r\n                     When providing support or feedback, please provide the following version information:< br />\r\n                     <code>{settings.commitBranch}/{settings.commitHash}</code>< br />\r\n                     <a href={'https://github.com/dgaiero/c4-website/tree/' + settings.commitHash} target=\"_blank\" rel=\"noopener noreferrer\">Open in Remote</a>\r\n                  </p>\r\n               </Alert>\r\n            ) : null}\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   nav: state.nav,\r\n   settings: state.settings,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   toggleDevMode\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DebugMessage);","import axios from 'axios';\r\n\r\nexport const Actions = {\r\n   FETCH_SETTINGS_BEGIN: 'FETCH_SETTINGS_BEGIN',\r\n   FETCH_SETTINGS_SUCCESS: 'FETCH_SETTINGS_SUCCESS',\r\n   FETCH_SETTINGS_FAILURE: 'FETCH_SETTINGS_FAILURE',\r\n}\r\n\r\nexport const fetchSettingsBegin = () => ({\r\n   type: Actions.FETCH_SETTINGS_BEGIN\r\n});\r\n\r\nexport const fetchSettingsSuccess = (settings) => ({\r\n   \r\n   type: Actions.FETCH_SETTINGS_SUCCESS,\r\n   payload: {settings}\r\n})\r\n\r\nexport const fetchSettingsFailure = (error) => ({\r\n   type: Actions.FETCH_SETTINGS_FAILURE,\r\n   payload: { error }\r\n})\r\n\r\nexport function fetchSettings() {\r\n   return dispatch => {\r\n      dispatch(fetchSettingsBegin());\r\n      return axios.get('api/v1/frontendParameters/1/?format=json')\r\n         .then(response => {dispatch(fetchSettingsSuccess(response.data))})\r\n         .catch(error => dispatch(fetchSettingsFailure(error)));\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Button,\r\n   Jumbotron,\r\n} from 'reactstrap';\r\nimport './App.css';\r\nimport './welcomeJumbotron.css'\r\nimport { connect } from 'react-redux';\r\n\r\nclass WelcomeJumbotron extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n         navIsOpen: false,\r\n         devModeOpen: true,\r\n      };\r\n   }\r\n   render() {\r\n      const { settings } = this.props;\r\n      return (\r\n\r\n         <Jumbotron className=\"welcome\" fluid>\r\n            <Container fluid>\r\n               <h1 className=\"display-3\">{settings.frontHeading}</h1>\r\n               <p className=\"lead\">{settings.frontMessage}</p>\r\n               <hr className=\"my-2\" />\r\n               <p>{settings.frontMessageSubText}</p>\r\n               <p className=\"lead\">\r\n                  <Button href={'mailto:' + settings.additionEmailAddress} color=\"secondary\">Request Addition to Database</Button>\r\n               </p>\r\n            </Container>\r\n         </Jumbotron>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   settings: state.settings,\r\n})\r\n\r\nexport default connect(mapStateToProps)(WelcomeJumbotron)","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Button,\r\n   Card,\r\n   CardDeck,\r\n   CardColumns,\r\n   CardFooter,\r\n   CardBody,\r\n   CardText,\r\n} from 'reactstrap';\r\nimport './App.css';\r\nimport './indexCards.css'\r\nimport { connect } from 'react-redux';\r\nimport WelcomeJumbotron from './WelcomeJumbotron';\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\n\r\nimport PasteFromCipboardModal from './PasteQueryFromKeyboard'\r\nimport Title from './head'\r\n\r\n\r\n\r\nconst UnderConstructionCard = () => {\r\n   return (\r\n      <Card className=\"cardHideOverflow card-no-border\" >\r\n            <div style={{ border: '1px solid rgb(33, 37, 41)', overflow: 'hidden', borderRadius: '.25rem', 'zIndex': '300', 'height': '100%', 'position': 'relative' }}>\r\n                <span className=\"newFeaturesBanner\"><b>New Features Coming Soon!</b></span>\r\n                <div className=\"underConstructionCardImage\">\r\n                <CardBody>\r\n                    <h5 className='cardTitle'>Under Construction</h5>\r\n                    <CardText>New features will be coming soon!</CardText>\r\n                </CardBody>\r\n                <CardFooter><Button color=\"secondary\" disabled>Button Coming Soon</Button></CardFooter>\r\n                </div>\r\n            </div>\r\n         </Card>\r\n   )\r\n}\r\n\r\nconst LookingForUnivCollaboratorCard = () => {\r\n   return (\r\n      <Card className=\"cardHideOverflow card-no-border\" >\r\n            <div style={{ border: '1px solid rgb(33, 37, 41)', overflow: 'hidden', borderRadius: '.25rem' }}>\r\n                <div className=\"lookingForUnivCollaboratorCardImage\">\r\n                <CardBody>\r\n                    <h5 className='cardTitle'>Looking for a University Collaborator?</h5>\r\n                    <CardText>Interested in finding a university to work on a project with?</CardText>\r\n\r\n                </CardBody>\r\n               <CardFooter><Button color=\"secondary\" tag={RRNavLink} exact to=\"/univCollaborator\">Search For a University Collaborator</Button></CardFooter>\r\n                </div>\r\n            </div>\r\n         </Card>\r\n   )\r\n}\r\n\r\nconst LookingForGovCollaboratorCard = () => {\r\n   return (\r\n      <Card className=\"cardHideOverflow card-no-border\" >\r\n         <div style={{ border: '1px solid rgb(33, 37, 41)', overflow: 'hidden', borderRadius: '.25rem' }}>\r\n            <div className=\"lookingForGovCollaboratorCardImage\">\r\n               <CardBody>\r\n                  <h5 className='cardTitle'>Looking for a Government Collaborator?</h5>\r\n                  <CardText>Interested in finding a city, NGO, etc... to work on a project with?</CardText>\r\n\r\n               </CardBody>\r\n               <CardFooter><Button color=\"secondary\" tag={RRNavLink} exact to=\"/govNGOCollaborator\">Search For a Government Collaborator</Button></CardFooter>\r\n            </div>\r\n         </div>\r\n      </Card>\r\n   )\r\n}\r\n\r\nclass FrontPageCards extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n         navIsOpen: false,\r\n         devModeOpen: true,\r\n         pasteFromClipBoardToggle: false,\r\n      };\r\n   }\r\n\r\n   PasteQCode = () => {\r\n      return (\r\n         <Card className=\"cardHideOverflow card-no-border\" >\r\n            <div style={{ border: '1px solid rgb(33, 37, 41)', overflow: 'hidden', borderRadius: '.25rem' }}>\r\n               <div className=\"PasteQCodeCardImage\">\r\n                  <CardBody>\r\n                     <h5 className='cardTitle'>Have a saved query?</h5>\r\n                     <CardText>If you have a query code from a perviously saved query, or a query from someone else, use the button below to retreive the parameters.</CardText>\r\n\r\n                  </CardBody>\r\n                  <CardFooter><Button color=\"secondary\" onClick={() => this.setState({ pasteFromClipBoardToggle: !this.state.pasteFromClipBoardToggle })}>Paste Code</Button></CardFooter>\r\n                  <PasteFromCipboardModal\r\n                     openStatus={this.state.pasteFromClipBoardToggle}\r\n                     endpoint=\"univCollaborator\"\r\n                     history={this.props.history}\r\n                     toggle={() => this.setState(\r\n                        {\r\n                           pasteFromClipBoardToggle: !this.state.pasteFromClipBoardToggle\r\n                        })}\r\n                     size='lg'\r\n                  />\r\n               </div>\r\n            </div>\r\n         </Card>\r\n      )\r\n   }\r\n\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n         <Title name=\"Home\" />\r\n         <WelcomeJumbotron />\r\n            <Container>\r\n               <CardDeck style={{ marginBottom: '32px' }}>\r\n                  <LookingForUnivCollaboratorCard />\r\n                  <LookingForGovCollaboratorCard />\r\n                  {/* <UnderConstructionCard /> */}\r\n                  <this.PasteQCode />\r\n               </CardDeck>\r\n            </Container>\r\n        </>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   settings: state.settings,\r\n})\r\n\r\n// FrontPageCards = withRouter(FrontPageCards)\r\n\r\nexport default connect(mapStateToProps)(FrontPageCards)","import React, { Component } from 'react';\r\nimport {\r\n   Jumbotron,\r\n   Button\r\n} from 'reactstrap';\r\nimport { NavLink as RRNavLink, Redirect } from 'react-router-dom';\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from 'react-redux'\r\n\r\nimport { setQueryStatement } from './actions/searchForUnivCollaboratorActions'\r\nimport Title from './head'\r\nvar base64 = require('base-64');\r\n\r\nclass ParseSaveQuery extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { seconds: 5 }\r\n      this.tick = this.tick.bind(this)\r\n      this.props.setQueryStatement({\r\n         activityKeywords: [],\r\n         topicalKeywords: [],\r\n          collaborations: [],\r\n         selectedUniversities: [],\r\n      })\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.timer = setInterval(this.tick, 1000);\r\n   }\r\n\r\n   tick() {\r\n      if (this.state.seconds > 0) {\r\n         this.setState({ seconds: this.state.seconds - 1 })\r\n      } else {\r\n         clearInterval(this.timer);\r\n      }\r\n   }\r\n\r\n   render() {\r\n      const { match, history } = this.props;\r\n      if (!match.params.id) {\r\n         history.replace({ pathname: '/' });\r\n      }\r\n      let query = match.params.id;\r\n      let decoded_query;\r\n      try {\r\n      decoded_query = base64.decode(query);\r\n      }\r\n      catch {\r\n         return (\r\n            <>\r\n            <Title name=\"No Match Found\" />\r\n               <Jumbotron>\r\n                  <h1 className=\"display-3\">No Match Found!</h1>\r\n                  <p className=\"lead\">A match could not be found for the code <code>{query}</code></p>\r\n                  <hr className=\"my-2\" />\r\n                  <p>You will be redirected to the homepage in {this.state.seconds} seconds</p>\r\n                  {this.state.seconds === 0 ? <Redirect to='/' /> : null}\r\n                  <p className=\"lead\">\r\n                     <Button tag={RRNavLink} exact to=\"/\" color=\"primary\">Go Home</Button>\r\n                  </p>\r\n               </Jumbotron>\r\n            </>\r\n         )\r\n      }      \r\n      return (\r\n         <>\r\n            <Title name=\"Match Found\" />\r\n            <Jumbotron>\r\n               <h1 className=\"display-3\">Match Found!</h1>\r\n               <p className=\"lead\">A match could be found for the code <code>{query}</code></p>\r\n               <hr className=\"my-2\" />\r\n               <p>You will be redirected to <code>{decoded_query}</code> in {this.state.seconds} seconds</p>\r\n               {/* {this.state.seconds === 0 ? <Redirect to={decoded_query} /> : null} */}\r\n               <Redirect to={\"/\" + decoded_query}/>\r\n            </Jumbotron>\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   collaborators: state.collaborators,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   setQueryStatement,\r\n};\r\n\r\nParseSaveQuery = withRouter(ParseSaveQuery);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ParseSaveQuery);","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Jumbotron,\r\n} from 'reactstrap';\r\nimport './App.css';\r\nimport Title from './head'\r\n\r\nclass NotFound extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n         navIsOpen: false,\r\n         devModeOpen: true,\r\n      };\r\n   }\r\n   render() {\r\n      const { pathname } = this.props.location;\r\n      return (\r\n         <>\r\n         <Title name=\"404\" />\r\n         <Jumbotron fluid>\r\n            <Container fluid>\r\n               <h1 className=\"display-3\">404</h1>\r\n               <p className=\"lead\">Page not found</p>\r\n               <hr className=\"my-2\" />\r\n               <p>The requested URL was not found on this server</p>\r\n               <p className=\"lead\">\r\n                  The path <code>{pathname}</code> could not be found in this application.\r\n               </p>\r\n            </Container>\r\n         </Jumbotron>\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nexport default NotFound","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Jumbotron,\r\n} from 'reactstrap';\r\nimport './App.css';\r\nimport Title from './head'\r\n\r\nclass ComingSoon extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n         navIsOpen: false,\r\n         devModeOpen: true,\r\n      };\r\n   }\r\n   render() {\r\n      const { pathname } = this.props.location;\r\n      return (\r\n         <>\r\n         <Title name=\"Coming Soon\" />\r\n         <Jumbotron fluid>\r\n            <Container fluid>\r\n               <h1 className=\"display-3\">Coming Soon</h1>\r\n               <p className=\"lead\">Feature Coming Soon!</p>\r\n               <hr className=\"my-2\" />\r\n               {/* <p>The selected feature is coming soon!</p> */}\r\n               <p className=\"lead\">\r\n                  Hang tight, <code>{pathname}</code> feature is coming soon.\r\n               </p>\r\n            </Container>\r\n         </Jumbotron>\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nexport default ComingSoon","import React, { Component } from 'react';\r\nimport Loading from './Loading'\r\nimport './App.css';\r\nimport { connect } from 'react-redux';\r\nimport TableView from './universityCollaborators/TableView'\r\nimport Navigation from './Navigation'\r\nimport DebugMessage from './DebugMessage'\r\nimport { fetchSettings }from './actions/settingsActions'\r\nimport FrontPageCards from './indexPage';\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport ParseSaveQuery from './ParseSaveQuery'\r\nimport Loader from './loader';\r\nimport NotFound from './404'\r\nimport ComingSoon from './ComingSoon'\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = \"https://api.centralcoastclimate.org\"\r\n// axios.defaults.baseURL = \"http://192.168.86.218:8000\"\r\n\r\nclass RootContainer extends Component {\r\n\r\n   componentDidMount() {\r\n      this.props.fetchSettings();\r\n   }\r\n\r\n   render() {\r\n      let loader = [\r\n         { friendlyName: 'Settings', condition: this.props.settings.loading, error: this.props.settings.error },\r\n      ]\r\n      let loadStatus = Loader.calculateLoadingState(loader);\r\n      return (\r\n         <main className=\"App content\">\r\n            <Loading body={loader} status={loadStatus} />\r\n                  <DebugMessage />\r\n                  <Navigation />\r\n                  <Switch>\r\n                     <Route path=\"/\" exact component={FrontPageCards} />\r\n                     <Route path=\"/save/:id?\" component={ParseSaveQuery} />\r\n                     <Route path=\"/univCollaborator/\" exact component={TableView} />\r\n                     <Route path=\"/govNGOCollaborator/\" exact component={ComingSoon} />\r\n                     <Route component={NotFound} status={404}/>\r\n                  </Switch>\r\n         </main>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   settings: state.settings,\r\n   keywords: state.keywords,\r\n   orgs: state.orgs,\r\n   collaborators: state.collaborators\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   fetchSettings,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RootContainer)","import React from 'react';\r\nimport './App.css';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport RootContainer from './RootContainer';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nconst App = ({ store }) => (\r\n   <Provider store={store}>\r\n      <Router>\r\n         <Route path=\"/:filter?\" component={RootContainer} />\r\n      </Router>\r\n   </Provider>\r\n);\r\n\r\n\r\nApp.propTypes = {\r\n   store: PropTypes.object.isRequired\r\n}\r\n\r\nexport default App;","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport {\n   Alert,\n   Button,\n   Nav,\n   NavItem,\n   NavLink,\n   Modal,\n   ModalHeader,\n   ModalFooter,\n   ModalBody, TabContent, TabPane, Card, CardText, CardDeck, CardBody, CardFooter, CardColumns, CardImg,\n   Spinner\n} from 'reactstrap';\nimport './App.css';\nimport './appInfo.css';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport Obfuscate from \"react-obfuscate\";\nvar base64 = require('base-64');\n\nclass AppInfo extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         hash: 'Loading',\n         loadVersionHash: true,\n         commitError: null,\n\n         license: 'Loading',\n         loadLicense: true,\n         licenseError: null,\n\n         moduleLicense: 'Loading',\n         loadModuleLicense: true,\n         moduleLicenseError: null,\n\n         activeTab: '1'\n      };\n      this.getCommitHash = this.getCommitHash.bind(this);\n      this.getLicense = this.getLicense.bind(this);\n      this.getModuleLicenses = this.getModuleLicenses.bind(this);\n      this.toggle = this.toggle.bind(this);\n   }\n\n   componentDidMount() {\n      this.getCommitHash();\n      this.getLicense();\n      this.getModuleLicenses();\n   }\n\n   getCommitHash() {\n      axios.get('https://api.github.com/repos/dgaiero/c4-website/commits/gh-pages')\n         .then(res => {\n            this.setState({ hash: res.data.sha, loadVersionHash: false });\n         })\n         .catch(err => this.setState({ commitError: err.response }))\n   }\n\n   getLicense() {\n      axios.get('https://api.github.com/repos/dgaiero/c4-website/license')\n         .then(res => {\n            this.setState({ license: res.data, loadLicense: false });\n         })\n         .catch(err => this.setState({ licenseError: err.response }))\n   }\n\n   getModuleLicenses() {\n      axios.get('https://raw.githubusercontent.com/dgaiero/c4-website/dev/webserver/c4Lookup/c4frontend/oLICENSE')\n         .then(res => {\n            this.setState({ moduleLicense: res.data, loadModuleLicense: false });\n         })\n         .catch(err => this.setState({ moduleLicenseError: err.response }))\n   }\n\n   toggle(tab) {\n      if (this.state.activeTab !== tab) {\n         this.setState({\n            activeTab: tab\n         });\n      }\n   }\n\n   tab1Content = () => {\n      return (\n         <>\n            <Alert color=\"dark\">\n               <h4 className=\"alert-heading\">Application Frontend and Backend Versions</h4>\n               <p>\n                  This application is broken up into a frontend service\n                  (this website) and a backend API service.\n                  Each service has its own version information.\n                              </p>\n               <hr />\n               <p className=\"mb-0\">\n                  When providing feedback or if you have a question or\n                  issue with this website, please make sure to refer to\n                                 <b> both</b> version tags.\n                              </p>\n            </Alert>\n\n            <div style={{ marginBottom: '16px' }}>\n               <CardDeck>\n                  <Card>\n                     <CardBody>\n                        <h5 className='cardTitle'>Backend API</h5>\n                        <CardText>\n                           <b>Branch: </b>{this.props.settings.commitBranch}< br />\n                           <b>Commit Hash: </b><code>{this.props.settings.commitHash}</code><br />\n                        </CardText>\n\n                     </CardBody>\n                     <CardFooter><a href={'https://github.com/dgaiero/c4-website/tree/' + this.props.settings.commitHash} target=\"_blank\" rel=\"noopener noreferrer\">Open in Remote</a></CardFooter>\n                  </Card>\n                  <Card>\n                     <CardBody>\n                        <h5 className='cardTitle'>Frontend Service</h5>\n                        <b>Commit Hash: </b><code>{this.state.hash}</code><br />\n\n                     </CardBody>\n                     <CardFooter><a href={'https://github.com/dgaiero/c4-website/tree/' + this.state.hash} target=\"_blank\" rel=\"noopener noreferrer\">Open in Remote</a></CardFooter>\n                  </Card>\n               </CardDeck>\n            </div>\n            Designed and developed by Dominic Gaiero (<Obfuscate email=\"4cwebsite@dgaiero.me\" />)\n         </>\n      )\n   }\n\n   tab2Content = () => {\n      return (\n         <>\n         {this.state.licenseError !== null ? \"An error occured fetching the license\" :\n            !this.state.loadLicense ? \n            <>\n               <b>This application is licensed under the {this.state.license.license.name}</b>\n               <pre className=\"license form-control\">{base64.decode(this.state.license.content)}</pre>\n            </>\n         : <Spinner color=\"primary\" />\n         }\n         </>\n      )\n   }\n\n   tab3Content = () => {\n      return (\n         <>\n            {this.state.moduleLicenseError !== null ? \"An error occured fetching the license\" :\n               !this.state.loadModuleLicense ?\n                  <>\n                     <b>The following is all of the licenses of software used in this application</b>\n                     <pre className=\"license form-control\">{this.state.moduleLicense}</pre>\n                  </>\n                  : <Spinner color=\"primary\" />\n            }\n         </>\n      )\n   }\n\n   tab4Content = () => {\n      return (\n         <>\n            <CardColumns>\n               <Card>\n                  <CardImg top width=\"100%\" src=\"https://images.unsplash.com/photo-1478486982180-2de2fafa19f9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80\" alt=\"Construction Image\" />\n                  <CardBody>\n                     <CardText><span>Photo by <a href=\"https://unsplash.com/@thatsmrbio?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Matthew Hamilton</a> on <a href=\"/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></CardText>\n                  </CardBody>\n               </Card>\n               <Card>\n                  <CardImg top width=\"100%\" src=\"https://images.unsplash.com/photo-1552664730-d307ca884978?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjE3MzYxfQ&auto=format&fit=crop&w=500&q=80\" alt=\"Collaboration Image\" />\n                  <CardBody>\n                     <CardText><span>Photo by <a href=\"https://unsplash.com/@youxventures?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">You X Ventures</a> on <a href=\"/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></CardText>\n                  </CardBody>\n               </Card>\n               <Card>\n                  <CardImg top width=\"100%\" src=\"https://images.unsplash.com/photo-1491772135384-20292e4b5ea1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80\" alt=\"Waves Image\" />\n                  <CardBody>\n                     <CardText><span>Photo by <a href=\"https://unsplash.com/@johnonolan?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">John O'Nolan</a> on <a href=\"/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></CardText>\n                  </CardBody>\n               </Card>\n               <Card>\n                  <CardImg top width=\"100%\" src=\"https://images.unsplash.com/photo-1556761175-b413da4baf72?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80\" alt=\"Waves Image\" />\n                  <CardBody>\n                     <CardText><span>Photo by <a href=\"https://unsplash.com/@austindistel?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Austin Distel</a> on <a href=\"/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></CardText>\n                  </CardBody>\n               </Card>\n               <Card>\n                  <CardImg top width=\"100%\" src=\"https://images.unsplash.com/photo-1515879218367-8466d910aaa4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80\" alt=\"Waves Image\" />\n                  <CardBody>\n                     <CardText><span>Photo by <a href=\"https://unsplash.com/@cdr6934?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Chris Ried</a> on <a href=\"/s/photos/programming?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></CardText>\n                  </CardBody>\n               </Card>\n            </CardColumns>\n         </>\n      )\n   }\n\n   render() {\n      const { openStatus, toggle } = this.props;\n      return (\n         <>\n            <Modal isOpen={openStatus} toggle={toggle} size=\"lg\">\n               <ModalHeader toggle={toggle}>Application Information</ModalHeader>\n               <ModalBody>\n                  <div>\n                     <Nav pills>\n                        <NavItem>\n                           <NavLink\n                              href=\"#0\"\n                              className={classnames({ active: this.state.activeTab === '1' })}\n                              onClick={() => { this.toggle('1'); }}>\n                              About Application\n                           </NavLink>\n                        </NavItem>\n                        <NavItem>\n                           <NavLink\n                              href=\"#0\"\n                              className={classnames({ active: this.state.activeTab === '2' })}\n                              onClick={() => { this.toggle('2'); }}>\n                              Application License\n                           </NavLink>\n                        </NavItem>\n                        <NavItem>\n                           <NavLink\n                              href=\"#0\"\n                              className={classnames({ active: this.state.activeTab === '3' })}\n                              onClick={() => { this.toggle('3'); }}>\n                              Other Licenses\n                           </NavLink>\n                        </NavItem>\n                        <NavItem>\n                           <NavLink\n                              href=\"#0\"\n                              className={classnames({ active: this.state.activeTab === '4' })}\n                              onClick={() => { this.toggle('4'); }}>\n                              Photo Credits\n                           </NavLink>\n                        </NavItem>\n                     </Nav>\n                     < br />\n                     <TabContent activeTab={this.state.activeTab}>\n                        <TabPane tabId=\"1\">\n                           {this.tab1Content()}\n                        </TabPane>\n                        <TabPane tabId=\"2\">\n                           {this.tab2Content()}\n                        </TabPane>\n                        <TabPane tabId=\"3\">\n                           {this.tab3Content()}\n                        </TabPane>\n                        <TabPane tabId=\"4\">\n                           {this.tab4Content()}\n                        </TabPane>\n                     </TabContent>\n                  </div>\n               </ModalBody>\n               <ModalFooter>\n                  <Button color=\"primary\" onClick={toggle}>Close</Button>\n               </ModalFooter>\n            </Modal>\n         </>\n      )\n   }\n\n}\n\nconst mapStateToProps = state => ({\n   settings: state.settings,\n})\n\nexport default connect(mapStateToProps)(AppInfo)","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n} from 'reactstrap';\r\n\r\nimport './App.css';\r\nimport { NBSP } from './helper';\r\nimport './footer.css'\r\nimport AppInfo from './AppInfo'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faInfoCircle);\r\n\r\nclass Footer extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         showAppInfoModal: false,\r\n      };\r\n   }\r\n   render() {\r\n      return (\r\n         <footer className=\"footer mt-auto py-3\" style={{ backgroundColor: '#F8F9FA' }}>\r\n            <Container fluid className=\"clearfix\">\r\n               <div className=\"float-left\">\r\n                  <AppInfo\r\n                     openStatus={this.state.showAppInfoModal}\r\n                     toggle={() => this.setState(\r\n                        {\r\n                           showAppInfoModal: !this.state.showAppInfoModal\r\n                        })}\r\n                  />\r\n                  <a\r\n                     href=\"#0\"\r\n                     onClick={\r\n                        () => this.setState(\r\n                           {\r\n                              showAppInfoModal: !this.state.showAppInfoModal\r\n                           })\r\n                     }\r\n                  ><FontAwesomeIcon icon=\"info-circle\" /></a>\r\n                  {NBSP}<span className=\"text-muted\">|</span>{NBSP}\r\n                  <span className=\"text-muted\">Copyright {'\\u00A9'} 2019 Central Coast Climate Collaborative </span>\r\n               </div>\r\n               <div className=\"float-right\">\r\n                  <p className=\"c4-icon text-muted\"></p>\r\n                  {NBSP}\r\n                  <a href=\"https://www.centralcoastclimate.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Visit main website</a>\r\n               </div>\r\n            </Container>\r\n         </footer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps)(Footer)","import { Actions } from '../actions/settingsActions'\r\n\r\nconst initialState = {\r\n   siteHeading: 'Loading...',\r\n   frontHeading: 'Loading...',\r\n   frontMessage: 'Loading...',\r\n   frontMessageSubText: 'Loading...',\r\n   additionEmailAddress: 'Loading...',\r\n   commitBranch: 'master',\r\n   commitHash: 'Loading...',\r\n   commitMessage: 'Loading...',\r\n   loading: true,\r\n   error: null,\r\n}\r\n\r\nexport default function settingsReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case Actions.FETCH_SETTINGS_BEGIN:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            error: null,\r\n         }\r\n      case Actions.FETCH_SETTINGS_SUCCESS:\r\n         return {\r\n            ...state,\r\n            ...action.payload.settings,\r\n            loading: false,\r\n         }\r\n      case Actions.FETCH_SETTINGS_FAILURE:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload.error,\r\n            items: [],\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import {Actions} from '../actions/keywordActions'\r\n\r\nconst initialState = {\r\n   items: [],\r\n   loading: true,\r\n   error: null\r\n}\r\n\r\nexport default function keywordsReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case Actions.FETCH_KEYWORDS_BEGIN:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            error: null,\r\n         }\r\n      case Actions.FETCH_KEYWORDS_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            items: action.payload.keywords,\r\n         }\r\n      case Actions.FETCH_KEYWORDS_FAILURE:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload.error,\r\n            items: [],\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import {Actions} from '../actions/organizationActions'\r\n\r\nconst initialState = {\r\n   items: [],\r\n   loading: true,\r\n   error: null\r\n}\r\n\r\nexport default function organizationsReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case Actions.FETCH_ORGANIZATIONS_BEGIN:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            error: null,\r\n         }\r\n      case Actions.FETCH_ORGANIZATIONS_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            items: action.payload.organizations,\r\n         }\r\n      case Actions.FETCH_ORGANIZATIONS_FAILURE:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload.error,\r\n            items: [],\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import {Actions} from '../actions/menuActions'\r\n\r\nconst initialState = {\r\n   searchForCollaborator: false,\r\n   devModeOpen: false,\r\n   navOpen: false,\r\n}\r\n\r\nexport default function menuReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case Actions.TOGGLE_SEARCH_FOR_COLLABORATOR:\r\n         return {\r\n            ...state,\r\n            searchForCollaborator: !state.searchForCollaborator,\r\n         }\r\n      case Actions.TOGGLE_DEV_MODE:\r\n         return {\r\n            ...state,\r\n            devModeOpen: !state.devModeOpen\r\n         };\r\n      case Actions.TOGGLE_NAV_BAR:\r\n         return {\r\n            ...state,\r\n            navOpen: !state.navOpen\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import { Actions } from '../actions/collaborationsActions'\n\nconst initialState = {\n   items: [],\n   loading: true,\n   error: null\n}\n\nexport default function collaborationsReducer(state = initialState, action) {\n   switch (action.type) {\n      case Actions.FETCH_COLLABORATIONS_BEGIN:\n         return {\n            ...state,\n            loading: true,\n            error: null,\n         }\n      case Actions.FETCH_COLLABORATIONS_SUCCESS:\n         return {\n            ...state,\n            loading: false,\n            items: action.payload.collaborations,\n         }\n      case Actions.FETCH_COLLABORATIONS_FAILURE:\n         return {\n            ...state,\n            loading: false,\n            error: action.payload.error,\n            items: [],\n         }\n      default:\n         return state;\n   }\n}","import { Actions } from '../actions/searchForUnivCollaboratorActions'\r\n\r\nconst initialState = {\r\n   items: [],\r\n   loading: true,\r\n   error: null,\r\n   url: '',\r\n   'selectedQueryStatements': {\r\n      activityKeywords: [],\r\n      topicalKeywords: [],\r\n      collaborations: [],\r\n      selectedUniversities: [],\r\n   }\r\n}\r\n\r\nexport default function univCollaboratorsReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case Actions.FETCH_COLLABORATORS_BEGIN:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            error: null,\r\n         }\r\n      case Actions.FETCH_COLLABORATORS_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            items: action.payload.collaborators,\r\n         }\r\n      case Actions.FETCH_COLLABORATORS_FAILURE:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload.error,\r\n            items: [],\r\n         }\r\n      case Actions.SET_QUERY_STATEMENT:\r\n         return {\r\n            ...state,\r\n            selectedQueryStatements: action.payload.query,\r\n         }\r\n      case Actions.SET_URL:\r\n         return {\r\n            ...state,\r\n            url: action.payload.url,\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import {combineReducers} from 'redux'\r\n\r\nimport settings from './settingsReducer'\r\nimport keywords from './keywordReducer'\r\nimport orgs from './organizationReducer'\r\nimport nav from './menuReducer'\r\nimport collaborations from './collaborationsReducer'\r\nimport univCollaborators from './searchForUnivCollaboratorReducer'\r\n\r\n\r\nexport default combineReducers({\r\n   settings,\r\n   keywords,\r\n   orgs,\r\n   nav,\r\n   univCollaborators,\r\n   collaborations,\r\n\r\n});","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n   window.location.hostname === 'localhost' ||\n   // [::1] is the IPv6 localhost address.\n   window.location.hostname === '[::1]' ||\n   // 127.0.0.1/8 is considered localhost for IPv4.\n   window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n   )\n);\n\nexport default function register() {\n   if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n         // Our service worker won't work if PUBLIC_URL is on a different origin\n         // from what our page is served on. This might happen if a CDN is used to\n         // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n         return;\n      }\n\n      window.addEventListener('load', () => {\n         const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n         if (isLocalhost) {\n            // This is running on localhost. Lets check if a service worker still exists or not.\n            checkValidServiceWorker(swUrl);\n\n            // Add some additional logging to localhost, pointing developers to the\n            // service worker/PWA documentation.\n            navigator.serviceWorker.ready.then(() => {\n               console.log(\n                  'This web app is being served cache-first by a service ' +\n                  'worker. To learn more, visit https://goo.gl/SC7cgQ'\n               );\n            });\n         } else {\n            // Is not local host. Just register service worker\n            registerValidSW(swUrl);\n         }\n      });\n   }\n}\n\nfunction registerValidSW(swUrl) {\n   navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n         registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n               if (installingWorker.state === 'installed') {\n                  if (navigator.serviceWorker.controller) {\n                     // At this point, the old content will have been purged and\n                     // the fresh content will have been added to the cache.\n                     // It's the perfect time to display a \"New content is\n                     // available; please refresh.\" message in your web app.\n                     console.log('New content is available; please refresh.');\n                  } else {\n                     // At this point, everything has been precached.\n                     // It's the perfect time to display a\n                     // \"Content is cached for offline use.\" message.\n                     console.log('Content is cached for offline use.');\n                  }\n               }\n            };\n         };\n      })\n      .catch(error => {\n         console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n   // Check if the service worker can be found. If it can't reload the page.\n   fetch(swUrl)\n      .then(response => {\n         // Ensure service worker exists, and that we really are getting a JS file.\n         if (\n            response.status === 404 ||\n            response.headers.get('content-type').indexOf('javascript') === -1\n         ) {\n            // No service worker found. Probably a different app. Reload the page.\n            navigator.serviceWorker.ready.then(registration => {\n               registration.unregister().then(() => {\n                  window.location.reload();\n               });\n            });\n         } else {\n            // Service worker found. Proceed as normal.\n            registerValidSW(swUrl);\n         }\n      })\n      .catch(() => {\n         console.log(\n            'No internet connection found. App is running in offline mode.'\n         );\n      });\n}\n\nexport function unregister() {\n   if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n         registration.unregister();\n      });\n   }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport Footer from './Footer'\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './reducers/rootReducer'\nimport thunk from 'redux-thunk'; \nimport { Provider } from 'react-redux';\n\nimport registerServiceWorker from './registerServiceWorker';\n\nconst createStoreWithMiddleware = applyMiddleware(thunk)(createStore);\nconst store = createStoreWithMiddleware(rootReducer);\n\nReactDOM.render(\n   [<App store={store} key={1} />, <Provider store={store} key={2} ><Footer store={store}/></Provider>], document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}