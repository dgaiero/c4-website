{"version":3,"sources":["ParseSaveQuery.js","helper.js","AdditionalDataModal.js","Collaborations.js","Keywords.js","loader.js","LoadingModal.js","Loading.js","Organizations.js","Pagination.js","4CCollaborators/HowToSearchModal.js","copyQueryToClipboard.js","PasteQueryFromKeyboard.js","Export.js","User.js","4CCollaborators/searchFor4CCollaboratorForm.js","4CCollaborators/searchFor4CCollaborator.js","actions/collaborationsActions.js","actions/keywordActions.js","actions/organizationActions.js","4CCollaborators/TableView.js","Department.js","actions/searchForCollaboratorActions.js","Collaborators/HowToSearchModal.js","Collaborators/SearchForCollaboratorForm.js","Collaborators/SearchForCollaborator.js","Collaborators/TableView.js","WelcomeJumbotron.js","indexPage.js","CollaboratorLinksResourcesModal.js","actions/menuActions.js","Navigation.js","404.js","universityCollaborators/HowToSearchModal.js","universityCollaborators/searchForUniversityForm.js","universityCollaborators/searchForUniversity.js","universityCollaborators/TableView.js","actions/settingsActions.js","RootContainer.js","App.js","AppInfo.js","Footer.js","registerServiceWorker.js","reducers/searchFor4CMemberReducer.js","reducers/collaborationsReducer.js","reducers/keywordReducer.js","reducers/menuReducer.js","reducers/organizationReducer.js","reducers/settingsReducer.js","reducers/searchForUnivCollaboratorReducer.js","reducers/searchForCollaboratorReducer.js","reducers/rootReducer.js","index.js","actions/searchFor4CMemberActions.js","actions/searchForUnivCollaboratorActions.js","head.js"],"names":["base64","require","ParseSaveQuery","props","_this","Object","_Users_quentinmonasterial_Projects_c4_website_webserver_c4Lookup_c4frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_super","call","state","seconds","tick","bind","_Users_quentinmonasterial_Projects_c4_website_webserver_c4Lookup_c4frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__","setUnivQueryStatement","activityKeywords","topicalKeywords","collaborations","selectedUniversities","setOrgQueryStatement","selectedOrganization","timer","setInterval","setState","clearInterval","_this$props","match","history","re","params","id","replace","pathname","decoded_query","query","Buffer","toString","decode","_unused","react__WEBPACK_IMPORTED_MODULE_9___default","a","createElement","Fragment","_head__WEBPACK_IMPORTED_MODULE_10__","name","reactstrap__WEBPACK_IMPORTED_MODULE_5__","className","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","to","reactstrap__WEBPACK_IMPORTED_MODULE_6__","tag","RRNavLink","exact","color","test","Component","mapDispatchToProps","withRouter","connect","collaborators","toTitleCase","str","txt","charAt","toUpperCase","substr","toLowerCase","isEmptyUniv","queryData","empty","length","isEmptyOrg","NBSP","AdditionalDataModal","openStatus","toggle","size","title","body","react_default","Modal","isOpen","centered","ModalHeader","ModalBody","ModalFooter","Button","onClick","getCollaborationsFromIDs","collaborationIDs","displayText","map","collaboration","collaborationName","substring","Collaborations","classCallCheck","buildCollaborationsOverviewModalBody","modalBody","items","ID","push","ListGroupItem","key","showCollaborationsExtendedData","ListGroup","buildDisplayText","IDs","displayLength","href","showCollaborationsOverviewModal","collaborationsOverviewModalTitle","collaborationsOverviewModalBody","info","ListGroupItemHeading","ListGroupItemText","collaborationDescription","split","i","_this2","AdditionalDataModal_AdditionalDataModal","collaborationsLoading","loading","collaborationsError","error","getKeywordType","shortKeywordType","getKeywordSortOrder","shortKeywordSortOrder","getKeywordsFromIDs","keywordIDs","keywords","keyword","keywordName","Keywords","buildKeywordOverviewModalBody","keywordID","showKeywordExtendedData","showKeywordOverviewModal","keywordOverviewModalTitle","keywordOverviewModalBody","keywordInfo","Badge","keywordType","sortOrder","keywordDescription","keywordsLoading","keywordError","Loader","value","pair","defineProperty","loadingItems","objectSpread2","values","loadingStatus","loader","loadInfo","condition","every","x","LoadingModal","Alert","Loading","errorModalOpenToggle","errorModalOpenFlag","status","errorModalTitle","errorModalBody","render","setTimeout","bodyText","entries","response","data","forEach","_ref","_ref2","slicedToArray","friendlyName","Spinner","showErrorInfo","buildErrorMessage","_this3","renderContainer","LoadingModal_LoadingModal","loadingText","settings","orgs","getOrgType","shortOrgType","getOrganizationsFromIDs","organizationIDs","organizations","organization","orgNameUnique","Organizations","buildOrganizationOverviewModalBody","organizationID","showOrgExtendedData","orgName","showOrganizationOverviewModal","organizationOverviewModalTitle","organizationOverviewModalBody","showOrganizationDetailModal","organizationDetailModalTitle","organizationDetailModalBody","orgID","orgInfo","orgType","website","outline","target","rel","orgsLoading","orgError","PaginationWrapper","pager","setPage","initialPage","prevProps","prevState","page","pageSize","totalPages","getPager","pageOfItems","slice","startIndex","endIndex","onChangePage","totalItems","currentPage","startPage","endPage","Math","ceil","min","pages","toConsumableArray","Array","keys","Pagination","aria-label","PaginationItem","disabled","PaginationLink","first","previous","index","active","next","last","React","defaultProps","library","add","faLifeRing","HowToSearchModal","modal","index_es","icon","react_router_dom","CopyQueryToClipboard","copyCode","copyURL","endpoint","protocol","window","location","host","encodedQuery","encode","from","URL","concat","InputGroup","Input","placeholder","InputGroupAddon","addonType","lib","text","onCopy","UncontrolledPopover","trigger","placement","PopoverHeader","PopoverBody","PasteQueryToClipboard","runQuery","newLocation","assertThisInitialized","handleChange","event","onChange","autoFocus","Export","csvData","fileName","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","type","Blob","FileSaver","getUserTypes","shortUserType","UserDetail","showUserDetailModal","user","firstName","lastName","userType","obfuscate_default","email","emailAddress","jobTitle","description","userDetailModalTitle","userDetailModalBody","showUserDetails","SearchFor4CCollaboratorForm","getOrgTypes","orgTypes","filter","org","includes","label","getCollaborationsTypes","getKeywordTypes","keywordsFiltered","keywordLow","keywordMedium","keywordHigh","keywordLowNormalized","keywordMediumNormalized","options","e","_e$target","checked","selectedQuery","validate","emailState","selectedOption","dropdownOpen","copyToClipBoardToggle","pasteFromClipBoardToggle","handleSubmit","exportData","orgOptions","aKeywords","tKeywords","syntheticEvent","preventDefault","submitHandler","exportUsers","First Name","Last Name","Email Address","Website","User Type","Job Title","Description","ExportData","Form","onSubmit","Row","Col","FormGroup","Label","react_select_browser_esm","ref","val","isMulti","autoBlur","closeOnSelect","closeMenuOnSelect","noGutters","style","display","Dropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","divider","isEmpty","copyQueryToClipboard_CopyQueryToClipboard","buildQueryString","PasteQueryFromKeyboard_PasteQueryToClipboard","nav","C4Collaborators","queryString","buildURL","item","url","SearchForCollaborator","selectedQueryStatements","setQueryStatement","fetch4CMembers","readParams","initialLoad","orgsA","aKey","tKey","cKey","parsed","parse","search","keyA","isArray","keyID","keyT","clb","clbID","orgL","head","Jumbotron","fluid","Container","sm","order","offset","_4CCollaborators_HowToSearchModal","searchFor4CCollaboratorForm","setURL","Actions","FETCH_COLLABORATIONS_BEGIN","FETCH_COLLABORATIONS_SUCCESS","FETCH_COLLABORATIONS_FAILURE","fetchCollaborationsBegin","fetchCollaborationsSuccess","payload","fetchCollaborationsFailure","fetchCollaborations","dispatch","axios","get","then","catch","FETCH_KEYWORDS_BEGIN","FETCH_KEYWORDS_SUCCESS","FETCH_KEYWORDS_FAILURE","fetchKeywordsBegin","fetchKeywordsSuccess","fetchKeywordsFailure","fetchKeywords","FETCH_ORGANIZATIONS_BEGIN","FETCH_ORGANIZATIONS_SUCCESS","FETCH_ORGANIZATIONS_FAILURE","fetchOrganizationsBegin","fetchOrganizationsSuccess","fetchOrganizationsFailure","fetchOrganizations","TableView","toggleToastInter","toggleToast","renderDisplayUserItems","pageItems","scope","src_Organizations","src_Keywords","src_Collaborations","User","scrollToTable","scroller","scrollTo","duration","smooth","C4CollaboratorsLoading","C4CollaboratorsError","loadStatus","calculateLoadingState","position","zIndex","Toast","toastOpen","top","right","ToastHeader","ToastBody","src_Loading","searchFor4CCollaborator","modules","Table","hover","responsive","src_Pagination","showToast","Department","department","CollabActions","FETCH_COLLABORATORS_BEGIN","FETCH_COLLABORATORS_SUCCESS","FETCH_COLLABORATORS_FAILURE","SET_QUERY_STATEMENT","SET_URL","TOGGLE_TOAST","SearchForCollaboratorForm","fetchCollaborators","Collaborators_HowToSearchModal","Collaborators_SearchForCollaboratorForm","res","err","filterResults","src_Department","collaboratorsLoading","collaboratorsError","Collaborators_SearchForCollaborator","WelcomeJumbotron","navIsOpen","devModeOpen","frontHeading","frontMessage","frontMessageSubText","LookingForCollaboratorCard","Card","CardBody","CardText","FrontPageCards","PasteQCode","src_WelcomeJumbotron","CardDeck","indexPage_LookingForCollaboratorCard","CollaboratorsLinksResourcesModal","closeCollaboratorLinksResourcesModal","TOGGLE_DEV_MODE","TOGGLE_NAV_BAR","TOGGLE_SEARCH_FOR_UNIV_COLLABORATOR","toggleSearchForUnivCollaborator","Navigation","Navbar","dark","expand","NavbarBrand","siteHeading","NavbarToggler","toggleNavBar","Collapse","navOpen","navbar","Nav","NavItem","NavLink","cursor","activeClassName","openCollaboratorLinksResourcesModal","toggleDevMode","NotFound","SearchForUniversityForm","getUnivertisyTypes","univOptions","univCollaborators","SearchForUnivCollaborator","fetchUnivCollaborators","universityCollaborators_HowToSearchModal","searchForUniversityForm","filterUnivResults","univCollaboratorsLoading","univCollaboratorsError","searchForUniversity","FETCH_SETTINGS_BEGIN","FETCH_SETTINGS_SUCCESS","FETCH_SETTINGS_FAILURE","fetchSettingsBegin","fetchSettingsSuccess","fetchSettingsFailure","defaults","baseURL","RootContainer","handleCollaboratorLinksResourcesModalOpen","showCollaboratorLinksResourcesModal","handleCollaboratorLinksResourcesModalClose","fetchSettings","CollaboratorLinksResourcesModal","src_Navigation","react_router","path","component","UnivTableView","C4TableView","orgCollaborators","ReactGA","initialize","pageview","createBrowserHistory","listen","set","App","store","es","AppInfo","tab1Content","marginBottom","commitBranch","commitHash","CardFooter","hash","tab2Content","licenseError","loadLicense","license","content","tab3Content","moduleLicenseError","loadModuleLicense","moduleLicense","tab4Content","CardColumns","CardImg","width","src","alt","loadVersionHash","commitError","activeTab","getCommitHash","getLicense","getModuleLicenses","sha","_this4","tab","_this5","pills","classnames","TabContent","TabPane","tabId","faInfoCircle","Footer","showAppInfoModal","backgroundColor","src_AppInfo","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","initialState","searchForCollaborator","additionEmailAddress","commitMessage","combineReducers","arguments","undefined","action","TOGGLE_SEARCH_FOR_COLLABORATOR","UnivActions","UNIV_FETCH_COLLABORATORS_BEGIN","UNIV_FETCH_COLLABORATORS_SUCCESS","UNIV_FETCH_COLLABORATORS_FAILURE","UNIV_SET_QUERY_STATEMENT","UNIV_SET_URL","UNIV_TOGGLE_TOAST","C4Actions","C4_FETCH_COLLABORATORS_BEGIN","C4_FETCH_COLLABORATORS_SUCCESS","C4_FETCH_COLLABORATORS_FAILURE","C4_SET_QUERY_STATEMENT","C4_SET_URL","C4_TOGGLE_TOAST","middleware","thunk","composeEnhancers","composeWithDevTools","trace","traceLimit","createStore","rootReducer","applyMiddleware","apply","ReactDOM","src_App_0","src_Footer","document","getElementById","process","origin","addEventListener","fetch","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","__webpack_require__","d","__webpack_exports__","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","Title","react_helmet__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","delimiter","appTitle"],"mappings":"oPAgBIA,EAASC,EAAQ,IAEfC,oDACH,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CAAEC,QAAS,GACxBP,EAAKQ,KAAOR,EAAKQ,KAAKC,KAAVR,OAAAS,EAAA,EAAAT,CAAAD,IACZA,EAAKD,MAAMY,sBAAsB,CAC9BC,iBAAkB,GAClBC,gBAAiB,GACjBC,eAAgB,GAChBC,qBAAsB,KAEzBf,EAAKD,MAAMiB,qBAAqB,CAC7BJ,iBAAkB,GAClBC,gBAAiB,GACjBC,eAAgB,GAChBG,qBAAsB,KAdTjB,uDAkBnB,WACGG,KAAKe,MAAQC,YAAYhB,KAAKK,KAAM,yBAGvC,WACOL,KAAKG,MAAMC,QAAU,EACtBJ,KAAKiB,SAAS,CAAEb,QAASJ,KAAKG,MAAMC,QAAU,IAE9Cc,cAAclB,KAAKe,6BAIzB,WACG,IAAAI,EAA2BnB,KAAKJ,MAAxBwB,EAARD,EAAQC,MAAOC,EAAfF,EAAeE,QACTC,EAAK,4EAENF,EAAMG,OAAOC,IACfH,EAAQI,QAAQ,CAAEC,SAAU,MAE/B,IAGIC,EAHAC,EAAQR,EAAMG,OAAOC,GAEzBI,EADY,IAAIC,EAAOD,EAAO,OAClBE,SAAS,QAErB,IACGH,EAAgBlC,EAAOsC,OAAOH,GAEjC,MAAAI,GACG,OACGC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACGH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOC,KAAK,mBACZL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACGN,EAAAC,EAAAC,cAAA,MAAIK,UAAU,aAAd,wBACAP,EAAAC,EAAAC,cAAA,KAAGK,UAAU,QAAb,6CAA8DP,EAAAC,EAAAC,cAAA,YAAOP,IACrEK,EAAAC,EAAAC,cAAA,MAAIK,UAAU,SACdP,EAAAC,EAAAC,cAAA,sDAA8CnC,KAAKG,MAAMC,QAAzD,YACwB,IAAvBJ,KAAKG,MAAMC,QAAgB6B,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUC,GAAG,MAAS,KAClDT,EAAAC,EAAAC,cAAA,KAAGK,UAAU,QACVP,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQC,IAAKC,IAAWC,OAAK,EAACJ,GAAG,IAAIK,MAAM,WAA3C,cAMf,OAAKzB,EAAG0B,KAAKrB,GAmBVM,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACGH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOC,KAAK,gBACZL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACGN,EAAAC,EAAAC,cAAA,MAAIK,UAAU,aAAd,gBACAP,EAAAC,EAAAC,cAAA,KAAGK,UAAU,QAAb,uCAAwDP,EAAAC,EAAAC,cAAA,YAAOP,IAC/DK,EAAAC,EAAAC,cAAA,MAAIK,UAAU,SACdP,EAAAC,EAAAC,cAAA,sCAA6BF,EAAAC,EAAAC,cAAA,YAAOR,GAApC,OAA8D3B,KAAKG,MAAMC,QAAzE,YAEA6B,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUC,GAAI,IAAMf,MAzBvBM,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACGH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOC,KAAK,mBACZL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACGN,EAAAC,EAAAC,cAAA,MAAIK,UAAU,aAAd,wBACAP,EAAAC,EAAAC,cAAA,KAAGK,UAAU,QAAb,oCAAqDP,EAAAC,EAAAC,cAAA,YAAOP,IAC5DK,EAAAC,EAAAC,cAAA,KAAGK,UAAU,QAAb,eAAgCP,EAAAC,EAAAC,cAAA,YAAOb,EAAGQ,aAC1CG,EAAAC,EAAAC,cAAA,MAAIK,UAAU,SACdP,EAAAC,EAAAC,cAAA,sDAA8CnC,KAAKG,MAAMC,QAAzD,YACwB,IAAvBJ,KAAKG,MAAMC,QAAgB6B,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUC,GAAG,MAAS,KAClDT,EAAAC,EAAAC,cAAA,KAAGK,UAAU,QACVP,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQC,IAAKC,IAAWC,OAAK,EAACJ,GAAG,IAAIK,MAAM,WAA3C,qBA1EQE,aAoGvBC,EAAqB,CACxB1C,0BACAK,0BAGHlB,EAAiBwD,YAAWxD,GAEbyD,gBAXS,SAAAjD,GAAK,MAAK,CAC/BkD,cAAelD,EAAMkD,gBAUgBH,EAAzBE,CAA6CzD,ghBC7HrD,SAAS2D,EAAYC,GACzB,OAAOA,EAAI9B,QACR,SACA,SAAU+B,GACP,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,OAAO,GAAGC,gBAKrD,IAAMC,EAAc,SAACC,GACzB,IAAIC,GAAQ,EAaZ,OAZ0C,IAAtCD,EAAUrD,iBAAiBuD,SAC5BD,GAAQ,GAE8B,IAArCD,EAAUpD,gBAAgBsD,SAC3BD,GAAQ,GAE6B,IAApCD,EAAUnD,eAAeqD,SAC1BD,GAAQ,GAEmC,IAA1CD,EAAUlD,qBAAqBoD,SAChCD,GAAQ,GAEJA,GAIGE,EAAa,SAACH,GACxB,IAAIC,GAAQ,EAaZ,OAZ0C,IAAtCD,EAAUrD,iBAAiBuD,SAC5BD,GAAQ,GAE8B,IAArCD,EAAUpD,gBAAgBsD,SAC3BD,GAAQ,GAE6B,IAApCD,EAAUnD,eAAeqD,SAC1BD,GAAQ,GAEmC,IAA1CD,EAAUhD,qBAAqBkD,SAChCD,GAAQ,GAEJA,GAGGG,EAAO,mDCtCCC,qKAQlB,WACG,IAAAhD,EAAkDnB,KAAKJ,MAA/CwE,EAARjD,EAAQiD,WAAYC,EAApBlD,EAAoBkD,OAAQC,EAA5BnD,EAA4BmD,KAAMC,EAAlCpD,EAAkCoD,MAAOC,EAAzCrD,EAAyCqD,KACzC,OACGC,EAAAvC,EAAAC,cAACuC,EAAA,EAAD,CAAOC,OAAQP,EAAYC,OAAQA,EAAQO,UAAQ,EAACN,KAAMA,GACvDG,EAAAvC,EAAAC,cAAC0C,EAAA,EAAD,CAAaR,OAAQA,GAASE,GAC9BE,EAAAvC,EAAAC,cAAC2C,EAAA,EAAD,KACIN,GAEJC,EAAAvC,EAAAC,cAAC4C,EAAA,EAAD,KACGN,EAAAvC,EAAAC,cAAC6C,EAAA,EAAD,CAAQjC,MAAM,UAAUkC,QAASZ,GAAjC,kBAjBkCpB,cCQ1C,SAASiC,EAAyBC,EAAkBxE,GACxD,IAAIyE,EAAc,GAKlB,OAJAD,EAAiBE,IAAI,SAAAC,GAAa,OAC/BF,GAAe9B,EAAY3C,EAAe2E,GAAeC,mBAAqB,OAEjFH,EAAcA,EAAYI,UAAU,EAAGJ,EAAYpB,OAAS,OAIzDyB,oDACH,SAAAA,EAAY7F,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAAyF,IAChB5F,EAAAI,EAAAC,KAAAF,KAAMJ,IAaT+F,qCAAuC,WACpC,IAAIC,EAAY,GAShB,OARY/F,EAAKD,MAAMiG,MACnBR,IACD,SAAAS,GAAE,OACCF,EAAUG,KACJtB,EAAAvC,EAAAC,cAAC6D,EAAA,EAAD,CAAeC,IAAKH,GAChBjG,EAAKqG,+BAA+BJ,OAEpDF,EAAYnB,EAAAvC,EAAAC,cAACgE,EAAA,EAAD,KAAYP,IAvBR/F,EA2BnBuG,iBAAmB,WAChB,IAAIhB,EAAc,GACZiB,EAAMxG,EAAKD,MAAMiG,MAwBvB,OAtBAQ,EAAIhB,IAAI,SAAAS,GAAE,OACPV,GAAe9B,EACZzD,EAAKD,MAAMe,eAAemF,GAAIP,mBAAqB,QACzDH,EAAcA,EAAYI,UAAU,EAAGJ,EAAYpB,OAAS,IAC5CA,OAASnE,EAAKD,MAAM0G,gBACjClB,EAAcA,EAAYI,UAAU,EAAG3F,EAAKD,MAAM0G,eAAiB,OAEnElB,EADCA,EAAYpB,OAAS,EAEnBS,EAAAvC,EAAAC,cAAA,KACGoE,KAAK,KACLN,IAAKI,EACLpB,QACG,kBAAMpF,EAAKoB,SACR,CACGuF,iCAAkC3G,EAAKM,MAAMqG,oCAIrDpB,GAGO,qBAlDjBvF,EAAKM,MAAQ,CACVqG,iCAAiC,EACjCC,iCAAkC,sBAClCC,gCAAiC,IALpB7G,uDASnB,WACGG,KAAKiB,SAAS,CAAEyF,gCAAiC1G,KAAK2F,yCACtD3F,KAAKoG,iEA6CR,SAA+B5E,GAC5B,IAAImF,EAAO3G,KAAKJ,MAAMe,eAAea,GACrC,OACGiD,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACGqC,EAAAvC,EAAAC,cAACyE,EAAA,EAAD,KACItD,EAAYqD,EAAKpB,oBAErBd,EAAAvC,EAAAC,cAAC0E,EAAA,EAAD,KACIF,EAAKG,yBAA2BrC,EAAAvC,EAAAC,cAAA,WAAKsC,EAAAvC,EAAAC,cAAA,0BAAqB+B,EAAMyC,EAAKG,yBAAyBC,MAAM,MAAM1B,IAAI,SAAC2B,EAAGf,GAChH,OAAOxB,EAAAvC,EAAAC,cAAA,KAAG8D,IAAKA,GAAMe,MACZ,kDAOxB,WAAS,IAAAC,EAAAjH,KACN,OACGyE,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACIpC,KAAKoG,mBACN3B,EAAAvC,EAAAC,cAAC+E,EAAD,CACG9C,WAAYpE,KAAKG,MAAMqG,gCACvBjC,MAAOvE,KAAKG,MAAMsG,iCAClBjC,KAAMxE,KAAKG,MAAMuG,gCACjBrC,OAAQ,kBAAM4C,EAAKhG,SAChB,CACGuF,iCAAkCS,EAAK9G,MAAMqG,mCAEnDlC,KAAK,eAtFSrB,aAmGdG,cANS,SAAAjD,GAAK,MAAK,CAC/BQ,eAAgBR,EAAMQ,eAAekF,MACrCsB,sBAAuBhH,EAAMQ,eAAeyG,QAC5CC,oBAAqBlH,EAAMQ,eAAe2G,QAG9BlE,CAAyBqC,YC3GxC,SAAS8B,EAAeC,GACrB,MAAyB,OAArBA,EACM,CAAElF,KAAM,UAAWS,MAAO,WAEX,OAArByE,EACM,CAAElF,KAAM,WAAYS,MAAO,kBADrC,EAKH,SAAS0E,EAAoBC,GAC1B,MAA8B,OAA1BA,EACM,CAAEpF,KAAM,aAAcS,MAAO,WAET,OAA1B2E,EACM,CAAEpF,KAAM,eAAgBS,MAAO,WAEX,OAA1B2E,EACM,CAAEpF,KAAM,YAAaS,MAAO,eADtC,EAKI,SAAS4E,EAAmBC,EAAYC,GAC5C,IAAIzC,EAAc,GAKlB,OAJAwC,EAAWvC,IAAI,SAAAyC,GAAO,OACnB1C,GAAe9B,EAAYuE,EAASC,GAASC,aAAc,OAE9D3C,EAAcA,EAAYI,UAAU,EAAGJ,EAAYpB,OAAS,OAIzDgE,oDACH,SAAAA,EAAYpI,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAAgI,IAChBnI,EAAAI,EAAAC,KAAAF,KAAMJ,IAaTqI,8BAAgC,WAC7B,IAAIrC,EAAY,GAShB,OARmB/F,EAAKD,MAAMiG,MACnBR,IACR,SAAA6C,GAAS,OACNtC,EAAUG,KACJtB,EAAAvC,EAAAC,cAAC6D,EAAA,EAAD,CAAeC,IAAKiC,GAChBrI,EAAKsI,wBAAwBD,OAE7CtC,EAAYnB,EAAAvC,EAAAC,cAACgE,EAAA,EAAD,KAAYP,IAvBR/F,EA2BnBuG,iBAAmB,WAChB,IAAIhB,EAAc,GACZwC,EAAa/H,EAAKD,MAAMiG,MAwB9B,OAtBA+B,EAAWvC,IAAI,SAAA6C,GAAS,OACrB9C,GAAe9B,EACZzD,EAAKD,MAAMiI,SAASK,GAAWH,aAAe,QACpD3C,EAAcA,EAAYI,UAAU,EAAGJ,EAAYpB,OAAS,IAC5CA,OAASnE,EAAKD,MAAM0G,gBACjClB,EAAcA,EAAYI,UAAU,EAAG3F,EAAKD,MAAM0G,eAAiB,OAEnElB,EADCA,EAAYpB,OAAS,EAEnBS,EAAAvC,EAAAC,cAAA,KACGoE,KAAK,KACLN,IAAK2B,EACL3C,QACG,kBAAMpF,EAAKoB,SACR,CACGmH,0BAA2BvI,EAAKM,MAAMiI,6BAI9ChD,GAGO,eAlDjBvF,EAAKM,MAAQ,CACViI,0BAA0B,EAC1BC,0BAA2B,gBAC3BC,yBAA0B,IALbzI,uDASnB,WACGG,KAAKiB,SAAS,CAAEqH,yBAA0BtI,KAAKiI,kCAC/CjI,KAAKoG,0DA6CR,SAAwB5E,GACrB,IAAI+G,EAAcvI,KAAKJ,MAAMiI,SAASrG,GACtC,OACGiD,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACGqC,EAAAvC,EAAAC,cAACyE,EAAA,EAAD,KACItD,EAAYiF,EAAYR,aACxB7D,EACDO,EAAAvC,EAAAC,cAACqG,EAAA,EAAD,CACGzF,MAAOwE,EAAegB,EAAYE,aAAa1F,OAC9CwE,EAAegB,EAAYE,aAAanG,MAE3C4B,EACDO,EAAAvC,EAAAC,cAACqG,EAAA,EAAD,CACGzF,MAAO0E,EAAoBc,EAAYG,WAAW3F,OACjD0E,EAAoBc,EAAYG,WAAWpG,OAGlDmC,EAAAvC,EAAAC,cAAC0E,EAAA,EAAD,KACI0B,EAAYI,mBAAqBlE,EAAAvC,EAAAC,cAAA,WAAKsC,EAAAvC,EAAAC,cAAA,0BAAqB+B,EAAMqE,EAAYI,mBAAmB5B,MAAM,MAAM1B,IAAI,SAAC2B,EAAGf,GAClH,OAAOxB,EAAAvC,EAAAC,cAAA,KAAG8D,IAAKA,GAAMe,MACZ,kDAOxB,WAAS,IAAAC,EAAAjH,KACN,OACGyE,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACIpC,KAAKoG,mBACN3B,EAAAvC,EAAAC,cAAC+E,EAAD,CACG9C,WAAYpE,KAAKG,MAAMiI,yBACvB7D,MAAOvE,KAAKG,MAAMkI,0BAClB7D,KAAMxE,KAAKG,MAAMmI,yBACjBjE,OAAQ,kBAAM4C,EAAKhG,SAChB,CACGmH,0BAA2BnB,EAAK9G,MAAMiI,4BAE5C9D,KAAK,eAhGGrB,aA6GRG,cANS,SAAAjD,GAAK,MAAK,CAC/B0H,SAAU1H,EAAM0H,SAAShC,MACzB+C,gBAAiBzI,EAAM0H,SAAST,QAChCyB,aAAc1I,EAAM0H,SAASP,QAGjBlE,CAAyB4E,kBC1JnBc,kGAIlB,SAAmB7C,EAAK8C,GACrB,IAAIC,EAAIlJ,OAAAmJ,EAAA,EAAAnJ,CAAA,GAAKmG,EAAM8C,GACnB/I,KAAKkJ,aAALpJ,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GAAwBE,KAAKkJ,cAAiBF,kCAIjD,WACG,OAAOlJ,OAAOsJ,OAAOpJ,KAAKkJ,0CAG7B,WACG,OAAOlJ,KAAKqJ,mDAGf,SAA6BC,GAC1B,IAAIlF,EAAa,GAIjB,OAHiBkF,EACNjE,IAAI,SAAAkE,GAAQ,OAAInF,EAAW2B,KAAKwD,EAASC,UAA8B,OAAnBD,EAASjC,SACxElD,EAAaA,EAAWqF,MAAM,SAAAC,GAAC,OAAU,IAANA,aAtBpBZ,EACXI,aAAe,GADJJ,EAEXO,eAAgB,eCQLM,8JAQlB,WACG,IAAAxI,EAA6BnB,KAAKJ,MAA1BwE,EAARjD,EAAQiD,WAAYE,EAApBnD,EAAoBmD,KACpB,OACGG,EAAAvC,EAAAC,cAACuC,EAAA,EAAD,CAAOC,OAAQP,EAAYQ,UAAQ,EAACN,KAAMA,GACvCG,EAAAvC,EAAAC,cAAC0C,EAAA,EAAD,KAAc7E,KAAKJ,MAAM2E,OACzBE,EAAAvC,EAAAC,cAAC2C,EAAA,EAAD,KACGL,EAAAvC,EAAAC,cAACyH,EAAA,EAAD,CAAO7G,MAAM,QAAb,mEAIC/C,KAAKJ,MAAM4E,cAlBevB,aCEpC4G,oDACH,SAAAA,EAAYjK,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAA6J,IAChBhK,EAAAI,EAAAC,KAAAF,KAAMJ,IAiDTkK,qBAAuB,WACpBjK,EAAKoB,SAAS,CAAE8I,oBAAqBlK,EAAKM,MAAM4J,sBAjDhDlK,EAAKM,MAAQ,CACV6J,QAAQ,EACRD,oBAAoB,EACpBE,gBAAiB,GACjBC,eAAgB,GAChBhB,aAAc,GACdG,eAAe,EACfc,QAAQ,GATKtK,uDAanB,WACGuK,WAAW,WACRpK,KAAKiB,SAAS,CAAEkJ,QAAQ,KACzB7J,KAAKN,MAAO,sCAGjB,SAAkBsH,GACf,IAAI+C,EAAW,GACf,IACqBvK,OAAOwK,QAAQhD,EAAMiD,SAASC,MACtCC,QAAS,SAAAC,GAAkB,IAAAC,EAAA7K,OAAA8K,EAAA,EAAA9K,CAAA4K,EAAA,GAAhBzE,EAAgB0E,EAAA,GAAX5B,EAAW4B,EAAA,GAClCN,EAAStE,KAAKtB,EAAAvC,EAAAC,cAAA,QAAM8D,IAAKA,GAAKxB,EAAAvC,EAAAC,cAAA,SAAImB,EAAY2C,IAAhC,KAA4C8C,EAAMjH,eAGtE,MAAAE,GACGqI,EAAStE,KAAKtB,EAAAvC,EAAAC,cAAA,QAAM8D,IAAI,WAAUxB,EAAAvC,EAAAC,cAAA,mBAApB,sBAEjB,OAAQkI,6BAGX,SAAYQ,EAAcrB,EAAWlC,GAAO,IAAAL,EAAAjH,KACrCgK,EAASvF,EAAAvC,EAAAC,cAAC2I,EAAA,EAAD,CAAS/H,MAAM,UAAUuB,KAAK,OAQ3C,OAPc,OAAVgD,EACD0C,EAASvF,EAAAvC,EAAAC,cAAA,KAAGoE,KAAK,KAAKN,IAAI,QAAQhB,QAAS,kBAAMgC,EAAK8D,cAAczD,EAAMxF,WAAYmF,EAAK+D,kBAAkB1D,MAApG,UAEW,IAAdkC,IACNQ,EAAS,SAGU,IAAdR,GAAiC,OAAVlC,EAAkB,KAAO7C,EAAAvC,EAAAC,cAAA,OAAK8D,IAAK4E,GAAV,WAAiCA,EAAjC,OAAmDb,gCAI9G,SAAczF,EAAOC,GAClBxE,KAAKiB,SAAS,CAAEgJ,gBAAiB1F,EAAO2F,eAAgB1F,EAAMuF,oBAAqB/J,KAAKG,MAAM4J,2CAQjG,WAAS,IAAAkB,EAAAjL,KACNmB,EAAyBnB,KAAKJ,MAAtB4E,EAARrD,EAAQqD,KAAMwF,EAAd7I,EAAc6I,OACPkB,GAAkB,EAkBzB,OAjBOlL,KAAKG,MAAMgK,SACfe,EAAmBzG,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KAChBqC,EAAAvC,EAAAC,cAAC+E,EAAD,CACG9C,WAAYpE,KAAKG,MAAM4J,mBACvBxF,MAAOvE,KAAKG,MAAM8J,gBAClBzF,KAAMxE,KAAKG,MAAM+J,eACjB7F,OAAQrE,KAAK8J,qBACbxF,KAAM,OAETG,EAAAvC,EAAAC,cAACgJ,EAAD,CACG/G,YAAa4F,EACbzF,MAAOE,EAAAvC,EAAAC,cAAA,iCACPqC,KAAMA,EAAKa,IAAI,SAAAkE,GAAQ,OAAI0B,EAAKG,YAAY7B,EAASsB,aAActB,EAASC,UAAWD,EAASjC,aAMtG4D,SA7EajI,aAyFPG,cAPS,SAAAjD,GAAK,MAAK,CAC/BkL,SAAUlL,EAAMkL,SAChBxD,SAAU1H,EAAM0H,SAChByD,KAAMnL,EAAMmL,KACZjI,cAAelD,EAAMkD,gBAGTD,CAAyByG,oBCrFxC,SAAS0B,GAAWC,GACjB,MAAqB,OAAjBA,EACM,CAAElJ,KAAM,cAAeS,MAAO,WAEnB,OAAjByI,EACM,CAAElJ,KAAM,OAAQS,MAAO,aAEZ,OAAjByI,EACM,CAAElJ,KAAM,SAAUS,MAAO,WAEd,OAAjByI,EACM,CAAElJ,KAAM,MAAOS,MAAO,WAEX,OAAjByI,EACM,CAAElJ,KAAM,kBAAmBS,MAAO,aAD5C,EAKI,SAAS0I,GAAwBC,EAAiBC,GACtD,IAAIvG,EAAc,GAKlB,OAJAsG,EAAgBrG,IAAI,SAAAuG,GAAY,OAC7BxG,GAAeuG,EAAcC,GAAcC,cAAgB,OAE9DzG,EAAcA,EAAYI,UAAU,EAAGJ,EAAYpB,OAAS,OAIzD8H,qDACH,SAAAA,EAAYlM,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAA8L,IAChBjM,EAAAI,EAAAC,KAAAF,KAAMJ,IAiBTmM,mCAAqC,WAClC,IAAInG,EAAY,GAShB,OARwB/F,EAAKD,MAAMiG,MACnBR,IACb,SAAA2G,GAAc,OACXpG,EAAUG,KACPtB,EAAAvC,EAAAC,cAAC6D,EAAA,EAAD,CAAeC,IAAK+F,GAChBnM,EAAKoM,oBAAoBD,OAEtCpG,EAAYnB,EAAAvC,EAAAC,cAACgE,EAAA,EAAD,KAAYP,IA3BR/F,EA+BnBuG,iBAAmB,WAChB,IAAIhB,EAAc,GACZsG,EAAkB7L,EAAKD,MAAMiG,MAuBnC,OArBA6F,EAAgBrG,IAAI,SAAA2G,GAAc,OAC/B5G,GAAevF,EAAKD,MAAM0L,KAAKU,GAAgBE,QAAW,QAC7D9G,EAAcA,EAAYI,UAAU,EAAGJ,EAAYpB,OAAS,IAC5CA,OAASnE,EAAKD,MAAM0G,gBACjClB,EAAcA,EAAYI,UAAU,EAAG3F,EAAKD,MAAM0G,eAAiB,OAEnElB,EADCA,EAAYpB,OAAS,EAEnBS,EAAAvC,EAAAC,cAAA,KACGoE,KAAK,KACLN,IAAKyF,EACLzG,QACG,kBAAMpF,EAAKoB,SACR,CACGkL,+BAAgCtM,EAAKM,MAAMgM,kCAInD/G,GAGO,oBArDjBvF,EAAKM,MAAQ,CACVgM,+BAA+B,EAC/BC,+BAAgC,qBAChCC,8BAA+B,GAE/BC,6BAA6B,EAC7BC,6BAA8B,qBAC9BC,4BAA6B,IAThB3M,uDAanB,WACGG,KAAKiB,SAAS,CAAEoL,8BAA+BrM,KAAK+L,0EA6CvD,SAAoBU,GACjB,IAAIC,EAAU1M,KAAKJ,MAAM0L,KAAKmB,GAE9B,OACGhI,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACGqC,EAAAvC,EAAAC,cAACyE,EAAA,EAAD,KACI5G,KAAKJ,MAAM0L,KAAKmB,GAAOZ,cACvB3H,EACDO,EAAAvC,EAAAC,cAACqG,EAAA,EAAD,CAAOzF,MAAOwI,GAAWmB,EAAQC,SAAS5J,OACtCwI,GAAWmB,EAAQC,SAASrK,OAGnCmC,EAAAvC,EAAAC,cAAC0E,EAAA,EAAD,KACyB,OAApB6F,EAAQE,SAAwC,KAApBF,EAAQE,QACnCnI,EAAAvC,EAAAC,cAAC6C,EAAA,EAAD,CAAQ6H,SAAO,EAAC9J,MAAM,UAAUuB,KAAK,KAAKiC,KAAMmG,EAAQE,QAASE,OAAO,SAASC,IAAI,uBAArF,iBACC,8CAKhB,WAAS,IAAA9F,EAAAjH,KACN,OACGyE,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACIpC,KAAKoG,mBACN3B,EAAAvC,EAAAC,cAAC+E,EAAD,CACG9C,WAAYpE,KAAKG,MAAMgM,8BACvB5H,MAAOvE,KAAKG,MAAMiM,+BAClB5H,KAAMxE,KAAKG,MAAMkM,8BACjBhI,OAAQ,kBAAM4C,EAAKhG,SAChB,CACGkL,+BAAgClF,EAAK9G,MAAMgM,iCAEjD7H,KAAK,OAERG,EAAAvC,EAAAC,cAAC+E,EAAD,CACG9C,WAAYpE,KAAKG,MAAMmM,4BACvB/H,MAAOvE,KAAKG,MAAMoM,6BAClB/H,KAAMxE,KAAKG,MAAMqM,4BACjBnI,OAAQ,kBAAM4C,EAAKhG,SAChB,CACGqL,6BAA8BrF,EAAK9G,MAAMmM,+BAE/ChI,KAAK,eAtGQrB,aAmHbG,eANS,SAAAjD,GAAK,MAAK,CAC/BmL,KAAMnL,EAAMmL,KAAKzF,MACjBmH,YAAa7M,EAAMmL,KAAKlE,QACxB6F,SAAU9M,EAAMmL,KAAKhE,QAGTlE,CAAyB0I,4CCnHlCoB,qDACH,SAAAA,EAAYtN,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAAkN,IAChBrN,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CAAEgN,MAAO,IAFNtN,uDAKnB,WAEOG,KAAKJ,MAAMiG,OAAS7F,KAAKJ,MAAMiG,MAAM7B,QACtChE,KAAKoN,QAAQpN,KAAKJ,MAAMyN,+CAI9B,SAAmBC,EAAWC,GAEvBvN,KAAKJ,MAAMiG,QAAUyH,EAAUzH,OAChC7F,KAAKoN,QAAQpN,KAAKJ,MAAMyN,oCAI9B,SAAQG,GACL,IAAArM,EAA0BnB,KAAKJ,MAAzBiG,EAAN1E,EAAM0E,MAAO4H,EAAbtM,EAAasM,SACTN,EAAQnN,KAAKG,MAAMgN,MAEvB,KAAIK,EAAO,GAAKA,EAAOL,EAAMO,YAA7B,CAKAP,EAAQnN,KAAK2N,SAAS9H,EAAM7B,OAAQwJ,EAAMC,GAG1C,IAAIG,EAAc/H,EAAMgI,MAAMV,EAAMW,WAAYX,EAAMY,SAAW,GAGjE/N,KAAKiB,SAAS,CAAEkM,MAAOA,IAGvBnN,KAAKJ,MAAMoO,aAAaJ,4BAG3B,SAASK,EAAYC,EAAaT,GAE/BS,EAAcA,GAAe,EAG7BT,EAAWA,GAAY,GAGvB,IAEIU,EAAWC,EAFXV,EAAaW,KAAKC,KAAKL,EAAaR,GAGpCC,GAAc,IAEfS,EAAY,EACZC,EAAUV,GAGNQ,GAAe,GAChBC,EAAY,EACZC,EAAU,IACFF,EAAc,GAAKR,GAC3BS,EAAYT,EAAa,EACzBU,EAAUV,IAEVS,EAAYD,EAAc,EAC1BE,EAAUF,EAAc,GAK9B,IAAIJ,GAAcI,EAAc,GAAKT,EACjCM,EAAWM,KAAKE,IAAIT,EAAaL,EAAW,EAAGQ,EAAa,GAG5DO,EAAQ1O,OAAA2O,GAAA,EAAA3O,CAAI4O,MAAON,EAAU,EAAKD,GAAWQ,QAAQtJ,IAAI,SAAA2B,GAAC,OAAImH,EAAYnH,IAG9E,MAAO,CACJiH,WAAYA,EACZC,YAAaA,EACbT,SAAUA,EACVC,WAAYA,EACZS,UAAWA,EACXC,QAASA,EACTN,WAAYA,EACZC,SAAUA,EACVS,MAAOA,yBAIb,WAAS,IAAAvH,EAAAjH,KACFmN,EAAQnN,KAAKG,MAAMgN,MAEvB,OAAKA,EAAMqB,OAASrB,EAAMqB,MAAMxK,QAAU,EAEhC,KAIPS,EAAAvC,EAAAC,cAACyM,GAAA,EAAD,CAAYC,aAAW,cAEpBpK,EAAAvC,EAAAC,cAAC2M,GAAA,EAAD,CAAgBC,SAAgC,IAAtB5B,EAAMe,aAC7BzJ,EAAAvC,EAAAC,cAAC6M,GAAA,EAAD,CAAgBC,OAAK,EAAC1I,KAAK,KAAKtB,QAAS,kBAAMgC,EAAKmG,QAAQ,OAG/D3I,EAAAvC,EAAAC,cAAC2M,GAAA,EAAD,CAAgBC,SAAgC,IAAtB5B,EAAMe,aAC7BzJ,EAAAvC,EAAAC,cAAC6M,GAAA,EAAD,CAAgBE,UAAQ,EAAC3I,KAAK,KAAKtB,QAAS,kBAAMgC,EAAKmG,QAAQD,EAAMe,YAAc,OAGrFf,EAAMqB,MAAMnJ,IAAI,SAACmI,EAAM2B,GAAP,OACd1K,EAAAvC,EAAAC,cAAC2M,GAAA,EAAD,CAAgB7I,IAAKkJ,EAAOC,OAAQjC,EAAMe,cAAgBV,GACvD/I,EAAAvC,EAAAC,cAAC6M,GAAA,EAAD,CAAgBzI,KAAK,KAAKtB,QAAS,kBAAMgC,EAAKmG,QAAQI,KAAQA,MAIpE/I,EAAAvC,EAAAC,cAAC2M,GAAA,EAAD,CAAgBC,SAAU5B,EAAMe,cAAgBf,EAAMO,YACnDjJ,EAAAvC,EAAAC,cAAC6M,GAAA,EAAD,CAAgBK,MAAI,EAAC9I,KAAK,KAAKtB,QAAS,kBAAMgC,EAAKmG,QAAQD,EAAMe,YAAc,OAGlFzJ,EAAAvC,EAAAC,cAAC2M,GAAA,EAAD,CAAgBC,SAAU5B,EAAMe,cAAgBf,EAAMO,YACnDjJ,EAAAvC,EAAAC,cAAC6M,GAAA,EAAD,CAAgBM,MAAI,EAAC/I,KAAK,KAAKtB,QAAS,kBAAMgC,EAAKmG,QAAQD,EAAMO,wBAzHhD6B,IAAMtM,WAmItCiK,GAAkBsC,aAxIG,CAClBnC,YAAa,EACbI,SAAU,IAuIEP,oFC1JfuC,KAAQC,IAAIC,UAwHGC,qDArHZ,SAAAA,EAAYhQ,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAA4P,IAChB/P,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACV0P,OAAS,GAHIhQ,4CAQnB,WAAS,IAAAoH,EAAAjH,KAEN,OACGyE,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACGqC,EAAAvC,EAAAC,cAACuC,EAAA,EAAD,CAAOJ,KAAK,KAAKK,OAAQ3E,KAAKG,MAAM0P,MAAOxL,OAAQ,kBAAM4C,EAAKhG,SAAS,CAAE4O,OAAQ5I,EAAK9G,MAAM0P,UACzFpL,EAAAvC,EAAAC,cAAC0C,EAAA,EAAD,CAAaR,OAAQ,kBAAM4C,EAAKhG,SAAS,CAAE4O,OAAQ5I,EAAK9G,MAAM0P,UAAUpL,EAAAvC,EAAAC,cAAC2N,GAAA,EAAD,CAAiBC,KAAK,cAA9F,eACAtL,EAAAvC,EAAAC,cAAC2C,EAAA,EAAD,KACGL,EAAAvC,EAAAC,cAACyH,EAAA,EAAD,CAAO7G,MAAM,QAAb,yLAIuBmB,EACpBO,EAAAvC,EAAAC,cAAC6N,GAAA,EAAD,CAAMtN,GAAG,oBAAT,QALH,KAQA+B,EAAAvC,EAAAC,cAACgE,EAAA,EAAD,KACG1B,EAAAvC,EAAAC,cAAC6D,EAAA,EAAD,KACGvB,EAAAvC,EAAAC,cAACyE,EAAA,EAAD,sBACAnC,EAAAvC,EAAAC,cAAC0E,EAAA,EAAD,KACGpC,EAAAvC,EAAAC,cAAA,qFAEAsC,EAAAvC,EAAAC,cAAA,wEAAgE+B,EAChEO,EAAAvC,EAAAC,cAAA,iGADA,KAIAsC,EAAAvC,EAAAC,cAAA,0NAMAsC,EAAAvC,EAAAC,cAAA,0eAUyC+B,EACtCO,EAAAvC,EAAAC,cAAA,yBAXH,yMAmBNsC,EAAAvC,EAAAC,cAAC6D,EAAA,EAAD,KACGvB,EAAAvC,EAAAC,cAACyE,EAAA,EAAD,sBACAnC,EAAAvC,EAAAC,cAAC0E,EAAA,EAAD,uEAEWpC,EAAAvC,EAAAC,cAAA,sCAFX,oOAUHsC,EAAAvC,EAAAC,cAAC6D,EAAA,EAAD,KACGvB,EAAAvC,EAAAC,cAACyE,EAAA,EAAD,iBACAnC,EAAAvC,EAAAC,cAAC0E,EAAA,EAAD,qLAI4CpC,EAAAvC,EAAAC,cAAA,kBAJ5C,4BAK4BsC,EAAAvC,EAAAC,cAAA,kBAL5B,4BAMWsC,EAAAvC,EAAAC,cAAA,uBANX,wDAWHsC,EAAAvC,EAAAC,cAAC6D,EAAA,EAAD,KACGvB,EAAAvC,EAAAC,cAACyE,EAAA,EAAD,uBACAnC,EAAAvC,EAAAC,cAAC0E,EAAA,EAAD,yIAOHpC,EAAAvC,EAAAC,cAAC6D,EAAA,EAAD,KACGvB,EAAAvC,EAAAC,cAACyE,EAAA,EAAD,sBACAnC,EAAAvC,EAAAC,cAAC0E,EAAA,EAAD,kFAE2BpC,EAAAvC,EAAAC,cAAA,4BACvB+B,EAHJ,4BAGmCA,EAChCO,EAAAvC,EAAAC,cAAA,0BAAwB+B,EAJ3B,iFAM6BO,EAAAvC,EAAAC,cAAA,gBAUzCsC,EAAAvC,EAAAC,cAAC6C,EAAA,EAAD,CAAQjC,MAAM,OAAOkC,QAAS,kBAAMgC,EAAKhG,SAAS,CAAE4O,OAAQ5I,EAAK9G,MAAM0P,UAAvE,sBA/GmB5M,yJCH3BxD,GAASC,EAAQ,IACjBmC,GAASnC,EAAQ,IAAWmC,OAEXoO,qDAClB,SAAAA,EAAYrQ,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAAiQ,IAChBpQ,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACV+P,UAAU,EACVC,SAAS,GAJItQ,4CAanB,WAAS,IAAAoH,EAAAjH,KACNmB,EAAsDnB,KAAKJ,MAAnDwE,EAARjD,EAAQiD,WAAYC,EAApBlD,EAAoBkD,OAAQC,EAA5BnD,EAA4BmD,KAAM1C,EAAlCT,EAAkCS,MAAOwO,EAAzCjP,EAAyCiP,SACnCC,EAAWC,OAAOC,SAASF,SAC3BG,EAAOF,OAAOC,SAASC,KACzBC,EAAehR,GAAOiR,OAAON,EAAW,IAAMxO,GAClD6O,EAAe5O,GAAO8O,KAAKF,EAAc,QAAQ3O,SAAS,OAC1D,IAAM8O,EAAMP,EAASQ,OAAO,KAAML,EAAM,SAAUC,GAClD,OACGhM,EAAAvC,EAAAC,cAACuC,EAAA,EAAD,CAAOC,OAAQP,EAAYC,OAAQA,EAAQO,UAAQ,EAACN,KAAMA,GACvDG,EAAAvC,EAAAC,cAAC0C,EAAA,EAAD,CAAaR,OAAQA,GAArB,2BACAI,EAAAvC,EAAAC,cAAC2C,EAAA,EAAD,gIAE0DL,EAAAvC,EAAAC,cAAA,WACvDsC,EAAAvC,EAAAC,cAAA,kCAEAsC,EAAAvC,EAAAC,cAAC2O,GAAA,EAAD,KACGrM,EAAAvC,EAAAC,cAAC4O,GAAA,EAAD,CAAOhC,UAAQ,EAACiC,YAAaJ,IAC7BnM,EAAAvC,EAAAC,cAAC8O,GAAA,EAAD,CAAiBC,UAAU,UAExBzM,EAAAvC,EAAAC,cAACgP,GAAA,gBAAD,CAAiBC,KAAMR,EACpBS,OAAQ,kBAAMpK,EAAKhG,SAAS,CAAEkP,SAAS,MACvC1L,EAAAvC,EAAAC,cAAC6C,EAAA,EAAD,CAAQxD,GAAG,qBAAqBuB,MAAM,WAAtC,sBAEH0B,EAAAvC,EAAAC,cAACmP,GAAA,EAAD,CAAqBC,QAAQ,QAAQC,UAAU,QAAQ1E,OAAO,sBAC3DrI,EAAAvC,EAAAC,cAACsP,GAAA,EAAD,gCACAhN,EAAAvC,EAAAC,cAACuP,GAAA,EAAD,qEAA0EjN,EAAAvC,EAAAC,cAAA,WAAMsC,EAAAvC,EAAAC,cAAA,mBAAhF,MAAkGsC,EAAAvC,EAAAC,cAAA,gBAAlG,mDAKZsC,EAAAvC,EAAAC,cAAC4C,EAAA,EAAD,KACGN,EAAAvC,EAAAC,cAAC6C,EAAA,EAAD,CAAQjC,MAAM,UAAUkC,QAASZ,GAAjC,kBA7CmCpB,aChB7B0O,qDAClB,SAAAA,EAAY/R,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAA2R,IAChB9R,EAAAI,EAAAC,KAAAF,KAAMJ,IAaTgS,SAAW,WAER,IAAIC,EAAc,QAAUhS,EAAKM,MAAM4I,MACvClJ,EAAKD,MAAMyB,QAAQ0E,KAAK8L,IAfxBhS,EAAKM,MAAQ,CACV4I,MAAO,IAEVlJ,EAAK+R,SAAW/R,EAAK+R,SAAStR,KAAdR,OAAAgS,EAAA,EAAAhS,CAAAD,IAChBA,EAAKkS,aAAelS,EAAKkS,aAAazR,KAAlBR,OAAAgS,EAAA,EAAAhS,CAAAD,IANJA,kDAoBnB,SAAamS,GACbhS,KAAKiB,SAAS,CAAE8H,MAAOiJ,EAAMlF,OAAO/D,8BAGpC,WAAS,IAAA9B,EAAAjH,KACNmB,EAAqCnB,KAAKJ,MAAlCwE,EAARjD,EAAQiD,WAAYC,EAApBlD,EAAoBkD,OAAQC,EAA5BnD,EAA4BmD,KAC5B,OACGG,EAAAvC,EAAAC,cAACuC,EAAA,EAAD,CAAOC,OAAQP,EAAYC,OAAQA,EAAQO,UAAQ,EAACN,KAAMA,GACvDG,EAAAvC,EAAAC,cAAC0C,EAAA,EAAD,CAAaR,OAAQA,GAArB,8BACAI,EAAAvC,EAAAC,cAAC2C,EAAA,EAAD,sEACiEL,EAAAvC,EAAAC,cAAA,WAC9DsC,EAAAvC,EAAAC,cAAA,sCAEAsC,EAAAvC,EAAAC,cAAC2O,GAAA,EAAD,KACGrM,EAAAvC,EAAAC,cAAC4O,GAAA,EAAD,CAAOhI,MAAO/I,KAAKG,MAAM4I,MAAOkJ,SAAUjS,KAAK+R,aAAcG,UAAU,SACvEzN,EAAAvC,EAAAC,cAAC8O,GAAA,EAAD,CAAiBC,UAAU,UACxBzM,EAAAvC,EAAAC,cAAC6C,EAAA,EAAD,CAAQjC,MAAM,UAAUkC,QAAS,kBAAMgC,EAAK2K,aAA5C,gBAITnN,EAAAvC,EAAAC,cAAC4C,EAAA,EAAD,KACGN,EAAAvC,EAAAC,cAAC6C,EAAA,EAAD,CAAQjC,MAAM,UAAUkC,QAASZ,GAAjC,kBA1CoCpB,yCCApCkP,GAAA,SAACC,EAASC,GACtB,IACMC,EAAK,CAAEC,OAAQ,CAAE/H,KADZgI,SAAWC,cAAcL,IACCM,WAAY,CAAC,SAC5CC,EAAcH,SAAWF,EAAI,CAAEM,SAAU,OAAQC,KAAM,UACvDrI,EAAO,IAAIsI,KAAK,CAACH,GAAc,CAAEE,KAPzB,oFAQdE,UAAiBvI,EAAM6H,EAPJ,UCMf,SAASW,GAAaC,GAC1B,OAAQA,GACL,IAAK,KACF,MAAO,CAAE3Q,KAAM,2BAA4BS,MAAO,WACrD,IAAK,KACF,MAAO,CAAET,KAAM,aAAcS,MAAO,aACvC,IAAK,KACF,MAAO,CAAET,KAAM,eAAgBS,MAAO,WACzC,IAAK,KACF,MAAO,CAAET,KAAM,YAAaS,MAAO,UACtC,IAAK,KACF,MAAO,CAAET,KAAM,iBAAkBS,MAAO,WAC3C,QACG,MAAO,CAAET,KAAM,QAASS,MAAO,aA6CzBmQ,qDAxCZ,SAAAA,EAAYtT,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAAkT,IAChBrT,EAAAI,EAAAC,KAAAF,KAAMJ,IAQTuT,oBAAsB,WACnB,IAAIC,EAAOvT,EAAKD,MAAMwT,KAClB7O,EAAQE,EAAAvC,EAAAC,cAAA,oBAAWsC,EAAAvC,EAAAC,cAAA,SAAIiR,EAAKC,UAAT,IAAqBD,EAAKE,WAC7C9O,EAAOC,EAAAvC,EAAAC,cAAA,WACRsC,EAAAvC,EAAAC,cAACqG,EAAA,EAAD,CAAOzF,MAAOiQ,GAAaI,EAAKG,UAAUxQ,OAAQiQ,GAAaI,EAAKG,UAAUjR,MAAamC,EAAAvC,EAAAC,cAAA,WAC3FsC,EAAAvC,EAAAC,cAAA,oBAAcsC,EAAAvC,EAAAC,cAACqR,EAAAtR,EAAD,CAAWuR,MAAOL,EAAKM,eAAgBjP,EAAAvC,EAAAC,cAAA,WACpDiR,EAAKxG,QAAUnI,EAAAvC,EAAAC,cAAA,WAAKsC,EAAAvC,EAAAC,cAAA,sBAAiB+B,EAAKO,EAAAvC,EAAAC,cAAA,KAAGoE,KAAM6M,EAAKxG,QAASE,OAAO,SAASC,IAAI,uBAAuBqG,EAAKxG,UAAqB,GACtIwG,EAAKO,SAAWlP,EAAAvC,EAAAC,cAAA,WAAKsC,EAAAvC,EAAAC,cAAA,wBAAmB+B,EAAMkP,EAAKO,UAAkB,GACrEP,EAAKQ,YAAcnP,EAAAvC,EAAAC,cAAA,WAAKsC,EAAAvC,EAAAC,cAAA,oBAAe+B,EAAMkP,EAAKQ,YAAY7M,MAAM,MAAM1B,IAAI,SAAC2B,EAAGf,GAChF,OAAOxB,EAAAvC,EAAAC,cAAA,OAAK8D,IAAKA,GAAMe,EAAEvC,EAAAvC,EAAAC,cAAA,eAChB,IAEftC,EAAKoB,SAAS,CAAC4S,qBAAsBtP,EAAOuP,oBAAqBtP,EAAMuP,iBAAiB,KAnBxFlU,EAAKM,MAAQ,CACV4T,iBAAiB,EACjBF,qBAAsB,GACtBC,oBAAqB,IALRjU,4CAwBnB,WAAS,IAAAoH,EAAAjH,KACN,OACGyE,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACGqC,EAAAvC,EAAAC,cAAA,KAAGoE,KAAK,KAAKtB,QAAS,kBAAMgC,EAAKkM,wBAAjC,SAA+DnT,KAAKJ,MAAMwT,KAAKC,UAA/E,IAA2FrT,KAAKJ,MAAMwT,KAAKE,UAC3G7O,EAAAvC,EAAAC,cAAC+E,EAAD,CACG9C,WAAYpE,KAAKG,MAAM4T,gBACvBxP,MAAOvE,KAAKG,MAAM0T,qBAClBrP,KAAMxE,KAAKG,MAAM2T,oBACjBzP,OAAQ,kBAAM4C,EAAKhG,SAAS,CAAE8S,iBAAkB9M,EAAK9G,MAAM4T,mBAC3DzP,KAAM,eAlCIrB,aCCnB+Q,qDACH,SAAAA,EAAYpU,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAAgU,IAChBnU,EAAAI,EAAAC,KAAAF,KAAMJ,IAsBTqU,YAAc,WACX,IAAMC,EAAW,CAAC,KAAM,KAAM,KAAM,MAEpC,OADWrU,EAAKD,MAAM0L,KAAKzF,MAAMsO,OAAO,SAAUC,GAAO,OAAOF,EAASG,SAASD,EAAIzH,WAC1EtH,IAAI,SAAA+O,GAAG,MAAK,CAAEE,MAAOF,EAAIvI,cAAe9C,MAAOqL,EAAI5S,OA1B/C3B,EA6BnB0U,uBAAyB,WACtB,OAAO1U,EAAKD,MAAMe,eAAekF,MAAMR,IAAI,SAAAC,GAAa,MAAK,CAAEgP,MAAOhP,EAAcC,kBAAmBwD,MAAOzD,EAAc9D,OA9B5G3B,EAiCnB2U,gBAAkB,SAAC/L,GAChB,IAAMgM,EAAmB5U,EAAKD,MAAMiI,SAAShC,MAAMsO,OAAO,SAAUrM,GAAW,OAAOA,EAAQW,cAAgBA,IACxGiM,EAAaD,EAAiBN,OAAO,SAAUrM,GAAW,MAA6B,OAAtBA,EAAQY,YACzEiM,EAAgBF,EAAiBN,OAAO,SAAUrM,GAAW,MAA6B,OAAtBA,EAAQY,YAC5EkM,EAAcH,EAAiBN,OAAO,SAAUrM,GAAW,MAA6B,OAAtBA,EAAQY,YAC5EmM,EAAuBH,EAAWrP,IAAI,SAAAyC,GAAO,MAAK,CACnDwM,MAAOxM,EAAQC,YACfgB,MAAOjB,EAAQtG,MAEdsT,EAA0BH,EAActP,IAAI,SAAAyC,GAAO,MAAK,CACzDwM,MAAOxM,EAAQC,YACfgB,MAAOjB,EAAQtG,MAqBlB,MAdG,CACG,CACG8S,MAAO,sBACPS,QARmBH,EAAYvP,IAAI,SAAAyC,GAAO,MAAK,CACrDwM,MAAOxM,EAAQC,YACfgB,MAAOjB,EAAQtG,OAQZ,CACG8S,MAAO,wBACPS,QAASD,GAEZ,CACGR,MAAO,qBACPS,QAASF,KA9DFhV,EAoEnBkS,aAAe,SAACiD,GACb,IAAAC,EAAsBD,EAAElI,OAAlBxK,EAAN2S,EAAM3S,KAAMyG,EAAZkM,EAAYlM,MACU,aAAlBiM,EAAElI,OAAO+F,OACV9J,EAAQiM,EAAElI,OAAOoI,SAEpB,IAAMpR,EAAShE,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GAAQD,EAAKM,MAAM2D,WAAnB,GAAAhE,OAAAmJ,EAAA,EAAAnJ,CAAA,GAA+BwC,EAAiB,OAAVyG,EAAiB,GAAKA,IAC3ElJ,EAAKoB,SAAS,CAAE6C,eAxEhBjE,EAAKM,MAAQ,CACV2D,UAAWjE,EAAKD,MAAMuV,cACtBC,SAAU,CACPC,WAAY,IAEfC,eAAgB,KAChBzF,OAAO,EACP0F,cAAc,EAEdC,uBAAuB,EACvBC,0BAA0B,GAE7B5V,EAAKkS,aAAelS,EAAKkS,aAAazR,KAAlBR,OAAAgS,EAAA,EAAAhS,CAAAD,IACpBA,EAAK6V,aAAe7V,EAAK6V,aAAapV,KAAlBR,OAAAgS,EAAA,EAAAhS,CAAAD,IACpBA,EAAK8V,WAAa9V,EAAK8V,WAAWrV,KAAhBR,OAAAgS,EAAA,EAAAhS,CAAAD,IAClBA,EAAK+V,WAAa/V,EAAKoU,cACvBpU,EAAKgW,UAAYhW,EAAK2U,gBAAgB,MACtC3U,EAAKiW,UAAYjW,EAAK2U,gBAAgB,MACtC3U,EAAKc,eAAiBd,EAAK0U,yBApBX1U,kDA6EnB,SAAakW,GACVA,EAAeC,iBACfhW,KAAKJ,MAAMqW,cAAcjW,KAAKG,MAAM2D,qCAIvC,WAAa,IAAAmD,EAAAjH,KAEJkW,EADQlW,KAAKJ,MAAMyD,cAAcwC,MACbR,IAAI,SAAA+N,GAAI,MAAK,CACpC+C,aAAc/C,EAAKC,UACnB+C,YAAahD,EAAKE,SAClB+C,gBAAiBjD,EAAKM,aACtB4C,QAAWlD,EAAKxG,QAChBd,cAAiBL,GAAwB2H,EAAKxH,aAAc3E,EAAKrH,MAAM0L,KAAKzF,OAC5E0Q,YAAavD,GAAaI,EAAKG,UAAUjR,KACzCkU,YAAapD,EAAKO,SAClB8C,YAAerD,EAAKQ,YACpB5L,SAAYL,EAAmByL,EAAKvL,SAAUZ,EAAKrH,MAAMiI,SAAShC,OAClEJ,eAAkBP,EAAyBkO,EAAKzS,eAAgBsG,EAAKrH,MAAMe,eAAekF,UAE7F6Q,GAAWR,EAAa,qCAG3B,WAAS,IAAAjL,EAAAjL,KAEN,OACGyE,EAAAvC,EAAAC,cAACwU,GAAA,EAAD,CAAMC,SAAU5W,KAAK0V,cAClBjR,EAAAvC,EAAAC,cAAC0U,GAAA,EAAD,KACGpS,EAAAvC,EAAAC,cAAC2U,GAAA,EAAD,KACGrS,EAAAvC,EAAAC,cAAC4U,GAAA,EAAD,KACGtS,EAAAvC,EAAAC,cAAC6U,GAAA,EAAD,+BACAvS,EAAAvC,EAAAC,cAAC8U,GAAA,EAAD,CACGC,IAAI,eACJ5U,KAAK,eAELyG,MAAO/I,KAAKG,MAAM2D,UAAUhD,qBAC5BiU,QAAS/U,KAAK4V,WACd3D,SAAU,SAACkF,GAAD,OAASlM,EAAK8G,aAAa,CAAEjF,OAAQ,CAAExK,KAAM,uBAAwByG,MAAOoO,MACtFC,SAAS,EACTC,UAAU,EACVC,eAAe,EACfC,mBAAmB,OAM/B9S,EAAAvC,EAAAC,cAAC0U,GAAA,EAAD,KACGpS,EAAAvC,EAAAC,cAAC2U,GAAA,EAAD,KACGrS,EAAAvC,EAAAC,cAAC4U,GAAA,EAAD,KACGtS,EAAAvC,EAAAC,cAAC6U,GAAA,EAAD,oCACAvS,EAAAvC,EAAAC,cAAC8U,GAAA,EAAD,CACGC,IAAI,mBACJnO,MAAO/I,KAAKG,MAAM2D,UAAUrD,iBAC5BsU,QAAS/U,KAAK6V,UACd5D,SAAU,SAACkF,GAAD,OAASlM,EAAK8G,aAAa,CAAEjF,OAAQ,CAAExK,KAAM,mBAAoByG,MAAOoO,MAClFC,SAAS,EACTC,UAAU,EACVC,eAAe,EACfC,mBAAmB,OAM/B9S,EAAAvC,EAAAC,cAAC0U,GAAA,EAAD,KACGpS,EAAAvC,EAAAC,cAAC2U,GAAA,EAAD,KACGrS,EAAAvC,EAAAC,cAAC4U,GAAA,EAAD,KACGtS,EAAAvC,EAAAC,cAAC6U,GAAA,EAAD,mCACAvS,EAAAvC,EAAAC,cAAC8U,GAAA,EAAD,CACGC,IAAI,kBACJnO,MAAO/I,KAAKG,MAAM2D,UAAUpD,gBAC5BqU,QAAS/U,KAAK8V,UACd7D,SAAU,SAACkF,GAAD,OAASlM,EAAK8G,aAAa,CAAEjF,OAAQ,CAAExK,KAAM,kBAAmByG,MAAOoO,MACjFC,SAAS,EACTC,UAAU,EACVC,eAAe,EACfC,mBAAmB,OAM/B9S,EAAAvC,EAAAC,cAAC0U,GAAA,EAAD,KACGpS,EAAAvC,EAAAC,cAAC2U,GAAA,EAAD,KACGrS,EAAAvC,EAAAC,cAAC4U,GAAA,EAAD,KACGtS,EAAAvC,EAAAC,cAAC6U,GAAA,EAAD,iCACAvS,EAAAvC,EAAAC,cAAC8U,GAAA,EAAD,CACGC,IAAI,iBACJnO,MAAO/I,KAAKG,MAAM2D,UAAUnD,eAC5BoU,QAAS/U,KAAKW,eACdsR,SAAU,SAACkF,GAAD,OAASlM,EAAK8G,aAAa,CAAEjF,OAAQ,CAAExK,KAAM,iBAAkByG,MAAOoO,MAChFC,SAAS,EACTC,UAAU,EACVC,eAAe,EACfC,mBAAmB,OAO/B9S,EAAAvC,EAAAC,cAAC0U,GAAA,EAAD,CAAKW,WAAS,GACX/S,EAAAvC,EAAAC,cAAA,WACGsC,EAAAvC,EAAAC,cAAA,OAAKX,GAAG,iBAAiBiW,MAAO,CAAEC,QAAS,iBACxCjT,EAAAvC,EAAAC,cAAC6C,EAAA,EAAD,CAAQjC,MAAM,WAAU0B,EAAAvC,EAAAC,cAAA,4BAG7B+B,EACDO,EAAAvC,EAAAC,cAAA,WACGsC,EAAAvC,EAAAC,cAACwV,GAAA,EAAD,CAAUhT,OAAQ3E,KAAKG,MAAMoV,aAAclR,OAAQ,kBAAM4G,EAAKhK,SAAS,SAAAsM,GAAS,MAAK,CAAEgI,cAAehI,EAAUgI,kBAC7G9Q,EAAAvC,EAAAC,cAACyV,GAAA,EAAD,CAAgBC,OAAK,GAArB,gBAGApT,EAAAvC,EAAAC,cAAC2V,GAAA,EAAD,KACGrT,EAAAvC,EAAAC,cAAC4V,GAAA,EAAD,CAAchJ,SAAoD,IAA1C/O,KAAKJ,MAAMyD,cAAcwC,MAAM7B,OAAciB,QAASjF,KAAK2V,YAAnF,iBACAlR,EAAAvC,EAAAC,cAAC4V,GAAA,EAAD,CAAcC,SAAO,IACrBvT,EAAAvC,EAAAC,cAAC4V,GAAA,EAAD,CAAchJ,SAAUkJ,EAAQjY,KAAKG,MAAM2D,WACxCmB,QAAS,kBACNgG,EAAKhK,SACF,CACGuU,uBACIvK,EAAK9K,MAAMqV,0BAE1B/Q,EAAAvC,EAAAC,cAAA,YAAO8V,EAAQjY,KAAKG,MAAM2D,WACxB,wCACA,iBAGTW,EAAAvC,EAAAC,cAAC+V,GAAD,CACG9T,WAAYpE,KAAKG,MAAMqV,sBACvB5T,MAAOuW,GAAiBnY,KAAKG,MAAM2D,WACnCsM,SAAS,iBACT/L,OAAQ,kBAAM4G,EAAKhK,SAChB,CACGuU,uBAAwBvK,EAAK9K,MAAMqV,yBAEzClR,KAAK,OAERG,EAAAvC,EAAAC,cAACiW,GAAD,CACGhU,WAAYpE,KAAKG,MAAMsV,yBACvBrF,SAAS,iBACT/O,QAASrB,KAAKJ,MAAMyB,QACpBgD,OAAQ,kBAAM4G,EAAKhK,SAChB,CACGwU,0BAA2BxK,EAAK9K,MAAMsV,4BAE5CnR,KAAK,iBAjOgBrB,aAoP1C+Q,GAA8B7Q,YAAW6Q,IAE1B5Q,mBAVS,SAAAjD,GAAK,MAAK,CAC/BkY,IAAKlY,EAAMkY,IACX/M,KAAMnL,EAAMmL,KACZzD,SAAU1H,EAAM0H,SAChBlH,eAAgBR,EAAMQ,eACtB0C,cAAelD,EAAMmY,kBAKTlV,CAAyB4Q,aCjQlCuE,GAAc7Y,EAAQ,IAGrB,SAAS8Y,GAASC,GACtB,IAAIrE,EAAMqE,EAAK3X,qBACXL,EAAmBgY,EAAKhY,iBACxBC,EAAkB+X,EAAK/X,gBACvBC,EAAiB8X,EAAK9X,eACtB+X,EAAM,6BACV,GAAItE,EACD,IAAK,IAAIpN,EAAI,EAAGA,EAAIoN,EAAIpQ,OAAQgD,IAC7B0R,GAAO,iBAAmBtE,EAAIpN,GAAG+B,MAGvC,GAAItI,EACD,IAAK,IAAIuG,EAAI,EAAGA,EAAIvG,EAAiBuD,OAAQgD,IAC1C0R,GAAO,aAAejY,EAAiBuG,GAAG+B,MAGhD,GAAIrI,EACD,IAAK,IAAIsG,EAAI,EAAGA,EAAItG,EAAgBsD,OAAQgD,IACzC0R,GAAO,aAAehY,EAAgBsG,GAAG+B,MAG/C,GAAIpI,EACD,IAAK,IAAIqG,EAAI,EAAGA,EAAIrG,EAAeqD,OAAQgD,IACxC0R,GAAO,mBAAqB/X,EAAeqG,GAAG+B,MAGpD,OAAO2P,EAIH,SAASP,GAAiBM,GAC9B,IAAIrE,EAAMqE,EAAK3X,qBACXL,EAAmBgY,EAAKhY,iBACxBC,EAAkB+X,EAAK/X,gBACvBC,EAAiB8X,EAAK9X,eACtBY,EAAS,GACb,GAAI6S,EACD,IAAK,IAAIpN,EAAI,EAAGA,EAAIoN,EAAIpQ,OAAQgD,IAC7BzF,GAAU,OAAS6S,EAAIpN,GAAG+B,MAAQ,IAGxC,GAAItI,EACD,IAAK,IAAIuG,EAAI,EAAGA,EAAIvG,EAAiBuD,OAAQgD,IAC1CzF,GAAU,QAAUd,EAAiBuG,GAAG+B,MAAQ,IAGtD,GAAIrI,EACD,IAAK,IAAIsG,EAAI,EAAGA,EAAItG,EAAgBsD,OAAQgD,IACzCzF,GAAU,QAAUb,EAAgBsG,GAAG+B,MAAQ,IAGrD,GAAIpI,EACD,IAAK,IAAIqG,EAAI,EAAGA,EAAIrG,EAAeqD,OAAQgD,IACxCzF,GAAU,OAASZ,EAAeqG,GAAG+B,MAAQ,IAInD,OADAxH,EAASA,EAAOiE,UAAU,EAAGjE,EAAOyC,OAAS,OAI1C2U,qDACH,SAAAA,EAAY/Y,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAA2Y,IAChB9Y,EAAAI,EAAAC,KAAAF,KAAMJ,IA2ET8V,aAAe,SAAC+C,GACT5Y,EAAKD,MAAMyD,cAAcuV,0BAA4BH,IAGzD5Y,EAAKD,MAAMiZ,kBAAkBJ,GAC7B5Y,EAAKD,MAAMyB,QAAQ0E,KAAnB,IAAA8K,OAA4BsH,GAAiBM,KAC7C5Y,EAAKD,MAAMkZ,eAAeN,GAASC,MAhFnC5Y,EAAKM,MAAQ,CACVyY,wBAA2B,CACxBnY,iBAAkB,GAClBC,gBAAiB,GACjBC,eAAgB,GAChBG,qBAAsB,IAEzBiY,YAAa,EACbC,aAAa,GAEhBnZ,EAAK6V,aAAe7V,EAAK6V,aAAapV,KAAlBR,OAAAgS,EAAA,EAAAhS,CAAAD,IACpBA,EAAKkZ,WAAalZ,EAAKkZ,WAAWzY,KAAhBR,OAAAgS,EAAA,EAAAhS,CAAAD,IAbFA,uDAiBnB,WACOoY,EAAQjY,KAAKJ,MAAMyD,cAAcuV,yBAClC5Y,KAAK+Y,cAGL/Y,KAAKJ,MAAMkZ,eAAeN,GAASxY,KAAKJ,MAAMyD,cAAcuV,0BAC5D5Y,KAAKJ,MAAMyB,QAAQ0E,KAAnB,IAAA8K,OAA4BsH,GAAiBnY,KAAKJ,MAAMyD,cAAcuV,2BACtE5Y,KAAKiB,SAAS,CAAE8X,YAAY,+BAOlC,WAAa,IAAA9R,EAAAjH,KACNiZ,EAAQ,GACRC,EAAO,GACPC,EAAO,GACPC,EAAO,GACLC,EAASd,GAAYe,MAAMtZ,KAAKJ,MAAM2Q,SAASgJ,QACrD,GAAIF,EAAOG,KAAM,CACd,IAAIA,EAAOH,EAAOG,KACZ9K,MAAM+K,QAAQJ,EAAOG,QACxBA,EAAO,CAACH,EAAOG,OAElBA,EAAKnU,IAAI,SAAAqU,GAAK,OAAIR,EAAKnT,KAAK,CAAEuO,MAAOrN,EAAKrH,MAAMiI,SAAShC,MAAM6T,GAAO3R,YAAagB,MAAO2Q,MAE7F,GAAIL,EAAOM,KAAM,CACd,IAAIA,EAAON,EAAOM,KACZjL,MAAM+K,QAAQJ,EAAOM,QACxBA,EAAO,CAACN,EAAOM,OAElBA,EAAKtU,IAAI,SAAAqU,GAAK,OAAIP,EAAKpT,KAAK,CAAEuO,MAAOrN,EAAKrH,MAAMiI,SAAShC,MAAM6T,GAAO3R,YAAagB,MAAO2Q,MAE7F,GAAIL,EAAOO,IAAK,CACb,IAAIA,EAAMP,EAAOO,IACXlL,MAAM+K,QAAQJ,EAAOO,OACxBA,EAAM,CAACP,EAAOO,MAEjBA,EAAIvU,IAAI,SAAAwU,GAAK,OAAIT,EAAKrT,KAAK,CAAEuO,MAAOrN,EAAKrH,MAAMe,eAAekF,MAAMgU,GAAOtU,kBAAmBwD,MAAO8Q,MAExG,GAAIR,EAAOjF,IAAK,CACb,IAAI0F,EAAOT,EAAOjF,IACZ1F,MAAM+K,QAAQK,KACjBA,EAAO,CAACT,EAAOjF,MAElB0F,EAAKzU,IAAI,SAAAoH,GAAK,OAAIwM,EAAMlT,KAAK,CAAEuO,MAAOrN,EAAKrH,MAAM0L,KAAKzF,MAAM4G,GAAOZ,cAAe9C,MAAO0D,MAE5F,IAAImM,EAA0B,CAC3BnY,iBAAkByY,EAClBxY,gBAAiByY,EACjBxY,eAAgByY,EAChBtY,qBAAsBmY,GAEzBjZ,KAAKJ,MAAMiZ,kBAAkBD,GAC7B5Y,KAAKJ,MAAMkZ,eAAeN,GAASI,IACnC5Y,KAAKiB,SAAS,CAAC8X,YAAY,0BAY9B,WACG,OACGtU,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACGqC,EAAAvC,EAAAC,cAAC4X,GAAA,EAAD,CAAOzX,KAAK,+BACZmC,EAAAvC,EAAAC,cAAC6X,GAAA,EAAD,CAAWC,OAAK,GACbxV,EAAAvC,EAAAC,cAAC+X,EAAA,EAAD,CAAWD,OAAK,GACbxV,EAAAvC,EAAAC,cAAC0U,GAAA,EAAD,KACApS,EAAAvC,EAAAC,cAAC2U,GAAA,EAAD,CAAKqD,GAAI,CAAE7V,KAAM,EAAG8V,MAAO,EAAGC,OAAQ,IACnC5V,EAAAvC,EAAAC,cAAA,MAAIK,UAAU,aAAd,kCACAiC,EAAAvC,EAAAC,cAAA,KAAGK,UAAU,QAAb,wDACAiC,EAAAvC,EAAAC,cAAA,KAAGK,UAAU,cAAb,+EAAsGiC,EAAAvC,EAAAC,cAAA,WACtGsC,EAAAvC,EAAAC,cAAA,mFACAsC,EAAAvC,EAAAC,cAACmY,GAAD,MACA7V,EAAAvC,EAAAC,cAAA,MAAIK,UAAU,SACbxC,KAAKG,MAAM4Y,WACZtU,EAAAvC,EAAAC,cAACoY,GAAD,CACGpF,cAAenV,KAAKJ,MAAMyD,cAAcuV,wBACxC3C,cAAejW,KAAK0V,aACpBrU,QAASrB,KAAKJ,MAAMyB,UAAY,iBAxGpB4B,aA0H9BC,GAAqB,CACxB4V,oBACA0B,YACA3B,wBAGHF,GAAwBxV,YAAWwV,IAEpBvV,mBAhBS,SAAAjD,GAAK,MAAK,CAC/BkY,IAAKlY,EAAMkY,IACX/M,KAAMnL,EAAMmL,KACZzD,SAAU1H,EAAM0H,SAChBlH,eAAgBR,EAAMQ,eACtB0C,cAAelD,EAAMmY,kBAWgBpV,GAAzBE,CAA6CuV,wBChN/C8B,GAAU,CACpBC,2BAA4B,6BAC5BC,6BAA8B,+BAC9BC,6BAA8B,gCAGpBC,GAA2B,iBAAO,CAC5ChI,KAAM4H,GAAQC,6BAGJI,GAA6B,SAACna,GAAD,MAAqB,CAC5DkS,KAAM4H,GAAQE,6BACdI,QAAS,CAAEpa,oBAGDqa,GAA6B,SAAC1T,GAAD,MAAY,CACnDuL,KAAM4H,GAAQG,6BACdG,QAAS,CAAEzT,WAGP,SAAS2T,KACb,IAAIta,EAAiB,GACrB,OAAO,SAAAua,GAEJ,OADAA,EAASL,MACFM,KAAMC,IAAI,sCACbC,KAAK,SAAA9Q,GACHA,EAASC,KAAKnF,IAAI,SAAAC,GAEf,OADA3E,EAAe2E,EAAc9D,IAAM8D,EAC5BA,IAEV4V,EAASJ,GAA2Bna,MAEtC2a,MAAM,SAAAhU,GAAK,OAAI4T,EAASF,GAA2B1T,OChCtD,IAAMmT,GAAU,CACpBc,qBAAsB,uBACtBC,uBAAwB,yBACxBC,uBAAwB,0BAGdC,GAAqB,iBAAO,CACtC7I,KAAM4H,GAAQc,uBAGJI,GAAuB,SAAC9T,GAAD,MAAe,CAChDgL,KAAM4H,GAAQe,uBACdT,QAAS,CAAElT,cAGD+T,GAAuB,SAACtU,GAAD,MAAY,CAC7CuL,KAAM4H,GAAQgB,uBACdV,QAAS,CAAEzT,WAGP,SAASuU,KACb,IAAIhU,EAAW,GACf,OAAO,SAAAqT,GAEJ,OADAA,EAASQ,MACFP,KAAMC,IAAI,gCACbC,KAAK,SAAA9Q,GACHA,EAASC,KAAKnF,IAAI,SAAAyC,GAEf,OADAD,EAASC,EAAQtG,IAAMsG,EAChBA,IAEVoT,EAASS,GAAqB9T,MAEhCyT,MAAM,SAAAhU,GAAK,OAAI4T,EAASU,GAAqBtU,OChChD,IAAMmT,GAAU,CACpBqB,0BAA2B,4BAC3BC,4BAA6B,8BAC7BC,4BAA6B,+BAGnBC,GAA0B,iBAAO,CAC3CpJ,KAAM4H,GAAQqB,4BAGJI,GAA4B,SAACvQ,GAAD,MAAoB,CAC1DkH,KAAM4H,GAAQsB,4BACdhB,QAAS,CAAEpP,mBAGDwQ,GAA4B,SAAC7U,GAAD,MAAY,CAClDuL,KAAM4H,GAAQuB,4BACdjB,QAAS,CAAEzT,WAGP,SAAS8U,KACb,IAAIzQ,EAAgB,GACpB,OAAO,SAAAuP,GAEJ,OADAA,EAASe,MACFd,KAAMC,IAAI,4BACbC,KAAK,SAAA9Q,GACHA,EAASC,KAAKnF,IAAI,SAAAuG,GAEf,OADAD,EAAcC,EAAapK,IAAMoK,EAC1BA,IAEVsP,EAASgB,GAA0BvQ,MAErC2P,MAAM,SAAAhU,GAAK,OAAI4T,EAASiB,GAA0B7U,WCLtD+U,qDACH,SAAAA,EAAYzc,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAAqc,IAChBxc,EAAAI,EAAAC,KAAAF,KAAMJ,IAmBT0c,iBAAmB,kBAAMzc,EAAKD,MAAM2c,eApBjB1c,EA8BnB2c,uBAAyB,WAatB,OAZc3c,EAAKM,MAAMsc,UAELpX,IAAI,SAAAoT,GAAI,OACzBhU,EAAAvC,EAAAC,cAAA,MAAI8D,IAAKwS,EAAKjX,IACXiD,EAAAvC,EAAAC,cAAA,MAAIua,MAAM,OAAOjE,EAAKpF,UAAtB,IAAkCoF,EAAKnF,UACvC7O,EAAAvC,EAAAC,cAAA,UAAMtC,EAAKD,MAAMoN,aAAenN,EAAKD,MAAM0L,OAAS,GAAsE7G,EAAAvC,EAAAC,cAAC2I,EAAA,EAAD,CAAS/H,MAAM,YAAhF0B,EAAAvC,EAAAC,cAACwa,GAAD,CAAe9W,MAAO4S,EAAK7M,aAActF,cAAe,MACjH7B,EAAAvC,EAAAC,cAAA,UAAIsC,EAAAvC,EAAAC,cAACqR,EAAAtR,EAAD,CAAWuR,MAAOgF,EAAK/E,gBAC3BjP,EAAAvC,EAAAC,cAAA,UAAMtC,EAAKD,MAAMgJ,iBAAmB/I,EAAKD,MAAMiI,WAAa,GAA4DpD,EAAAvC,EAAAC,cAAC2I,EAAA,EAAD,CAAS/H,MAAM,YAAtE0B,EAAAvC,EAAAC,cAACya,EAAD,CAAS/W,MAAO4S,EAAK5Q,SAAUvB,cAAe,MAC/G7B,EAAAvC,EAAAC,cAAA,UAAMtC,EAAKD,MAAMuH,uBAAyBtH,EAAKD,MAAMe,iBAAmB,GAAyE8D,EAAAvC,EAAAC,cAAC2I,EAAA,EAAD,CAAS/H,MAAM,YAAnF0B,EAAAvC,EAAAC,cAAC0a,EAAD,CAAgBhX,MAAO4S,EAAK9X,eAAgB2F,cAAe,MACxI7B,EAAAvC,EAAAC,cAAA,UAAIsC,EAAAvC,EAAAC,cAAC2a,GAAD,CAAY1J,KAAMqF,SAtC5B5Y,EAAKM,MAAQ,CACVsc,UAAW,GACXhP,SAAU,IAEb5N,EAAKmO,aAAenO,EAAKmO,aAAa1N,KAAlBR,OAAAgS,EAAA,EAAAhS,CAAAD,IACpBA,EAAKkd,cAAgBld,EAAKkd,cAAczc,KAAnBR,OAAAgS,EAAA,EAAAhS,CAAAD,IAPLA,uDAUnB,WACGG,KAAKJ,MAAMic,gBACX7b,KAAKJ,MAAMwc,qBACXpc,KAAKJ,MAAMqb,kDAGd,SAAarN,GACV5N,KAAKiB,SAAS,CAAEwb,UAAW7O,iCAK9B,WACGoP,WAASC,SAAS,eAAgB,CAC/BC,SAAU,IACVC,QAAQ,IAEXnd,KAAKJ,MAAM2c,oCAmBd,WACG,IAAIjT,EAAS,CACV,CAAEuB,aAAc,WAAYrB,UAAWxJ,KAAKJ,MAAMgJ,gBAAiBtB,MAAOtH,KAAKJ,MAAMiJ,cACrF,CAAEgC,aAAc,gBAAiBrB,UAAWxJ,KAAKJ,MAAMoN,YAAa1F,MAAOtH,KAAKJ,MAAMqN,UACtF,CAAEpC,aAAc,iBAAkBrB,UAAWxJ,KAAKJ,MAAMuH,sBAAuBG,MAAOtH,KAAKJ,MAAMyH,qBACjG,CAAEwD,aAAc,6BAA8BrB,UAAWxJ,KAAKJ,MAAMwd,uBAAwB9V,MAAOtH,KAAKJ,MAAMyd,uBAE7GC,EAAaxU,EAAOyU,sBAAsBjU,GAC9C,OACG7E,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACIpC,KAAKJ,MAAM0Y,gBAAgBtU,OAAS,EACrCS,EAAAvC,EAAAC,cAAA,OAAKsV,MAAO,CAAC+F,SAAU,WAAYC,OAAQ,SACxChZ,EAAAvC,EAAAC,cAACub,EAAA,EAAD,CAAO/Y,OAAQ3E,KAAKJ,MAAM+d,UAAWlG,MAAO,CAAC+F,SAAU,QAASI,IAAK,OAAQC,MAAO,SACjFpZ,EAAAvC,EAAAC,cAAC2b,EAAA,EAAD,CAAazZ,OAAQrE,KAAKsc,iBAAkBvM,KAAK,WAAjD,kBACAtL,EAAAvC,EAAAC,cAAC4b,EAAA,EAAD,KACGtZ,EAAAvC,EAAAC,cAAA,KAAGoE,KAAK,KAAKtB,QAASjF,KAAK+c,eAA3B,uCAKF,KACPtY,EAAAvC,EAAAC,cAAC6b,EAAD,CAASxZ,KAAM8E,EAAQU,OAAQsT,IAC5Btd,KAAKJ,MAAMgJ,iBAAmB5I,KAAKJ,MAAMiI,WAAa,IAAS7H,KAAKJ,MAAMoN,aAAehN,KAAKJ,MAAM0L,OAAS,IAAStL,KAAKJ,MAAMuH,uBAAyBnH,KAAKJ,MAAMe,iBAAmB,GAAkC,KAA5B8D,EAAAvC,EAAAC,cAAC8b,GAAD,MACjMxZ,EAAAvC,EAAAC,cAAC+X,EAAA,EAAD,CAAWD,OAAK,GAC0B,IAAtCja,KAAKJ,MAAM0Y,gBAAgBtU,OACzBS,EAAAvC,EAAAC,cAACyH,EAAA,EAAD,CAAO7G,MAAM,QACV0B,EAAAvC,EAAAC,cAAA,MAAIK,UAAU,iBAAd,cACAiC,EAAAvC,EAAAC,cAAA,2GAKHsC,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACGqC,EAAAvC,EAAAC,cAAA,OAAKK,UAAU,YACZiC,EAAAvC,EAAAC,cAAA,KAAGK,UAAU,0BAAb,+BACSxC,KAAKJ,MAAM0Y,gBAAgBtU,OADpC,cAIHS,EAAAvC,EAAAC,cAAC+b,EAAA,QAAD,CAAS5b,KAAK,gBACdmC,EAAAvC,EAAAC,cAACgc,EAAA,EAAD,CAAOC,OAAK,EAACC,YAAU,EAAC7b,UAAU,gBAC/BiC,EAAAvC,EAAAC,cAAA,SAAOK,UAAU,eACdiC,EAAAvC,EAAAC,cAAA,UACGsC,EAAAvC,EAAAC,cAAA,kBACAsC,EAAAvC,EAAAC,cAAA,6BACAsC,EAAAvC,EAAAC,cAAA,2BACAsC,EAAAvC,EAAAC,cAAA,wBACAsC,EAAAvC,EAAAC,cAAA,8BACAsC,EAAAvC,EAAAC,cAAA,gCAGNsC,EAAAvC,EAAAC,cAAA,aACInC,KAAKwc,4BAIZ/X,EAAAvC,EAAAC,cAAA,OAAKK,UAAU,sBACZiC,EAAAvC,EAAAC,cAACmc,GAAD,CAAmB7Q,SAAUzN,KAAKG,MAAMsN,SAAU5H,MAAO7F,KAAKJ,MAAM0Y,gBAAiBtK,aAAchO,KAAKgO,0BAvGxG/K,aAoIlBC,GAAqB,CACxB2Y,iBACAO,sBACAnB,uBACAsB,kBAGYnZ,eA1BS,SAAAjD,GAAK,MAAK,CAC/B0H,SAAU1H,EAAM0H,SAAShC,MACzB+C,gBAAiBzI,EAAM0H,SAAST,QAChCyB,aAAc1I,EAAM0H,SAASP,MAE7BgE,KAAMnL,EAAMmL,KAAKzF,MACjBmH,YAAa7M,EAAMmL,KAAKlE,QACxB6F,SAAU9M,EAAMmL,KAAKhE,MAErBgR,gBAAiBnY,EAAMmY,gBAAgBzS,MACvCuX,uBAAwBjd,EAAMmY,gBAAgBlR,QAC9CiW,qBAAsBld,EAAMmY,gBAAgBhR,MAC5CqW,UAAWxd,EAAMmY,gBAAgBiG,UAEjC5d,eAAgBR,EAAMQ,eAAekF,MACrCsB,sBAAuBhH,EAAMQ,eAAeyG,QAC5CC,oBAAqBlH,EAAMQ,eAAe2G,QAULpE,GAAzBE,CAA6CiZ,QC5JtDmC,+MAEFpY,iBAAmB,WACf,IAAIhB,EAAc,GASlB,OARwBvF,EAAKD,MAAMiG,MACnBR,IAAI,SAAA2G,GAAc,OAC9B5G,GAAevF,EAAKD,MAAM0L,KAAKU,GAAgByS,WAAa,QAChErZ,EAAcA,EAAYI,UAAU,EAAGJ,EAAYpB,OAAS,IAC5CA,OAASnE,EAAKD,MAAM0G,gBAChClB,EAAcA,EAAYI,UAAU,EAAG3F,EAAKD,MAAM0G,eAAiB,OAC5C,IAAvBlB,EAAYpB,QAAgC,SAAhBoB,IAC5BA,EAAc,OACXA,+CAGX,WACI,OACIX,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACKpC,KAAKoG,2BAlBGmJ,IAAMtM,WA+BhBG,eANS,SAAAjD,GAAK,MAAK,CAC9BmL,KAAMnL,EAAMmL,KAAKzF,MACjBmH,YAAa7M,EAAMmL,KAAKlE,QACxB6F,SAAU9M,EAAMmL,KAAKhE,QAGVlE,CAAyBob,IC1C3BE,GAAgB,CAC1BC,0BAA2B,4BAC3BC,4BAA6B,8BAC7BC,4BAA6B,8BAC7BC,oBAAqB,sBACrBC,QAAS,UACTC,aAAc,gBCajBvP,KAAQC,IAAIC,UAwHGC,qDArHZ,SAAAA,EAAYhQ,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAA4P,IAChB/P,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACV0P,OAAS,GAHIhQ,4CAQnB,WAAS,IAAAoH,EAAAjH,KAEN,OACGyE,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACGqC,EAAAvC,EAAAC,cAACuC,EAAA,EAAD,CAAOJ,KAAK,KAAKK,OAAQ3E,KAAKG,MAAM0P,MAAOxL,OAAQ,kBAAM4C,EAAKhG,SAAS,CAAE4O,OAAQ5I,EAAK9G,MAAM0P,UACzFpL,EAAAvC,EAAAC,cAAC0C,EAAA,EAAD,CAAaR,OAAQ,kBAAM4C,EAAKhG,SAAS,CAAE4O,OAAQ5I,EAAK9G,MAAM0P,UAAUpL,EAAAvC,EAAAC,cAAC2N,GAAA,EAAD,CAAiBC,KAAK,cAA9F,eACAtL,EAAAvC,EAAAC,cAAC2C,EAAA,EAAD,KACGL,EAAAvC,EAAAC,cAACyH,EAAA,EAAD,CAAO7G,MAAM,QAAb,yLAIuBmB,EACpBO,EAAAvC,EAAAC,cAAC6N,GAAA,EAAD,CAAMtN,GAAG,oBAAT,QALH,KAQA+B,EAAAvC,EAAAC,cAACgE,EAAA,EAAD,KACG1B,EAAAvC,EAAAC,cAAC6D,EAAA,EAAD,KACGvB,EAAAvC,EAAAC,cAACyE,EAAA,EAAD,sBACAnC,EAAAvC,EAAAC,cAAC0E,EAAA,EAAD,KACGpC,EAAAvC,EAAAC,cAAA,qFAEAsC,EAAAvC,EAAAC,cAAA,wEAAgE+B,EAChEO,EAAAvC,EAAAC,cAAA,iGADA,KAIAsC,EAAAvC,EAAAC,cAAA,0NAMAsC,EAAAvC,EAAAC,cAAA,0eAUyC+B,EACtCO,EAAAvC,EAAAC,cAAA,yBAXH,yMAmBNsC,EAAAvC,EAAAC,cAAC6D,EAAA,EAAD,KACGvB,EAAAvC,EAAAC,cAACyE,EAAA,EAAD,sBACAnC,EAAAvC,EAAAC,cAAC0E,EAAA,EAAD,uEAEWpC,EAAAvC,EAAAC,cAAA,sCAFX,oOAUHsC,EAAAvC,EAAAC,cAAC6D,EAAA,EAAD,KACGvB,EAAAvC,EAAAC,cAACyE,EAAA,EAAD,iBACAnC,EAAAvC,EAAAC,cAAC0E,EAAA,EAAD,qLAI4CpC,EAAAvC,EAAAC,cAAA,kBAJ5C,4BAK4BsC,EAAAvC,EAAAC,cAAA,kBAL5B,4BAMWsC,EAAAvC,EAAAC,cAAA,uBANX,wDAWHsC,EAAAvC,EAAAC,cAAC6D,EAAA,EAAD,KACGvB,EAAAvC,EAAAC,cAACyE,EAAA,EAAD,uBACAnC,EAAAvC,EAAAC,cAAC0E,EAAA,EAAD,yIAOHpC,EAAAvC,EAAAC,cAAC6D,EAAA,EAAD,KACGvB,EAAAvC,EAAAC,cAACyE,EAAA,EAAD,sBACAnC,EAAAvC,EAAAC,cAAC0E,EAAA,EAAD,kFAE2BpC,EAAAvC,EAAAC,cAAA,4BACvB+B,EAHJ,4BAGmCA,EAChCO,EAAAvC,EAAAC,cAAA,0BAAwB+B,EAJ3B,iFAM6BO,EAAAvC,EAAAC,cAAA,gBAUzCsC,EAAAvC,EAAAC,cAAC6C,EAAA,EAAD,CAAQjC,MAAM,OAAOkC,QAAS,kBAAMgC,EAAKhG,SAAS,CAAE4O,OAAQ5I,EAAK9G,MAAM0P,UAAvE,sBA/GmB5M,aCOzBgc,qDACF,SAAAA,EAAYrf,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAAif,IACfpf,EAAAI,EAAAC,KAAAF,KAAMJ,IAsBTqU,YAAc,WACX,IAAMC,EAAW,CAAC,KAAM,KAAM,KAAM,KAAM,MAE1C,OADiBrU,EAAKD,MAAM0L,KAAKzF,MAAMsO,OAAO,SAAUC,GAAO,OAAOF,EAASG,SAASD,EAAIzH,WAC1EtH,IAAI,SAAA+O,GAAG,MAAK,CAAEE,MAAOF,EAAIvI,cAAe9C,MAAOqL,EAAI5S,OA1BtD3B,EA6BlB0U,uBAAyB,WACtB,OAAO1U,EAAKD,MAAMe,eAAekF,MAAMR,IAAI,SAAAC,GAAa,MAAK,CAAEgP,MAAOhP,EAAcC,kBAAmBwD,MAAOzD,EAAc9D,OA9B7G3B,EAiClB2U,gBAAkB,SAAC/L,GAChB,IAAMgM,EAAmB5U,EAAKD,MAAMiI,SAAShC,MAAMsO,OAAO,SAAUrM,GAAW,OAAOA,EAAQW,cAAgBA,IACxGiM,EAAaD,EAAiBN,OAAO,SAAUrM,GAAW,MAA6B,OAAtBA,EAAQY,YACzEiM,EAAgBF,EAAiBN,OAAO,SAAUrM,GAAW,MAA6B,OAAtBA,EAAQY,YAC5EkM,EAAcH,EAAiBN,OAAO,SAAUrM,GAAW,MAA6B,OAAtBA,EAAQY,YAC5EmM,EAAuBH,EAAWrP,IAAI,SAAAyC,GAAO,MAAK,CACnDwM,MAAOxM,EAAQC,YACfgB,MAAOjB,EAAQtG,MAEdsT,EAA0BH,EAActP,IAAI,SAAAyC,GAAO,MAAK,CACzDwM,MAAOxM,EAAQC,YACfgB,MAAOjB,EAAQtG,MAqBlB,MAdG,CACG,CACG8S,MAAO,sBACPS,QARmBH,EAAYvP,IAAI,SAAAyC,GAAO,MAAK,CACrDwM,MAAOxM,EAAQC,YACfgB,MAAOjB,EAAQtG,OAQZ,CACG8S,MAAO,wBACPS,QAASD,GAEZ,CACGR,MAAO,qBACPS,QAASF,KA9DHhV,EAoElBkS,aAAe,SAACiD,GACb,IAAAC,EAAsBD,EAAElI,OAAlBxK,EAAN2S,EAAM3S,KAAMyG,EAAZkM,EAAYlM,MACU,aAAlBiM,EAAElI,OAAO+F,OACV9J,EAAQiM,EAAElI,OAAOoI,SAEpB,IAAMpR,EAAShE,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GAAQD,EAAKM,MAAM2D,WAAnB,GAAAhE,OAAAmJ,EAAA,EAAAnJ,CAAA,GAA+BwC,EAAiB,OAAVyG,EAAiB,GAAKA,IAC3ElJ,EAAKoB,SAAS,CAAE6C,eAxEhBjE,EAAKM,MAAQ,CACV2D,UAAWjE,EAAKD,MAAMuV,cACtBC,SAAU,CACPC,WAAY,IAEfC,eAAgB,KAChBzF,OAAO,EACP0F,cAAc,EAEdC,uBAAuB,EACvBC,0BAA0B,GAE7B5V,EAAKkS,aAAelS,EAAKkS,aAAazR,KAAlBR,OAAAgS,EAAA,EAAAhS,CAAAD,IACpBA,EAAK6V,aAAe7V,EAAK6V,aAAapV,KAAlBR,OAAAgS,EAAA,EAAAhS,CAAAD,IACpBA,EAAK8V,WAAa9V,EAAK8V,WAAWrV,KAAhBR,OAAAgS,EAAA,EAAAhS,CAAAD,IAClBA,EAAK+V,WAAa/V,EAAKoU,cACvBpU,EAAKgW,UAAYhW,EAAK2U,gBAAgB,MACtC3U,EAAKiW,UAAYjW,EAAK2U,gBAAgB,MACtC3U,EAAKc,eAAiBd,EAAK0U,yBApBZ1U,kDA6ElB,SAAakW,GACVA,EAAeC,iBACfhW,KAAKJ,MAAMqW,cAAcjW,KAAKG,MAAM2D,qCAIvC,WAAa,IAAAmD,EAAAjH,KAEJkW,EADQlW,KAAKJ,MAAMyD,cAAcwC,MACbR,IAAI,SAAA+N,GAAI,MAAK,CACpC+C,aAAc/C,EAAKC,UACnB+C,YAAahD,EAAKE,SAClB+C,gBAAiBjD,EAAKM,aACtB4C,QAAWlD,EAAKxG,QAChBd,cAAiBL,GAAwB2H,EAAKxH,aAAc3E,EAAKrH,MAAM0L,KAAKzF,OAC5E0Q,YAAavD,GAAaI,EAAKG,UAAUjR,KACzCkU,YAAapD,EAAKO,SAClB8C,YAAerD,EAAKQ,YACpB5L,SAAYL,EAAmByL,EAAKvL,SAAUZ,EAAKrH,MAAMiI,SAAShC,OAClEJ,eAAkBP,EAAyBkO,EAAKzS,eAAgBsG,EAAKrH,MAAMe,eAAekF,UAE7F6Q,GAAWR,EAAa,qCAI3B,WAAS,IAAAjL,EAAAjL,KAEN,OACGyE,EAAAvC,EAAAC,cAACwU,GAAA,EAAD,CAAMC,SAAU5W,KAAK0V,cAClBjR,EAAAvC,EAAAC,cAAC0U,GAAA,EAAD,KACGpS,EAAAvC,EAAAC,cAAC2U,GAAA,EAAD,KACGrS,EAAAvC,EAAAC,cAAC4U,GAAA,EAAD,KACGtS,EAAAvC,EAAAC,cAAC6U,GAAA,EAAD,+BACAvS,EAAAvC,EAAAC,cAAC8U,GAAA,EAAD,CACGC,IAAI,wBACJ5U,KAAK,wBAELyG,MAAO/I,KAAKG,MAAM2D,UAAUhD,qBAC5BiU,QAAS/U,KAAK4V,WACd3D,SAAU,SAACkF,GAAD,OAASlM,EAAK8G,aAAa,CAAEjF,OAAQ,CAAExK,KAAM,uBAAwByG,MAAOoO,MACtFC,SAAS,EACTC,UAAU,EACVC,eAAe,EACfC,mBAAmB,OAM/B9S,EAAAvC,EAAAC,cAAC0U,GAAA,EAAD,KACGpS,EAAAvC,EAAAC,cAAC2U,GAAA,EAAD,KACGrS,EAAAvC,EAAAC,cAAC4U,GAAA,EAAD,KACGtS,EAAAvC,EAAAC,cAAC6U,GAAA,EAAD,oCACAvS,EAAAvC,EAAAC,cAAC8U,GAAA,EAAD,CACGC,IAAI,mBACJnO,MAAO/I,KAAKG,MAAM2D,UAAUrD,iBAC5BsU,QAAS/U,KAAK6V,UACd5D,SAAU,SAACkF,GAAD,OAASlM,EAAK8G,aAAa,CAAEjF,OAAQ,CAAExK,KAAM,mBAAoByG,MAAOoO,MAClFC,SAAS,EACTC,UAAU,EACVC,eAAe,EACfC,mBAAmB,OAM/B9S,EAAAvC,EAAAC,cAAC0U,GAAA,EAAD,KACGpS,EAAAvC,EAAAC,cAAC2U,GAAA,EAAD,KACGrS,EAAAvC,EAAAC,cAAC4U,GAAA,EAAD,KACGtS,EAAAvC,EAAAC,cAAC6U,GAAA,EAAD,mCACAvS,EAAAvC,EAAAC,cAAC8U,GAAA,EAAD,CACGC,IAAI,kBACJnO,MAAO/I,KAAKG,MAAM2D,UAAUpD,gBAC5BqU,QAAS/U,KAAK8V,UACd7D,SAAU,SAACkF,GAAD,OAASlM,EAAK8G,aAAa,CAAEjF,OAAQ,CAAExK,KAAM,kBAAmByG,MAAOoO,MACjFC,SAAS,EACTC,UAAU,EACVC,eAAe,EACfC,mBAAmB,OAM/B9S,EAAAvC,EAAAC,cAAC0U,GAAA,EAAD,KACGpS,EAAAvC,EAAAC,cAAC2U,GAAA,EAAD,KACGrS,EAAAvC,EAAAC,cAAC4U,GAAA,EAAD,KACGtS,EAAAvC,EAAAC,cAAC6U,GAAA,EAAD,iCACAvS,EAAAvC,EAAAC,cAAC8U,GAAA,EAAD,CACGC,IAAI,iBACJnO,MAAO/I,KAAKG,MAAM2D,UAAUnD,eAC5BoU,QAAS/U,KAAKW,eACdsR,SAAU,SAACkF,GAAD,OAASlM,EAAK8G,aAAa,CAAEjF,OAAQ,CAAExK,KAAM,iBAAkByG,MAAOoO,MAChFC,SAAS,EACTC,UAAU,EACVC,eAAe,EACfC,mBAAmB,OAM/B9S,EAAAvC,EAAAC,cAAC0U,GAAA,EAAD,CAAKW,WAAS,GACX/S,EAAAvC,EAAAC,cAAA,WACGsC,EAAAvC,EAAAC,cAAA,OAAKX,GAAG,iBAAiBiW,MAAO,CAAEC,QAAS,iBACxCjT,EAAAvC,EAAAC,cAAC6C,EAAA,EAAD,CAAQjC,MAAM,WAAU0B,EAAAvC,EAAAC,cAAA,4BAG7B+B,EACDO,EAAAvC,EAAAC,cAAA,WAEGsC,EAAAvC,EAAAC,cAACwV,GAAA,EAAD,CAAUhT,OAAQ3E,KAAKG,MAAMoV,aAAclR,OAAQ,kBAAM4G,EAAKhK,SAAS,SAAAsM,GAAS,MAAK,CAAEgI,cAAehI,EAAUgI,kBAC7G9Q,EAAAvC,EAAAC,cAACyV,GAAA,EAAD,CAAgBC,OAAK,GAArB,gBAGApT,EAAAvC,EAAAC,cAAC2V,GAAA,EAAD,KACGrT,EAAAvC,EAAAC,cAAC4V,GAAA,EAAD,CAAchJ,SAAoD,IAA1C/O,KAAKJ,MAAMyD,cAAcwC,MAAM7B,OAAciB,QAASjF,KAAK2V,YAAnF,iBACAlR,EAAAvC,EAAAC,cAAC4V,GAAA,EAAD,CAAcC,SAAO,IACrBvT,EAAAvC,EAAAC,cAAC4V,GAAA,EAAD,CAAchJ,SAAUkJ,EAAQjY,KAAKG,MAAM2D,WACxCmB,QAAS,kBACNgG,EAAKhK,SACF,CACGuU,uBACIvK,EAAK9K,MAAMqV,0BAE1B/Q,EAAAvC,EAAAC,cAAA,YAAO8V,EAAQjY,KAAKG,MAAM2D,WACxB,wCACA,iBAGTW,EAAAvC,EAAAC,cAAC+V,GAAD,CACG9T,WAAYpE,KAAKG,MAAMqV,sBACvB5T,MAAOuW,GAAiBnY,KAAKG,MAAM2D,WACnCsM,SAAS,eACT/L,OAAQ,kBAAM4G,EAAKhK,SAChB,CACGuU,uBAAwBvK,EAAK9K,MAAMqV,yBAEzClR,KAAK,OAERG,EAAAvC,EAAAC,cAACiW,GAAD,CACGhU,WAAYpE,KAAKG,MAAMsV,yBACvBrF,SAAS,eACT/O,QAASrB,KAAKJ,MAAMyB,QACpBgD,OAAQ,kBAAM4G,EAAKhK,SAChB,CACGwU,0BAA2BxK,EAAK9K,MAAMsV,4BAE5CnR,KAAK,iBAlOYrB,aAqPxCgc,GAA4B9b,YAAW8b,IAExB7b,mBAVW,SAAAjD,GAAK,MAAK,CAC/BkY,IAAKlY,EAAMkY,IACX/M,KAAMnL,EAAMmL,KACZzD,SAAU1H,EAAM0H,SAChBlH,eAAgBR,EAAMQ,eACtB0C,cAAelD,EAAMkD,gBAKXD,CAAyB6b,ICnQlC1G,GAAc7Y,EAAQ,IAGrB,SAAS8Y,GAASC,GACtB,IAAIrE,EAAMqE,EAAK3X,qBACXL,EAAmBgY,EAAKhY,iBACxBC,EAAkB+X,EAAK/X,gBACvBC,EAAiB8X,EAAK9X,eACtB+X,EAAM,6BACV,GAAItE,EACD,IAAK,IAAIpN,EAAI,EAAGA,EAAIoN,EAAIpQ,OAAQgD,IAC7B0R,GAAO,iBAAmBtE,EAAIpN,GAAG+B,MAGvC,GAAItI,EACD,IAAK,IAAIuG,EAAI,EAAGA,EAAIvG,EAAiBuD,OAAQgD,IAC1C0R,GAAO,aAAejY,EAAiBuG,GAAG+B,MAGhD,GAAIrI,EACD,IAAK,IAAIsG,EAAI,EAAGA,EAAItG,EAAgBsD,OAAQgD,IACzC0R,GAAO,aAAehY,EAAgBsG,GAAG+B,MAG/C,GAAIpI,EACD,IAAK,IAAIqG,EAAI,EAAGA,EAAIrG,EAAeqD,OAAQgD,IACxC0R,GAAO,mBAAqB/X,EAAeqG,GAAG+B,MAGpD,OAAO2P,EAIH,SAASP,GAAiBM,GAC9B,IAAIrE,EAAMqE,EAAK3X,qBACXL,EAAmBgY,EAAKhY,iBACxBC,EAAkB+X,EAAK/X,gBACvBC,EAAiB8X,EAAK9X,eACtBY,EAAS,GACb,GAAI6S,EACD,IAAK,IAAIpN,EAAI,EAAGA,EAAIoN,EAAIpQ,OAAQgD,IAC7BzF,GAAU,OAAS6S,EAAIpN,GAAG+B,MAAQ,IAGxC,GAAItI,EACD,IAAK,IAAIuG,EAAI,EAAGA,EAAIvG,EAAiBuD,OAAQgD,IAC1CzF,GAAU,QAAUd,EAAiBuG,GAAG+B,MAAQ,IAGtD,GAAIrI,EACD,IAAK,IAAIsG,EAAI,EAAGA,EAAItG,EAAgBsD,OAAQgD,IACzCzF,GAAU,QAAUb,EAAgBsG,GAAG+B,MAAQ,IAGrD,GAAIpI,EACD,IAAK,IAAIqG,EAAI,EAAGA,EAAIrG,EAAeqD,OAAQgD,IACxCzF,GAAU,OAASZ,EAAeqG,GAAG+B,MAAQ,IAInD,OADAxH,EAASA,EAAOiE,UAAU,EAAGjE,EAAOyC,OAAS,OAI1C2U,qDACH,SAAAA,EAAY/Y,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAA2Y,IAChB9Y,EAAAI,EAAAC,KAAAF,KAAMJ,IAyET8V,aAAe,SAAC+C,GACT5Y,EAAKD,MAAMyD,cAAcuV,0BAA4BH,IAGzD5Y,EAAKD,MAAMiZ,kBAAkBJ,GAC7B5Y,EAAKD,MAAMyB,QAAQ0E,KAAnB,IAAA8K,OAA4BsH,GAAiBM,KAC7C5Y,EAAKD,MAAMsf,mBAAmB1G,GAASC,MA9EvC5Y,EAAKM,MAAQ,CACVyY,wBAA2B,CACxBnY,iBAAkB,GAClBC,gBAAiB,GACjBC,eAAgB,GAChBG,qBAAsB,IAEzBiY,YAAa,EACbC,aAAa,GAEhBnZ,EAAK6V,aAAe7V,EAAK6V,aAAapV,KAAlBR,OAAAgS,EAAA,EAAAhS,CAAAD,IACpBA,EAAKkZ,WAAalZ,EAAKkZ,WAAWzY,KAAhBR,OAAAgS,EAAA,EAAAhS,CAAAD,IAbFA,uDAiBnB,WACOoY,EAAQjY,KAAKJ,MAAMyD,cAAcuV,0BAClC5Y,KAAK+Y,uCAUX,WAAa,IAAA9R,EAAAjH,KACNiZ,EAAQ,GACRC,EAAO,GACPC,EAAO,GACPC,EAAO,GACLC,EAASd,GAAYe,MAAMtZ,KAAKJ,MAAM2Q,SAASgJ,QACrD,GAAIF,EAAOG,KAAM,CACd,IAAIA,EAAOH,EAAOG,KACZ9K,MAAM+K,QAAQJ,EAAOG,QACxBA,EAAO,CAACH,EAAOG,OAElBA,EAAKnU,IAAI,SAAAqU,GAAK,OAAIR,EAAKnT,KAAK,CAAEuO,MAAOrN,EAAKrH,MAAMiI,SAAShC,MAAM6T,GAAO3R,YAAagB,MAAO2Q,MAE7F,GAAIL,EAAOM,KAAM,CACd,IAAIA,EAAON,EAAOM,KACZjL,MAAM+K,QAAQJ,EAAOM,QACxBA,EAAO,CAACN,EAAOM,OAElBA,EAAKtU,IAAI,SAAAqU,GAAK,OAAIP,EAAKpT,KAAK,CAAEuO,MAAOrN,EAAKrH,MAAMiI,SAAShC,MAAM6T,GAAO3R,YAAagB,MAAO2Q,MAE7F,GAAIL,EAAOO,IAAK,CACb,IAAIA,EAAMP,EAAOO,IACXlL,MAAM+K,QAAQJ,EAAOO,OACxBA,EAAM,CAACP,EAAOO,MAEjBA,EAAIvU,IAAI,SAAAwU,GAAK,OAAIT,EAAKrT,KAAK,CAAEuO,MAAOrN,EAAKrH,MAAMe,eAAekF,MAAMgU,GAAOtU,kBAAmBwD,MAAO8Q,MAExG,GAAIR,EAAOjF,IAAK,CACb,IAAI0F,EAAOT,EAAOjF,IACZ1F,MAAM+K,QAAQK,KACjBA,EAAO,CAACT,EAAOjF,MAElB0F,EAAKzU,IAAI,SAAAoH,GAAK,OAAIwM,EAAMlT,KAAK,CAAEuO,MAAOrN,EAAKrH,MAAM0L,KAAKzF,MAAM4G,GAAOZ,cAAe9C,MAAO0D,MAE5F,IAAImM,EAA0B,CAC3BnY,iBAAkByY,EAClBxY,gBAAiByY,EACjBxY,eAAgByY,EAChBtY,qBAAsBmY,GAEzBjZ,KAAKJ,MAAMiZ,kBAAkBD,GAC7B5Y,KAAKJ,MAAMsf,mBAAmB1G,GAASI,IACvC5Y,KAAKiB,SAAS,CAAC8X,YAAY,0BAY9B,WACG,OACGtU,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACGqC,EAAAvC,EAAAC,cAAC4X,GAAA,EAAD,CAAOzX,KAAK,4BACZmC,EAAAvC,EAAAC,cAAC6X,GAAA,EAAD,CAAWC,OAAK,GACbxV,EAAAvC,EAAAC,cAAC+X,EAAA,EAAD,CAAWD,OAAK,GACbxV,EAAAvC,EAAAC,cAAC0U,GAAA,EAAD,KACApS,EAAAvC,EAAAC,cAAC2U,GAAA,EAAD,CAAKqD,GAAI,CAAE7V,KAAM,EAAG8V,MAAO,EAAGC,OAAQ,IACnC5V,EAAAvC,EAAAC,cAAA,MAAIK,UAAU,aAAd,+BACAiC,EAAAvC,EAAAC,cAAA,KAAGK,UAAU,QAAb,wDACAiC,EAAAvC,EAAAC,cAAA,KAAGK,UAAU,cAAb,+EAAsGiC,EAAAvC,EAAAC,cAAA,WACtGsC,EAAAvC,EAAAC,cAAA,mFACAsC,EAAAvC,EAAAC,cAACgd,GAAD,MACA1a,EAAAvC,EAAAC,cAAA,MAAIK,UAAU,SACbxC,KAAKG,MAAM4Y,WACZtU,EAAAvC,EAAAC,cAACid,GAAD,CACGjK,cAAenV,KAAKJ,MAAMyD,cAAcuV,wBACxC3C,cAAejW,KAAK0V,aACpBrU,QAASrB,KAAKJ,MAAMyB,UAAY,iBAtGpB4B,aAwH9BC,GAAqB,CACxBgc,mBHnK+B,SAACxG,GAChC,OAAO,SAAAwC,GACJA,EA9BwC,CAC3CrI,KAAM6L,GAAcC,4BA8BjBxD,KAAMC,IAAI1C,GACN2C,KAAM,SAAAgE,GA5ByB,IAAChc,EA4BlB6X,GA5BkB7X,EA4BiBgc,EAAI7U,KA5BF,CAC1DqI,KAAM6L,GAAcE,4BACpB7D,QAAS,CAAE1X,sBA2BJiY,MAAM,SAAAgE,GAxByB,IAAChY,EAwBjB4T,GAxBiB5T,EAwBkBgY,EAxBP,CAClDzM,KAAM6L,GAAcG,4BACpB9D,QAAS,CAAEzT,gBGqLXkT,OHlLmB,SAAC5J,GAAD,MAAU,CAC7BiC,KAAM6L,GAAcK,QACpBhE,QAAS,CAAEnK,SGiLXiI,kBH9K8B,SAACjX,GAAD,MAAY,CAC1CiR,KAAM6L,GAAcI,oBACpB/D,QAAS,CAAEnZ,YG+Kd+W,GAAwBxV,YAAWwV,IAEpBvV,mBAhBS,SAAAjD,GAAK,MAAK,CAC/BkY,IAAKlY,EAAMkY,IACX/M,KAAMnL,EAAMmL,KACZzD,SAAU1H,EAAM0H,SAChBlH,eAAgBR,EAAMQ,eACtB0C,cAAelD,EAAMkD,gBAWgBH,GAAzBE,CAA6CuV,ICnLtD0D,qDACH,SAAAA,EAAYzc,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAAqc,IAChBxc,EAAAI,EAAAC,KAAAF,KAAMJ,IAmBT0c,iBAAmB,kBAAMzc,EAAKD,MAAM2c,eApBjB1c,EA8BnB0f,cAAgB,SAACnM,GAEd,OADiBA,EAAKxH,aAAavG,IAAI,SAAAoH,GAAK,OAAI5M,EAAKD,MAAM0L,KAAKmB,KAChDpH,IAAI,SAAA+O,GAAG,MAAI,CAAC,MAAMC,SAASD,EAAIzH,YAhC/B9M,EAmCnB2c,uBAAyB,WActB,OAbc3c,EAAKM,MAAMsc,UAELpX,IAAI,SAAAoT,GAAI,OACzBhU,EAAAvC,EAAAC,cAAA,MAAI8D,IAAKwS,EAAKjX,IACXiD,EAAAvC,EAAAC,cAAA,MAAIua,MAAM,OAAOjE,EAAKpF,UAAtB,IAAkCoF,EAAKnF,UACvC7O,EAAAvC,EAAAC,cAAA,UAAMtC,EAAKD,MAAMoN,aAAenN,EAAKD,MAAM0L,OAAS,GAAsE7G,EAAAvC,EAAAC,cAAC2I,EAAA,EAAD,CAAS/H,MAAM,YAAhF0B,EAAAvC,EAAAC,cAACwa,GAAD,CAAe9W,MAAO4S,EAAK7M,aAActF,cAAe,MACjH7B,EAAAvC,EAAAC,cAAA,UAAMtC,EAAKD,MAAMoN,aAAenN,EAAKD,MAAM0L,OAAS,GAAmE7G,EAAAvC,EAAAC,cAAC2I,EAAA,EAAD,CAAS/H,MAAM,YAA7E0B,EAAAvC,EAAAC,cAACqd,GAAD,CAAY3Z,MAAO4S,EAAK7M,aAActF,cAAe,MAC9G7B,EAAAvC,EAAAC,cAAA,UAAIsC,EAAAvC,EAAAC,cAACqR,EAAAtR,EAAD,CAAWuR,MAAOgF,EAAK/E,gBAC3BjP,EAAAvC,EAAAC,cAAA,UAAMtC,EAAKD,MAAMgJ,iBAAmB/I,EAAKD,MAAMiI,WAAa,GAA4DpD,EAAAvC,EAAAC,cAAC2I,EAAA,EAAD,CAAS/H,MAAM,YAAtE0B,EAAAvC,EAAAC,cAACya,EAAD,CAAS/W,MAAO4S,EAAK5Q,SAAUvB,cAAe,MAC/G7B,EAAAvC,EAAAC,cAAA,UAAMtC,EAAKD,MAAMuH,uBAAyBtH,EAAKD,MAAMe,iBAAmB,GAAyE8D,EAAAvC,EAAAC,cAAC2I,EAAA,EAAD,CAAS/H,MAAM,YAAnF0B,EAAAvC,EAAAC,cAAC0a,EAAD,CAAgBhX,MAAO4S,EAAK9X,eAAgB2F,cAAe,MACxI7B,EAAAvC,EAAAC,cAAA,UAAIsC,EAAAvC,EAAAC,cAAC2a,GAAD,CAAY1J,KAAMqF,SA5C5B5Y,EAAKM,MAAQ,CACVsc,UAAW,GACXhP,SAAU,IAEb5N,EAAKmO,aAAenO,EAAKmO,aAAa1N,KAAlBR,OAAAgS,EAAA,EAAAhS,CAAAD,IACpBA,EAAKkd,cAAgBld,EAAKkd,cAAczc,KAAnBR,OAAAgS,EAAA,EAAAhS,CAAAD,IAPLA,uDAUnB,WACGG,KAAKJ,MAAMic,gBACX7b,KAAKJ,MAAMwc,qBACXpc,KAAKJ,MAAMqb,kDAGd,SAAarN,GACV5N,KAAKiB,SAAS,CAAEwb,UAAW7O,iCAK9B,WACGoP,WAASC,SAAS,eAAgB,CAC/BC,SAAU,IACVC,QAAQ,IAEXnd,KAAKJ,MAAM2c,oCAyBd,WACG,IAAIjT,EAAS,CACV,CAAEuB,aAAc,WAAYrB,UAAWxJ,KAAKJ,MAAMgJ,gBAAiBtB,MAAOtH,KAAKJ,MAAMiJ,cACrF,CAAEgC,aAAc,gBAAiBrB,UAAWxJ,KAAKJ,MAAMoN,YAAa1F,MAAOtH,KAAKJ,MAAMqN,UACtF,CAAEpC,aAAc,iBAAkBrB,UAAWxJ,KAAKJ,MAAMuH,sBAAuBG,MAAOtH,KAAKJ,MAAMyH,qBACjG,CAAEwD,aAAc,gBAAiBrB,UAAWxJ,KAAKJ,MAAM6f,qBAAsBnY,MAAOtH,KAAKJ,MAAM8f,qBAE9FpC,EAAaxU,EAAOyU,sBAAsBjU,GAE9C,OACG7E,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACCpC,KAAKJ,MAAMyD,cAAcW,OAAS,EAChCS,EAAAvC,EAAAC,cAAA,OAAKsV,MAAO,CAAE+F,SAAU,WAAYC,OAAQ,SACzChZ,EAAAvC,EAAAC,cAACub,EAAA,EAAD,CAAO/Y,OAAQ3E,KAAKJ,MAAM+d,UAAWlG,MAAO,CAAE+F,SAAU,QAASI,IAAK,OAAQC,MAAO,SAClFpZ,EAAAvC,EAAAC,cAAC2b,EAAA,EAAD,CAAazZ,OAAQrE,KAAKsc,iBAAkBvM,KAAK,WAAjD,kBACAtL,EAAAvC,EAAAC,cAAC4b,EAAA,EAAD,KACGtZ,EAAAvC,EAAAC,cAAA,KAAGoE,KAAK,KAAKtB,QAASjF,KAAK+c,eAA3B,uCAKA,KACTtY,EAAAvC,EAAAC,cAAC6b,EAAD,CAASxZ,KAAM8E,EAAQU,OAAQsT,IAC5Btd,KAAKJ,MAAMgJ,iBAAmB5I,KAAKJ,MAAMiI,WAAa,IAAS7H,KAAKJ,MAAMoN,aAAehN,KAAKJ,MAAM0L,OAAS,IAAStL,KAAKJ,MAAMuH,uBAAyBnH,KAAKJ,MAAMe,iBAAmB,GAAkC,KAA5B8D,EAAAvC,EAAAC,cAACwd,GAAD,MACjMlb,EAAAvC,EAAAC,cAAC+X,EAAA,EAAD,CAAWD,OAAK,GACwB,IAApCja,KAAKJ,MAAMyD,cAAcW,OACvBS,EAAAvC,EAAAC,cAACyH,EAAA,EAAD,CAAO7G,MAAM,QACV0B,EAAAvC,EAAAC,cAAA,MAAIK,UAAU,iBAAd,cACAiC,EAAAvC,EAAAC,cAAA,2GAKHsC,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACGqC,EAAAvC,EAAAC,cAAA,OAAKK,UAAU,YACTxC,KAAKJ,MAAMoN,aAAehN,KAAKJ,MAAMqN,UAAejN,KAAKyf,sBAAwBzf,KAAK0f,mBAG/E,UAFPjb,EAAAvC,EAAAC,cAAA,KAAGK,UAAU,0BAAb,+BACSxC,KAAKJ,MAAMyD,cAAcW,OADlC,cAKNS,EAAAvC,EAAAC,cAAC+b,EAAA,QAAD,CAAS5b,KAAK,gBACdmC,EAAAvC,EAAAC,cAACgc,EAAA,EAAD,CAAOC,OAAK,EAACC,YAAU,EAAC7b,UAAU,gBAC/BiC,EAAAvC,EAAAC,cAAA,SAAOK,UAAU,eACdiC,EAAAvC,EAAAC,cAAA,UACGsC,EAAAvC,EAAAC,cAAA,kBACAsC,EAAAvC,EAAAC,cAAA,6BACAsC,EAAAvC,EAAAC,cAAA,wBACAsC,EAAAvC,EAAAC,cAAA,2BACAsC,EAAAvC,EAAAC,cAAA,wBACAsC,EAAAvC,EAAAC,cAAA,8BACAsC,EAAAvC,EAAAC,cAAA,gCAGNsC,EAAAvC,EAAAC,cAAA,aACInC,KAAKwc,4BAIZ/X,EAAAvC,EAAAC,cAAA,OAAKK,UAAU,sBACZiC,EAAAvC,EAAAC,cAACmc,GAAD,CAAmB7Q,SAAUzN,KAAKG,MAAMsN,SAAU5H,MAAO7F,KAAKJ,MAAMyD,cAAe2K,aAAchO,KAAKgO,0BAjHtG/K,aA8IlBC,GAAqB,CACxB2Y,iBACAO,sBACAnB,uBACAsB,YJ7IwB,iBAAO,CAC/B1J,KAAM6L,GAAcM,gBI+IR5b,eA1BS,SAAAjD,GAAK,MAAK,CAC/B0H,SAAU1H,EAAM0H,SAAShC,MACzB+C,gBAAiBzI,EAAM0H,SAAST,QAChCyB,aAAc1I,EAAM0H,SAASP,MAE7BgE,KAAMnL,EAAMmL,KAAKzF,MACjBmH,YAAa7M,EAAMmL,KAAKlE,QACxB6F,SAAU9M,EAAMmL,KAAKhE,MAErBjE,cAAelD,EAAMkD,cAAcwC,MACnC4Z,qBAAsBtf,EAAMkD,cAAc+D,QAC1CsY,mBAAoBvf,EAAMkD,cAAciE,MACxCqW,UAAWxd,EAAMkD,cAAckb,UAE/B5d,eAAgBR,EAAMQ,eAAekF,MACrCsB,sBAAuBhH,EAAMQ,eAAeyG,QAC5CC,oBAAqBlH,EAAMQ,eAAe2G,QAULpE,GAAzBE,CAA6CiZ,qDCrKtDuD,6DACH,SAAAA,EAAYhgB,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAA4f,IAChB/f,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CAEV0f,WAAW,EACXC,aAAa,GALAjgB,4CAQnB,WACG,IAAQwL,EAAarL,KAAKJ,MAAlByL,SACR,OAEG5G,EAAAvC,EAAAC,cAAC6X,GAAA,EAAD,CAAWxX,UAAU,qBAAqByX,OAAK,GAC5CxV,EAAAvC,EAAAC,cAAC+X,EAAA,EAAD,CAAWD,OAAK,GACbxV,EAAAvC,EAAAC,cAAC0U,GAAA,EAAD,KACGpS,EAAAvC,EAAAC,cAAC2U,GAAA,EAAD,CAAKqD,GAAI,CAAE7V,KAAM,EAAG8V,MAAO,EAAGC,OAAQ,IACtC5V,EAAAvC,EAAAC,cAAA,MAAIK,UAAU,aAAa6I,EAAS0U,cACpCtb,EAAAvC,EAAAC,cAAA,KAAGK,UAAU,QAAQ6I,EAAS2U,cAC9Bvb,EAAAvC,EAAAC,cAAA,MAAIK,UAAU,kBACdiC,EAAAvC,EAAAC,cAAA,SAAIkJ,EAAS4U,qBACbxb,EAAAvC,EAAAC,cAAA,KAAGK,UAAU,QACPiC,EAAAvC,EAAAC,cAAC6C,EAAA,EAAD,CAAQuB,KAAM,yCACdxD,MAAM,QAAS+J,OAAO,SAASC,IAAI,uBADnC,4CAtBO9J,cAsChBG,eAJS,SAAAjD,GAAK,MAAK,CAC/BkL,SAAUlL,EAAMkL,WAGJjI,CAAyBwc,ICUlCM,GAA6B,WAChC,OACGzb,EAAAvC,EAAAC,cAACge,GAAA,EAAD,CAAM3d,UAAU,qDACbiC,EAAAvC,EAAAC,cAAA,OAAKK,UAAU,iDACZiC,EAAAvC,EAAAC,cAACie,GAAA,EAAD,KACG3b,EAAAvC,EAAAC,cAAA,MAAIK,UAAU,aAAd,+BACAiC,EAAAvC,EAAAC,cAACke,GAAA,EAAD,wFAEH5b,EAAAvC,EAAAC,cAAA,OAAKK,UAAU,qBAAoBiC,EAAAvC,EAAAC,cAAC6C,EAAA,EAAD,CAAQjC,MAAM,QAAQH,IAAKC,KAAWC,OAAK,EAACJ,GAAG,iBAA/C,iCAMzC4d,qDACH,SAAAA,EAAY1gB,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAAsgB,IAChBzgB,EAAAI,EAAAC,KAAAF,KAAMJ,IAST2gB,WAAa,WACV,OACG9b,EAAAvC,EAAAC,cAACge,GAAA,EAAD,CAAM3d,UAAU,qDACbiC,EAAAvC,EAAAC,cAAA,OAAKK,UAAU,qCACZiC,EAAAvC,EAAAC,cAACie,GAAA,EAAD,KACG3b,EAAAvC,EAAAC,cAAA,MAAIK,UAAU,aAAd,uBACAiC,EAAAvC,EAAAC,cAACke,GAAA,EAAD,6DAEH5b,EAAAvC,EAAAC,cAAA,OAAKK,UAAU,qBAAoBiC,EAAAvC,EAAAC,cAAC6C,EAAA,EAAD,CAAQjC,MAAM,QAAQkC,QAAS,kBAAMpF,EAAKoB,SAAS,CAAEwU,0BAA2B5V,EAAKM,MAAMsV,6BAA3F,eACnChR,EAAAvC,EAAAC,cAACiW,GAAD,CACGhU,WAAYvE,EAAKM,MAAMsV,yBACvBrF,SAAS,mBACT/O,QAASxB,EAAKD,MAAMyB,QACpBgD,OAAQ,kBAAMxE,EAAKoB,SAChB,CACGwU,0BAA2B5V,EAAKM,MAAMsV,4BAE5CnR,KAAK,UAzBjBzE,EAAKM,MAAQ,CAEV0f,WAAW,EACXC,aAAa,EACbrK,0BAA0B,GANb5V,4CAmCnB,WACG,OACG4E,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACGqC,EAAAvC,EAAAC,cAAC4X,GAAA,EAAD,CAAOzX,KAAK,SACZmC,EAAAvC,EAAAC,cAACqe,GAAD,MACA/b,EAAAvC,EAAAC,cAAC+X,EAAA,EAAD,KACGzV,EAAAvC,EAAAC,cAACse,GAAA,EAAD,CAAUje,UAAU,uBACjBiC,EAAAvC,EAAAC,cAACue,GAAD,gBA3CWzd,aA6DdG,eANS,SAAAjD,GAAK,MAAK,CAC/BkL,SAAUlL,EAAMkL,WAKJjI,CAAyBkd,IC7FzBK,+JAvCX,WACI,OACIlc,EAAAvC,EAAAC,cAACuC,EAAA,EAAD,CAAOC,OAAQ3E,KAAKJ,MAAM+E,OAAQC,UAAQ,EAACP,OAAQrE,KAAKJ,MAAMghB,sCAC1Dnc,EAAAvC,EAAAC,cAAC0C,EAAA,EAAD,4BACAJ,EAAAvC,EAAAC,cAAC2C,EAAA,EAAD,KACIL,EAAAvC,EAAAC,cAAA,KAAGoE,KAAK,qBAAqBuG,OAAO,UAApC,UACArI,EAAAvC,EAAAC,cAAA,WAFJ,IAEWsC,EAAAvC,EAAAC,cAAA,WACPsC,EAAAvC,EAAAC,cAAA,KAAGoE,KAAK,oBAAoBuG,OAAO,UAAnC,UAEJrI,EAAAvC,EAAAC,cAAC0C,EAAA,EAAD,4BACAJ,EAAAvC,EAAAC,cAAC2C,EAAA,EAAD,KACIL,EAAAvC,EAAAC,cAAA,KAAGoE,KAAK,oBAAoBuG,OAAO,UAAnC,SACArI,EAAAvC,EAAAC,cAAA,WAFJ,IAEWsC,EAAAvC,EAAAC,cAAA,WACPsC,EAAAvC,EAAAC,cAAA,KAAGoE,KAAK,kBAAkBuG,OAAO,UAAjC,QACArI,EAAAvC,EAAAC,cAAA,WAJJ,IAIWsC,EAAAvC,EAAAC,cAAA,WACPsC,EAAAvC,EAAAC,cAAA,KAAGoE,KAAK,mBAAmBuG,OAAO,UAAlC,SAEJrI,EAAAvC,EAAAC,cAAC0C,EAAA,EAAD,kBACAJ,EAAAvC,EAAAC,cAAC2C,EAAA,EAAD,KACIL,EAAAvC,EAAAC,cAAA,KACIoE,KAAK,6HACLuG,OAAO,UAFX,sDAMArI,EAAAvC,EAAAC,cAAA,WAPJ,IAOWsC,EAAAvC,EAAAC,cAAA,WACPsC,EAAAvC,EAAAC,cAAA,KAAGoE,KAAK,wDAAwDuG,OAAO,UAAvE,yDAGArI,EAAAvC,EAAAC,cAAA,WAXJ,IAWWsC,EAAAvC,EAAAC,cAAA,WACPsC,EAAAvC,EAAAC,cAAA,KAAGoE,KAAK,sCAAsCuG,OAAO,UAArD,iEAhC2ByC,IAAMtM,iFCHxCwX,GAAU,CACpBoG,gBAAiB,kBACjBC,eAAgB,iBAEhBC,oCAAqC,uCAW3BC,GAAkC,iBAAO,CACnDnO,KAAM4H,GAAQsG,sCCDXE,+JAEH,WAAS,IAAAphB,EAAAG,KACNmB,EAAwBnB,KAAKJ,MAAtByY,EAAPlX,EAAOkX,IAAKhN,EAAZlK,EAAYkK,SACZ,OAEG5G,EAAAvC,EAAAC,cAAC+e,GAAA,EAAD,CAAQne,MAAM,OAAOoe,MAAI,EAACC,OAAO,MAC9B3c,EAAAvC,EAAAC,cAACkf,GAAA,EAAD,CAAaze,IAAKC,KAAWC,OAAK,EAACJ,GAAG,KAAK2I,EAASiW,aACpD7c,EAAAvC,EAAAC,cAACof,GAAA,EAAD,CAAetc,QAAS,kBAAMpF,EAAKD,MAAM4hB,kBACzC/c,EAAAvC,EAAAC,cAACsf,GAAA,EAAD,CAAU9c,OAAQ0T,EAAIqJ,QAASC,QAAM,GAClCld,EAAAvC,EAAAC,cAACyf,GAAA,EAAD,CAAKpf,UAAU,UAAUmf,QAAM,GAO5Bld,EAAAvC,EAAAC,cAAC0f,GAAA,EAAD,KACGpd,EAAAvC,EAAAC,cAAC2f,GAAA,EAAD,CACIrK,MAAO,CAACsK,OAAQ,WAChBC,gBAAgB,SAChB/c,QAASjF,KAAKJ,MAAMqiB,qCAHxB,6CAlBIhf,aAsCnBC,GAAqB,CACxBse,aD3CyB,iBAAO,CAChC3O,KAAM4H,GAAQqG,iBC2CdoB,cDhD0B,iBAAO,CACjCrP,KAAM4H,GAAQoG,kBCgDdG,oCAGY5d,eAXS,SAAAjD,GAAK,MAAK,CAC/BkY,IAAKlY,EAAMkY,IACXhN,SAAUlL,EAAMkL,WASqBnI,GAAzBE,CAA6C6d,ICrB7CkB,qDA7BZ,SAAAA,EAAYviB,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAAmiB,IAChBtiB,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CAEV0f,WAAW,EACXC,aAAa,GALAjgB,4CAQnB,WACG,IAAQ6B,EAAa1B,KAAKJ,MAAM2Q,SAAxB7O,SACR,OACG+C,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACAqC,EAAAvC,EAAAC,cAAC4X,GAAA,EAAD,CAAOzX,KAAK,QACZmC,EAAAvC,EAAAC,cAAC6X,GAAA,EAAD,CAAWC,OAAK,GACbxV,EAAAvC,EAAAC,cAAC+X,EAAA,EAAD,CAAWD,OAAK,GACbxV,EAAAvC,EAAAC,cAAA,MAAIK,UAAU,aAAd,OACAiC,EAAAvC,EAAAC,cAAA,KAAGK,UAAU,QAAb,kBACAiC,EAAAvC,EAAAC,cAAA,MAAIK,UAAU,SACdiC,EAAAvC,EAAAC,cAAA,2DACAsC,EAAAvC,EAAAC,cAAA,KAAGK,UAAU,QAAb,YACYiC,EAAAvC,EAAAC,cAAA,YAAOT,GADnB,sDApBQuB,sBCavBwM,KAAQC,IAAIC,UAuHGC,qDApHZ,SAAAA,EAAYhQ,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAA4P,IAChB/P,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACV0P,OAAS,GAHIhQ,4CAQnB,WAAS,IAAAoH,EAAAjH,KAEN,OACGyE,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACGqC,EAAAvC,EAAAC,cAACuC,EAAA,EAAD,CAAOJ,KAAK,KAAKK,OAAQ3E,KAAKG,MAAM0P,MAAOxL,OAAQ,kBAAM4C,EAAKhG,SAAS,CAAE4O,OAAQ5I,EAAK9G,MAAM0P,UACzFpL,EAAAvC,EAAAC,cAAC0C,EAAA,EAAD,CAAaR,OAAQ,kBAAM4C,EAAKhG,SAAS,CAAE4O,OAAQ5I,EAAK9G,MAAM0P,UAAUpL,EAAAvC,EAAAC,cAAC2N,GAAA,EAAD,CAAiBC,KAAK,cAA9F,eACAtL,EAAAvC,EAAAC,cAAC2C,EAAA,EAAD,KACGL,EAAAvC,EAAAC,cAACyH,EAAA,EAAD,CAAO7G,MAAM,QAAb,oLAG0DmB,EACvDO,EAAAvC,EAAAC,cAAC6N,GAAA,EAAD,CAAMtN,GAAG,kBAAT,QAJH,KAOA+B,EAAAvC,EAAAC,cAACgE,EAAA,EAAD,KACG1B,EAAAvC,EAAAC,cAAC6D,EAAA,EAAD,KACGvB,EAAAvC,EAAAC,cAACyE,EAAA,EAAD,sBACAnC,EAAAvC,EAAAC,cAAC0E,EAAA,EAAD,KACGpC,EAAAvC,EAAAC,cAAA,qFAEAsC,EAAAvC,EAAAC,cAAA,qEAA6D+B,EAC7DO,EAAAvC,EAAAC,cAAA,+FADA,KAIAsC,EAAAvC,EAAAC,cAAA,wNAMAsC,EAAAvC,EAAAC,cAAA,seAUyC+B,EACtCO,EAAAvC,EAAAC,cAAA,yBAXH,yMAmBNsC,EAAAvC,EAAAC,cAAC6D,EAAA,EAAD,KACGvB,EAAAvC,EAAAC,cAACyE,EAAA,EAAD,qBACAnC,EAAAvC,EAAAC,cAAC0E,EAAA,EAAD,sEAEWpC,EAAAvC,EAAAC,cAAA,oCAFX,6MAUHsC,EAAAvC,EAAAC,cAAC6D,EAAA,EAAD,KACGvB,EAAAvC,EAAAC,cAACyE,EAAA,EAAD,iBACAnC,EAAAvC,EAAAC,cAAC0E,EAAA,EAAD,qLAI4CpC,EAAAvC,EAAAC,cAAA,kBAJ5C,4BAK4BsC,EAAAvC,EAAAC,cAAA,kBAL5B,4BAMWsC,EAAAvC,EAAAC,cAAA,uBANX,wDAWHsC,EAAAvC,EAAAC,cAAC6D,EAAA,EAAD,KACGvB,EAAAvC,EAAAC,cAACyE,EAAA,EAAD,uBACAnC,EAAAvC,EAAAC,cAAC0E,EAAA,EAAD,sIAOHpC,EAAAvC,EAAAC,cAAC6D,EAAA,EAAD,KACGvB,EAAAvC,EAAAC,cAACyE,EAAA,EAAD,sBACAnC,EAAAvC,EAAAC,cAAC0E,EAAA,EAAD,kFAE2BpC,EAAAvC,EAAAC,cAAA,4BACvB+B,EAHJ,4BAGmCA,EAChCO,EAAAvC,EAAAC,cAAA,0BAAwB+B,EAJ3B,iFAM6BO,EAAAvC,EAAAC,cAAA,gBAUzCsC,EAAAvC,EAAAC,cAAC6C,EAAA,EAAD,CAAQjC,MAAM,OAAOkC,QAAS,kBAAMgC,EAAKhG,SAAS,CAAE4O,OAAQ5I,EAAK9G,MAAM0P,UAAvE,sBA9GmB5M,aCQzBmf,qDACH,SAAAA,EAAYxiB,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAAoiB,IAChBviB,EAAAI,EAAAC,KAAAF,KAAMJ,IAsBTyiB,mBAAqB,WAClB,IAAMnO,EAAW,CAAC,MAElB,OADerU,EAAKD,MAAM0L,KAAKzF,MAAMsO,OAAO,SAAUC,GAAO,OAAOF,EAASG,SAASD,EAAIzH,WAC1EtH,IAAI,SAAA+O,GAAG,MAAK,CAAEE,MAAOF,EAAIvI,cAAe9C,MAAOqL,EAAI5S,OA1BnD3B,EA6BnB0U,uBAAyB,WACtB,OAAO1U,EAAKD,MAAMe,eAAekF,MAAMR,IAAI,SAAAC,GAAa,MAAK,CAAEgP,MAAOhP,EAAcC,kBAAmBwD,MAAOzD,EAAc9D,OA9B5G3B,EAiCnB2U,gBAAkB,SAAC/L,GAChB,IAAMgM,EAAmB5U,EAAKD,MAAMiI,SAAShC,MAAMsO,OAAO,SAAUrM,GAAW,OAAOA,EAAQW,cAAgBA,IACxGiM,EAAaD,EAAiBN,OAAO,SAAUrM,GAAW,MAA6B,OAAtBA,EAAQY,YACzEiM,EAAgBF,EAAiBN,OAAO,SAAUrM,GAAW,MAA6B,OAAtBA,EAAQY,YAC5EkM,EAAcH,EAAiBN,OAAO,SAAUrM,GAAW,MAA6B,OAAtBA,EAAQY,YAC5EmM,EAAuBH,EAAWrP,IAAI,SAAAyC,GAAO,MAAK,CACnDwM,MAAOxM,EAAQC,YACfgB,MAAOjB,EAAQtG,MAEdsT,EAA0BH,EAActP,IAAI,SAAAyC,GAAO,MAAK,CACzDwM,MAAOxM,EAAQC,YACfgB,MAAOjB,EAAQtG,MAqBlB,MAdG,CACG,CACG8S,MAAO,sBACPS,QARmBH,EAAYvP,IAAI,SAAAyC,GAAO,MAAK,CACrDwM,MAAOxM,EAAQC,YACfgB,MAAOjB,EAAQtG,OAQZ,CACG8S,MAAO,wBACPS,QAASD,GAEZ,CACGR,MAAO,qBACPS,QAASF,KA9DFhV,EAoEnBkS,aAAe,SAACiD,GACb,IAAAC,EAAsBD,EAAElI,OAAlBxK,EAAN2S,EAAM3S,KAAMyG,EAAZkM,EAAYlM,MACU,aAAlBiM,EAAElI,OAAO+F,OACV9J,EAAQiM,EAAElI,OAAOoI,SAEpB,IAAMpR,EAAShE,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GAAQD,EAAKM,MAAM2D,WAAnB,GAAAhE,OAAAmJ,EAAA,EAAAnJ,CAAA,GAA+BwC,EAAiB,OAAVyG,EAAiB,GAAKA,IAC3ElJ,EAAKoB,SAAS,CAAE6C,eAxEhBjE,EAAKM,MAAQ,CACV2D,UAAWjE,EAAKD,MAAMuV,cACtBC,SAAU,CACPC,WAAY,IAEfC,eAAgB,KAChBzF,OAAO,EACP0F,cAAc,EAEdC,uBAAuB,EACvBC,0BAA0B,GAE7B5V,EAAKkS,aAAelS,EAAKkS,aAAazR,KAAlBR,OAAAgS,EAAA,EAAAhS,CAAAD,IACpBA,EAAK6V,aAAe7V,EAAK6V,aAAapV,KAAlBR,OAAAgS,EAAA,EAAAhS,CAAAD,IACpBA,EAAK8V,WAAa9V,EAAK8V,WAAWrV,KAAhBR,OAAAgS,EAAA,EAAAhS,CAAAD,IAClBA,EAAKyiB,YAAcziB,EAAKwiB,qBACxBxiB,EAAKgW,UAAYhW,EAAK2U,gBAAgB,MACtC3U,EAAKiW,UAAYjW,EAAK2U,gBAAgB,MACtC3U,EAAKc,eAAiBd,EAAK0U,yBApBX1U,kDA6EnB,SAAakW,GACVA,EAAeC,iBACfhW,KAAKJ,MAAMqW,cAAcjW,KAAKG,MAAM2D,qCAIvC,WAAa,IAAAmD,EAAAjH,KAEJkW,EADQlW,KAAKJ,MAAMyD,cAAcwC,MACbR,IAAI,SAAA+N,GAAI,MAAK,CACpC+C,aAAc/C,EAAKC,UACnB+C,YAAahD,EAAKE,SAClB+C,gBAAiBjD,EAAKM,aACtB4C,QAAWlD,EAAKxG,QAChBd,cAAiBL,GAAwB2H,EAAKxH,aAAc3E,EAAKrH,MAAM0L,KAAKzF,OAC5E0Q,YAAavD,GAAaI,EAAKG,UAAUjR,KACzCkU,YAAapD,EAAKO,SAClB8C,YAAerD,EAAKQ,YACpB5L,SAAYL,EAAmByL,EAAKvL,SAAUZ,EAAKrH,MAAMiI,SAAShC,OAClEJ,eAAkBP,EAAyBkO,EAAKzS,eAAgBsG,EAAKrH,MAAMe,eAAekF,UAE7F6Q,GAAWR,EAAa,qCAI3B,WAAS,IAAAjL,EAAAjL,KAEN,OACGyE,EAAAvC,EAAAC,cAACwU,GAAA,EAAD,CAAMC,SAAU5W,KAAK0V,cAClBjR,EAAAvC,EAAAC,cAAC0U,GAAA,EAAD,KACGpS,EAAAvC,EAAAC,cAAC2U,GAAA,EAAD,KACGrS,EAAAvC,EAAAC,cAAC4U,GAAA,EAAD,KACGtS,EAAAvC,EAAAC,cAAC6U,GAAA,EAAD,6BACAvS,EAAAvC,EAAAC,cAAC8U,GAAA,EAAD,CACGC,IAAI,sBACJ5U,KAAK,sBAELyG,MAAO/I,KAAKG,MAAM2D,UAAUlD,qBAC5BmU,QAAS/U,KAAKsiB,YACdrQ,SAAU,SAACkF,GAAD,OAASlM,EAAK8G,aAAa,CAAEjF,OAAQ,CAAExK,KAAM,uBAAwByG,MAAOoO,MACtFC,SAAS,EACTC,UAAU,EACVC,eAAe,EACfC,mBAAmB,OAM/B9S,EAAAvC,EAAAC,cAAC0U,GAAA,EAAD,KACGpS,EAAAvC,EAAAC,cAAC2U,GAAA,EAAD,KACGrS,EAAAvC,EAAAC,cAAC4U,GAAA,EAAD,KACGtS,EAAAvC,EAAAC,cAAC6U,GAAA,EAAD,oCACAvS,EAAAvC,EAAAC,cAAC8U,GAAA,EAAD,CACGC,IAAI,mBACJnO,MAAO/I,KAAKG,MAAM2D,UAAUrD,iBAC5BsU,QAAS/U,KAAK6V,UACd5D,SAAU,SAACkF,GAAD,OAASlM,EAAK8G,aAAa,CAAEjF,OAAQ,CAAExK,KAAM,mBAAoByG,MAAOoO,MAClFC,SAAS,EACTC,UAAU,EACVC,eAAe,EACfC,mBAAmB,OAM/B9S,EAAAvC,EAAAC,cAAC0U,GAAA,EAAD,KACGpS,EAAAvC,EAAAC,cAAC2U,GAAA,EAAD,KACGrS,EAAAvC,EAAAC,cAAC4U,GAAA,EAAD,KACGtS,EAAAvC,EAAAC,cAAC6U,GAAA,EAAD,mCACAvS,EAAAvC,EAAAC,cAAC8U,GAAA,EAAD,CACGC,IAAI,kBACJnO,MAAO/I,KAAKG,MAAM2D,UAAUpD,gBAC5BqU,QAAS/U,KAAK8V,UACd7D,SAAU,SAACkF,GAAD,OAASlM,EAAK8G,aAAa,CAAEjF,OAAQ,CAAExK,KAAM,kBAAmByG,MAAOoO,MACjFC,SAAS,EACTC,UAAU,EACVC,eAAe,EACfC,mBAAmB,OAM/B9S,EAAAvC,EAAAC,cAAC0U,GAAA,EAAD,KACGpS,EAAAvC,EAAAC,cAAC2U,GAAA,EAAD,KACGrS,EAAAvC,EAAAC,cAAC4U,GAAA,EAAD,KACGtS,EAAAvC,EAAAC,cAAC6U,GAAA,EAAD,iCACAvS,EAAAvC,EAAAC,cAAC8U,GAAA,EAAD,CACGC,IAAI,iBACJnO,MAAO/I,KAAKG,MAAM2D,UAAUnD,eAC5BoU,QAAS/U,KAAKW,eACdsR,SAAU,SAACkF,GAAD,OAASlM,EAAK8G,aAAa,CAAEjF,OAAQ,CAAExK,KAAM,iBAAkByG,MAAOoO,MAChFC,SAAS,EACTC,UAAU,EACVC,eAAe,EACfC,mBAAmB,OAM/B9S,EAAAvC,EAAAC,cAAC0U,GAAA,EAAD,CAAKW,WAAS,GACX/S,EAAAvC,EAAAC,cAAA,WACGsC,EAAAvC,EAAAC,cAAA,OAAKX,GAAG,iBAAiBiW,MAAO,CAAEC,QAAS,iBACxCjT,EAAAvC,EAAAC,cAAC6C,EAAA,EAAD,CAAQjC,MAAM,WAAU0B,EAAAvC,EAAAC,cAAA,4BAG7B+B,EACDO,EAAAvC,EAAAC,cAAA,WAEGsC,EAAAvC,EAAAC,cAACwV,GAAA,EAAD,CAAUhT,OAAQ3E,KAAKG,MAAMoV,aAAclR,OAAQ,kBAAM4G,EAAKhK,SAAS,SAAAsM,GAAS,MAAK,CAAEgI,cAAehI,EAAUgI,kBAC7G9Q,EAAAvC,EAAAC,cAACyV,GAAA,EAAD,CAAgBC,OAAK,GAArB,gBAGApT,EAAAvC,EAAAC,cAAC2V,GAAA,EAAD,KACGrT,EAAAvC,EAAAC,cAAC4V,GAAA,EAAD,CAAchJ,SAAoD,IAA1C/O,KAAKJ,MAAMyD,cAAcwC,MAAM7B,OAAciB,QAASjF,KAAK2V,YAAnF,iBACAlR,EAAAvC,EAAAC,cAAC4V,GAAA,EAAD,CAAcC,SAAO,IACrBvT,EAAAvC,EAAAC,cAAC4V,GAAA,EAAD,CAAchJ,SAAUkJ,EAAQjY,KAAKG,MAAM2D,WACxCmB,QAAS,kBACNgG,EAAKhK,SACF,CACGuU,uBACIvK,EAAK9K,MAAMqV,0BAE1B/Q,EAAAvC,EAAAC,cAAA,YAAO8V,EAAQjY,KAAKG,MAAM2D,WACxB,wCACA,iBAGTW,EAAAvC,EAAAC,cAAC+V,GAAD,CACG9T,WAAYpE,KAAKG,MAAMqV,sBACvB5T,MAAOuW,GAAiBnY,KAAKG,MAAM2D,WACnCsM,SAAS,mBACT/L,OAAQ,kBAAM4G,EAAKhK,SAChB,CACGuU,uBAAwBvK,EAAK9K,MAAMqV,yBAEzClR,KAAK,OAERG,EAAAvC,EAAAC,cAACiW,GAAD,CACGhU,WAAYpE,KAAKG,MAAMsV,yBACvBrF,SAAS,mBACT/O,QAASrB,KAAKJ,MAAMyB,QACpBgD,OAAQ,kBAAM4G,EAAKhK,SAChB,CACGwU,0BAA2BxK,EAAK9K,MAAMsV,4BAE5CnR,KAAK,iBAlOYrB,aAqPtCmf,GAA0Bjf,YAAWif,IAEtBhf,mBAVS,SAAAjD,GAAK,MAAK,CAC/BkY,IAAKlY,EAAMkY,IACX/M,KAAMnL,EAAMmL,KACZzD,SAAU1H,EAAM0H,SAChBlH,eAAgBR,EAAMQ,eACtB0C,cAAelD,EAAMoiB,oBAKTnf,CAAyBgf,ICnQlC7J,GAAc7Y,EAAQ,IAGrB,SAAS8Y,GAASC,GACtB,IAAIrE,EAAMqE,EAAK7X,qBACXH,EAAmBgY,EAAKhY,iBACxBC,EAAkB+X,EAAK/X,gBACvBC,EAAiB8X,EAAK9X,eACtB+X,EAAM,6BACV,GAAItE,EACD,IAAK,IAAIpN,EAAI,EAAGA,EAAIoN,EAAIpQ,OAAQgD,IAC7B0R,GAAO,iBAAmBtE,EAAIpN,GAAG+B,MAGvC,GAAItI,EACD,IAAK,IAAIuG,EAAI,EAAGA,EAAIvG,EAAiBuD,OAAQgD,IAC1C0R,GAAO,aAAejY,EAAiBuG,GAAG+B,MAGhD,GAAIrI,EACD,IAAK,IAAIsG,EAAI,EAAGA,EAAItG,EAAgBsD,OAAQgD,IACzC0R,GAAO,aAAehY,EAAgBsG,GAAG+B,MAG/C,GAAIpI,EACD,IAAK,IAAIqG,EAAI,EAAGA,EAAIrG,EAAeqD,OAAQgD,IACxC0R,GAAO,mBAAqB/X,EAAeqG,GAAG+B,MAGpD,OAAO2P,EAIH,SAASP,GAAiBM,GAC9B,IAAIrE,EAAMqE,EAAK7X,qBACXH,EAAmBgY,EAAKhY,iBACxBC,EAAkB+X,EAAK/X,gBACvBC,EAAiB8X,EAAK9X,eACtBY,EAAS,GACb,GAAI6S,EACD,IAAK,IAAIpN,EAAI,EAAGA,EAAIoN,EAAIpQ,OAAQgD,IAC7BzF,GAAU,OAAS6S,EAAIpN,GAAG+B,MAAQ,IAGxC,GAAItI,EACD,IAAK,IAAIuG,EAAI,EAAGA,EAAIvG,EAAiBuD,OAAQgD,IAC1CzF,GAAU,QAAUd,EAAiBuG,GAAG+B,MAAQ,IAGtD,GAAIrI,EACD,IAAK,IAAIsG,EAAI,EAAGA,EAAItG,EAAgBsD,OAAQgD,IACzCzF,GAAU,QAAUb,EAAgBsG,GAAG+B,MAAQ,IAGrD,GAAIpI,EACD,IAAK,IAAIqG,EAAI,EAAGA,EAAIrG,EAAeqD,OAAQgD,IACxCzF,GAAU,OAASZ,EAAeqG,GAAG+B,MAAQ,IAInD,OADAxH,EAASA,EAAOiE,UAAU,EAAGjE,EAAOyC,OAAS,OAI1Cwe,qDACH,SAAAA,EAAY5iB,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAAwiB,IAChB3iB,EAAAI,EAAAC,KAAAF,KAAMJ,IAyET8V,aAAe,SAAC+C,GACT5Y,EAAKD,MAAMyD,cAAcuV,0BAA4BH,IAGzD5Y,EAAKD,MAAMY,sBAAsBiY,GACjC5Y,EAAKD,MAAMyB,QAAQ0E,KAAnB,IAAA8K,OAA4BsH,GAAiBM,KAC7C5Y,EAAKD,MAAM6iB,uBAAuBjK,GAASC,MA9E3C5Y,EAAKM,MAAQ,CACVyY,wBAA2B,CACxBnY,iBAAkB,GAClBC,gBAAiB,GACjBC,eAAgB,GAChBC,qBAAsB,IAEzBmY,YAAa,EACbC,aAAa,GAEhBnZ,EAAK6V,aAAe7V,EAAK6V,aAAapV,KAAlBR,OAAAgS,EAAA,EAAAhS,CAAAD,IACpBA,EAAKkZ,WAAalZ,EAAKkZ,WAAWzY,KAAhBR,OAAAgS,EAAA,EAAAhS,CAAAD,IAbFA,uDAiBnB,WACOoY,EAAQjY,KAAKJ,MAAMyD,cAAcuV,0BAClC5Y,KAAK+Y,uCAUX,WAAa,IAAA9R,EAAAjH,KACNiZ,EAAQ,GACRC,EAAO,GACPC,EAAO,GACPC,EAAO,GACLC,EAASd,GAAYe,MAAMtZ,KAAKJ,MAAM2Q,SAASgJ,QACrD,GAAIF,EAAOG,KAAM,CACd,IAAIA,EAAOH,EAAOG,KACZ9K,MAAM+K,QAAQJ,EAAOG,QACxBA,EAAO,CAACH,EAAOG,OAElBA,EAAKnU,IAAI,SAAAqU,GAAK,OAAIR,EAAKnT,KAAK,CAAEuO,MAAOrN,EAAKrH,MAAMiI,SAAShC,MAAM6T,GAAO3R,YAAagB,MAAO2Q,MAE7F,GAAIL,EAAOM,KAAM,CACd,IAAIA,EAAON,EAAOM,KACZjL,MAAM+K,QAAQJ,EAAOM,QACxBA,EAAO,CAACN,EAAOM,OAElBA,EAAKtU,IAAI,SAAAqU,GAAK,OAAIP,EAAKpT,KAAK,CAAEuO,MAAOrN,EAAKrH,MAAMiI,SAAShC,MAAM6T,GAAO3R,YAAagB,MAAO2Q,MAE7F,GAAIL,EAAOO,IAAK,CACb,IAAIA,EAAMP,EAAOO,IACXlL,MAAM+K,QAAQJ,EAAOO,OACxBA,EAAM,CAACP,EAAOO,MAEjBA,EAAIvU,IAAI,SAAAwU,GAAK,OAAIT,EAAKrT,KAAK,CAAEuO,MAAOrN,EAAKrH,MAAMe,eAAekF,MAAMgU,GAAOtU,kBAAmBwD,MAAO8Q,MAExG,GAAIR,EAAOjF,IAAK,CACb,IAAI0F,EAAOT,EAAOjF,IACZ1F,MAAM+K,QAAQK,KACjBA,EAAO,CAACT,EAAOjF,MAElB0F,EAAKzU,IAAI,SAAAoH,GAAK,OAAIwM,EAAMlT,KAAK,CAAEuO,MAAOrN,EAAKrH,MAAM0L,KAAKzF,MAAM4G,GAAOZ,cAAe9C,MAAO0D,MAE5F,IAAImM,EAA0B,CAC3BnY,iBAAkByY,EAClBxY,gBAAiByY,EACjBxY,eAAgByY,EAChBxY,qBAAsBqY,GAEzBjZ,KAAKJ,MAAMY,sBAAsBoY,GACjC5Y,KAAKJ,MAAM6iB,uBAAuBjK,GAASI,IAC3C5Y,KAAKiB,SAAS,CAAC8X,YAAY,0BAY9B,WACG,OACGtU,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACGqC,EAAAvC,EAAAC,cAAC4X,GAAA,EAAD,CAAOzX,KAAK,uCACZmC,EAAAvC,EAAAC,cAAC6X,GAAA,EAAD,CAAWC,OAAK,GACbxV,EAAAvC,EAAAC,cAAC+X,EAAA,EAAD,CAAWD,OAAK,GACbxV,EAAAvC,EAAAC,cAAC0U,GAAA,EAAD,KACApS,EAAAvC,EAAAC,cAAC2U,GAAA,EAAD,CAAKqD,GAAI,CAAE7V,KAAM,EAAG8V,MAAO,EAAGC,OAAQ,IACnC5V,EAAAvC,EAAAC,cAAA,MAAIK,UAAU,aAAd,0CACAiC,EAAAvC,EAAAC,cAAA,KAAGK,UAAU,QAAb,wDACAiC,EAAAvC,EAAAC,cAAA,KAAGK,UAAU,cAAb,+EAAsGiC,EAAAvC,EAAAC,cAAA,WACtGsC,EAAAvC,EAAAC,cAAA,mFACAsC,EAAAvC,EAAAC,cAACugB,GAAD,MACAje,EAAAvC,EAAAC,cAAA,MAAIK,UAAU,SACbxC,KAAKG,MAAM4Y,WACZtU,EAAAvC,EAAAC,cAACwgB,GAAD,CACGxN,cAAenV,KAAKJ,MAAMyD,cAAcuV,wBACxC3C,cAAejW,KAAK0V,aACpBrU,QAASrB,KAAKJ,MAAMyB,UAAY,iBAtGhB4B,aAwHlCC,GAAqB,CACxB8d,mCACAyB,4BACAjI,YACAha,4BAOHgiB,GAA4Brf,YAAWqf,IAExBpf,mBArBS,SAAAjD,GAAK,MAAK,CAC/BkY,IAAKlY,EAAMkY,IACX/M,KAAMnL,EAAMmL,KACZzD,SAAU1H,EAAM0H,SAChBlH,eAAgBR,EAAMQ,eACtB0C,cAAelD,EAAMoiB,oBAgBgBrf,GAAzBE,CAA6Cof,IC1LtDnG,qDACH,SAAAA,EAAYzc,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAAqc,IAChBxc,EAAAI,EAAAC,KAAAF,KAAMJ,IAmBT0c,iBAAmB,kBAAMzc,EAAKD,MAAM2c,eApBjB1c,EA8BnB+iB,kBAAoB,SAACxP,GAElB,OADiBA,EAAKxH,aAAavG,IAAI,SAAAoH,GAAK,OAAI5M,EAAKD,MAAM0L,KAAKmB,KAChDpH,IAAI,SAAA+O,GAAG,MAAI,CAAC,MAAMC,SAASD,EAAIzH,YAhC/B9M,EAmCnB2c,uBAAyB,WAatB,OAZc3c,EAAKM,MAAMsc,UAELpX,IAAI,SAAAoT,GAAI,OACzBhU,EAAAvC,EAAAC,cAAA,MAAI8D,IAAKwS,EAAKjX,IACXiD,EAAAvC,EAAAC,cAAA,MAAIua,MAAM,OAAOjE,EAAKpF,UAAtB,IAAkCoF,EAAKnF,UACvC7O,EAAAvC,EAAAC,cAAA,UAAMtC,EAAKD,MAAMoN,aAAenN,EAAKD,MAAM0L,OAAS,GAAsE7G,EAAAvC,EAAAC,cAAC2I,EAAA,EAAD,CAAS/H,MAAM,YAAhF0B,EAAAvC,EAAAC,cAACwa,GAAD,CAAe9W,MAAO4S,EAAK7M,aAActF,cAAe,MACjH7B,EAAAvC,EAAAC,cAAA,UAAIsC,EAAAvC,EAAAC,cAACqR,EAAAtR,EAAD,CAAWuR,MAAOgF,EAAK/E,gBAC3BjP,EAAAvC,EAAAC,cAAA,UAAMtC,EAAKD,MAAMgJ,iBAAmB/I,EAAKD,MAAMiI,WAAa,GAA4DpD,EAAAvC,EAAAC,cAAC2I,EAAA,EAAD,CAAS/H,MAAM,YAAtE0B,EAAAvC,EAAAC,cAACya,EAAD,CAAS/W,MAAO4S,EAAK5Q,SAAUvB,cAAe,MAC/G7B,EAAAvC,EAAAC,cAAA,UAAMtC,EAAKD,MAAMuH,uBAAyBtH,EAAKD,MAAMe,iBAAmB,GAAyE8D,EAAAvC,EAAAC,cAAC2I,EAAA,EAAD,CAAS/H,MAAM,YAAnF0B,EAAAvC,EAAAC,cAAC0a,EAAD,CAAgBhX,MAAO4S,EAAK9X,eAAgB2F,cAAe,MACxI7B,EAAAvC,EAAAC,cAAA,UAAIsC,EAAAvC,EAAAC,cAAC2a,GAAD,CAAY1J,KAAMqF,SA3C5B5Y,EAAKM,MAAQ,CACVsc,UAAW,GACXhP,SAAU,IAEb5N,EAAKmO,aAAenO,EAAKmO,aAAa1N,KAAlBR,OAAAgS,EAAA,EAAAhS,CAAAD,IACpBA,EAAKkd,cAAgBld,EAAKkd,cAAczc,KAAnBR,OAAAgS,EAAA,EAAAhS,CAAAD,IAPLA,uDAUnB,WACGG,KAAKJ,MAAMic,gBACX7b,KAAKJ,MAAMwc,qBACXpc,KAAKJ,MAAMqb,kDAGd,SAAarN,GACV5N,KAAKiB,SAAS,CAAEwb,UAAW7O,iCAK9B,WACGoP,WAASC,SAAS,eAAgB,CAC/BC,SAAU,IACVC,QAAQ,IAEXnd,KAAKJ,MAAM2c,oCAwBd,WACG,IAAIjT,EAAS,CACV,CAAEuB,aAAc,WAAYrB,UAAWxJ,KAAKJ,MAAMgJ,gBAAiBtB,MAAOtH,KAAKJ,MAAMiJ,cACrF,CAAEgC,aAAc,gBAAiBrB,UAAWxJ,KAAKJ,MAAMoN,YAAa1F,MAAOtH,KAAKJ,MAAMqN,UACtF,CAAEpC,aAAc,iBAAkBrB,UAAWxJ,KAAKJ,MAAMuH,sBAAuBG,MAAOtH,KAAKJ,MAAMyH,qBACjG,CAAEwD,aAAc,2BAA4BrB,UAAWxJ,KAAKJ,MAAMijB,yBAA0Bvb,MAAOtH,KAAKJ,MAAMkjB,yBAE7GxF,EAAaxU,EAAOyU,sBAAsBjU,GAE9C,OACG7E,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACCpC,KAAKJ,MAAM2iB,kBAAkBve,OAAS,EACpCS,EAAAvC,EAAAC,cAAA,OAAKsV,MAAO,CAAE+F,SAAU,WAAYC,OAAQ,SACzChZ,EAAAvC,EAAAC,cAACub,EAAA,EAAD,CAAO/Y,OAAQ3E,KAAKJ,MAAM+d,UAAWlG,MAAO,CAAE+F,SAAU,QAASI,IAAK,OAAQC,MAAO,SAClFpZ,EAAAvC,EAAAC,cAAC2b,EAAA,EAAD,CAAazZ,OAAQrE,KAAKsc,iBAAkBvM,KAAK,WAAjD,kBACAtL,EAAAvC,EAAAC,cAAC4b,EAAA,EAAD,KACGtZ,EAAAvC,EAAAC,cAAA,KAAGoE,KAAK,KAAKtB,QAASjF,KAAK+c,eAA3B,uCAKA,KACTtY,EAAAvC,EAAAC,cAAC6b,EAAD,CAASxZ,KAAM8E,EAAQU,OAAQsT,IAC5Btd,KAAKJ,MAAMgJ,iBAAmB5I,KAAKJ,MAAMiI,WAAa,IAAS7H,KAAKJ,MAAMoN,aAAehN,KAAKJ,MAAM0L,OAAS,IAAStL,KAAKJ,MAAMuH,uBAAyBnH,KAAKJ,MAAMe,iBAAmB,GAAkC,KAA5B8D,EAAAvC,EAAAC,cAAC4gB,GAAD,MACjMte,EAAAvC,EAAAC,cAAC+X,EAAA,EAAD,CAAWD,OAAK,GAC4B,IAAxCja,KAAKJ,MAAM2iB,kBAAkBve,OAC3BS,EAAAvC,EAAAC,cAACyH,EAAA,EAAD,CAAO7G,MAAM,QACV0B,EAAAvC,EAAAC,cAAA,MAAIK,UAAU,iBAAd,cACAiC,EAAAvC,EAAAC,cAAA,2GAKHsC,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACGqC,EAAAvC,EAAAC,cAAA,OAAKK,UAAU,YACTxC,KAAKJ,MAAMoN,aAAehN,KAAKJ,MAAMqN,UAAejN,KAAK6iB,0BAA4B7iB,KAAK8iB,uBAGtF,UAFJre,EAAAvC,EAAAC,cAAA,KAAGK,UAAU,0BAAb,+BACSxC,KAAKJ,MAAM2iB,kBAAkBve,OADtC,cAMNS,EAAAvC,EAAAC,cAAC+b,EAAA,QAAD,CAAS5b,KAAK,gBACdmC,EAAAvC,EAAAC,cAACgc,EAAA,EAAD,CAAOC,OAAK,EAACC,YAAU,EAAC7b,UAAU,gBAC/BiC,EAAAvC,EAAAC,cAAA,SAAOK,UAAU,eACdiC,EAAAvC,EAAAC,cAAA,UACGsC,EAAAvC,EAAAC,cAAA,kBACAsC,EAAAvC,EAAAC,cAAA,6BACAsC,EAAAvC,EAAAC,cAAA,2BACAsC,EAAAvC,EAAAC,cAAA,wBACAsC,EAAAvC,EAAAC,cAAA,8BACAsC,EAAAvC,EAAAC,cAAA,gCAGNsC,EAAAvC,EAAAC,cAAA,aACInC,KAAKwc,4BAIZ/X,EAAAvC,EAAAC,cAAA,OAAKK,UAAU,sBACZiC,EAAAvC,EAAAC,cAACmc,GAAD,CAAmB7Q,SAAUzN,KAAKG,MAAMsN,SAAU5H,MAAO7F,KAAKJ,MAAM2iB,kBAAmBvU,aAAchO,KAAKgO,0BAhH1G/K,aA6IlBC,GAAqB,CACxB2Y,iBACAO,sBACAnB,uBACAsB,kBAGYnZ,eA1BS,SAAAjD,GAAK,MAAK,CAC/B0H,SAAU1H,EAAM0H,SAAShC,MACzB+C,gBAAiBzI,EAAM0H,SAAST,QAChCyB,aAAc1I,EAAM0H,SAASP,MAE7BgE,KAAMnL,EAAMmL,KAAKzF,MACjBmH,YAAa7M,EAAMmL,KAAKlE,QACxB6F,SAAU9M,EAAMmL,KAAKhE,MAErBib,kBAAmBpiB,EAAMoiB,kBAAkB1c,MAC3Cgd,yBAA0B1iB,EAAMoiB,kBAAkBnb,QAClD0b,uBAAwB3iB,EAAMoiB,kBAAkBjb,MAChDqW,UAAWxd,EAAMoiB,kBAAkBhE,UAEnC5d,eAAgBR,EAAMQ,eAAekF,MACrCsB,sBAAuBhH,EAAMQ,eAAeyG,QAC5CC,oBAAqBlH,EAAMQ,eAAe2G,QAULpE,GAAzBE,CAA6CiZ,IC/K/C5B,GAAU,CACpBuI,qBAAsB,uBACtBC,uBAAwB,yBACxBC,uBAAwB,0BAGdC,GAAqB,iBAAO,CACtCtQ,KAAM4H,GAAQuI,uBAGJI,GAAuB,SAAC/X,GAAD,MAAe,CAEhDwH,KAAM4H,GAAQwI,uBACdlI,QAAS,CAAC1P,cAGAgY,GAAuB,SAAC/b,GAAD,MAAY,CAC7CuL,KAAM4H,GAAQyI,uBACdnI,QAAS,CAAEzT,yBCEd6T,KAAMmI,SAASC,QAAU,0CAGnBC,qDAEH,SAAAA,EAAY5jB,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAAwjB,IAChB3jB,EAAAI,EAAAC,KAAAF,KAAMJ,IAUT6jB,0CAA4C,WACzC5jB,EAAKoB,SAAS,CACXyiB,qCAAqC,KAbxB7jB,EAiBnB8jB,2CAA6C,WAC1C9jB,EAAKoB,SAAS,CACXyiB,qCAAqC,KAjBxC7jB,EAAKM,MAAQ,CACVujB,qCAAqC,GAHxB7jB,uDAOnB,WACGG,KAAKJ,MAAMgkB,sCAed,WACG,IAAIta,EAAS,CACV,CAAEuB,aAAc,WAAYrB,UAAWxJ,KAAKJ,MAAMyL,SAASjE,QAASE,MAAOtH,KAAKJ,MAAMyL,SAAS/D,QAE9FgW,EAAaxU,EAAOyU,sBAAsBjU,GAC9C,OACG7E,EAAAvC,EAAAC,cAAA,QAAMK,UAAU,eACbiC,EAAAvC,EAAAC,cAAC6b,EAAD,CAASxZ,KAAM8E,EAAQU,OAAQsT,IAC/B7Y,EAAAvC,EAAAC,cAAC0hB,GAAD,CACIlf,OAAQ3E,KAAKG,MAAMujB,oCACnB9C,qCAAsC5gB,KAAK2jB,6CAG/Clf,EAAAvC,EAAAC,cAAC2hB,GAAD,CACI7B,oCAAqCjiB,KAAKyjB,4CAE9Chf,EAAAvC,EAAAC,cAAC4hB,EAAA,EAAD,KACGtf,EAAAvC,EAAAC,cAAC4hB,EAAA,EAAD,CAAOC,KAAK,IAAIlhB,OAAK,EAACmhB,UAAW3D,KACjC7b,EAAAvC,EAAAC,cAAC4hB,EAAA,EAAD,CAAOC,KAAK,aAAaC,UAAWtkB,OACpC8E,EAAAvC,EAAAC,cAAC4hB,EAAA,EAAD,CAAOC,KAAK,qBAAqBlhB,OAAK,EAACmhB,UAAWC,KAClDzf,EAAAvC,EAAAC,cAAC4hB,EAAA,EAAD,CAAOC,KAAK,mBAAmBlhB,OAAK,EAACmhB,UAAWE,KAChD1f,EAAAvC,EAAAC,cAAC4hB,EAAA,EAAD,CAAOC,KAAK,gBAAgBlhB,OAAK,EAACmhB,UAAW5H,KAC7C5X,EAAAvC,EAAAC,cAAC4hB,EAAA,EAAD,CAAOE,UAAW9B,GAAUnY,OAAQ,eA/CvB/G,aA6DtBC,GAAqB,CACxB0gB,cDhEI,WACJ,OAAO,SAAA1I,GAEJ,OADAA,EAASiI,MACFhI,KAAMC,IAAI,4CACbC,KAAK,SAAA9Q,GAAa2Q,EAASkI,GAAqB7Y,EAASC,SACzD8Q,MAAM,SAAAhU,GAAK,OAAI4T,EAASmI,GAAqB/b,SC8DxClE,eAXS,SAAAjD,GAAK,MAAK,CAC/BkL,SAAUlL,EAAMkL,SAChB+Y,iBAAkBjkB,EAAMmY,gBACxBiK,kBAAmBpiB,EAAMoiB,kBACzBlf,cAAelD,EAAMkD,gBAOgBH,GAAzBE,CAA6CogB,aC9E5Da,IAAQC,WADW,kBAEnBD,IAAQE,SAASjU,OAAOC,SAAS7O,SAAW4O,OAAOC,SAASgJ,QAE5D,IAAMlY,GAAUmjB,eAGhBnjB,GAAQojB,OAAO,SAAAlU,GACZ8T,IAAQK,IAAI,CAAElX,KAAM+C,EAAS7O,WAC7B2iB,IAAQE,SAAShU,EAAS7O,YAG7B,IAaeijB,GAbH,SAAAja,GAAA,IAAGka,EAAHla,EAAGka,MAAH,OACTngB,EAAAvC,EAAAC,cAAC0iB,EAAA,EAAD,CAAUD,MAAOA,GACdngB,EAAAvC,EAAAC,cAAC4hB,EAAA,EAAD,CAAQ1iB,QAASA,IACdoD,EAAAvC,EAAAC,cAAC4hB,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAWT,+FCPxC/jB,GAASC,EAAQ,IAEfolB,qDACH,SAAAA,EAAYllB,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAA8kB,IAChBjlB,EAAAI,EAAAC,KAAAF,KAAMJ,IA4DTmlB,YAAc,WACX,OACGtgB,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACGqC,EAAAvC,EAAAC,cAACyH,EAAA,EAAD,CAAO7G,MAAM,QACV0B,EAAAvC,EAAAC,cAAA,MAAIK,UAAU,iBAAd,6CACAiC,EAAAvC,EAAAC,cAAA,0JAKAsC,EAAAvC,EAAAC,cAAA,WACAsC,EAAAvC,EAAAC,cAAA,KAAGK,UAAU,QAAb,6GAGkBiC,EAAAvC,EAAAC,cAAA,kBAHlB,mBAOHsC,EAAAvC,EAAAC,cAAA,OAAKsV,MAAO,CAAEuN,aAAc,SACzBvgB,EAAAvC,EAAAC,cAACse,GAAA,EAAD,KACGhc,EAAAvC,EAAAC,cAACge,GAAA,EAAD,KACG1b,EAAAvC,EAAAC,cAACie,GAAA,EAAD,KACG3b,EAAAvC,EAAAC,cAAA,MAAIK,UAAU,aAAd,eACAiC,EAAAvC,EAAAC,cAACke,GAAA,EAAD,KACG5b,EAAAvC,EAAAC,cAAA,qBAAgBtC,EAAKD,MAAMyL,SAAS4Z,aAAaxgB,EAAAvC,EAAAC,cAAA,WACjDsC,EAAAvC,EAAAC,cAAA,0BAAoBsC,EAAAvC,EAAAC,cAAA,YAAOtC,EAAKD,MAAMyL,SAAS6Z,YAAkBzgB,EAAAvC,EAAAC,cAAA,aAIvEsC,EAAAvC,EAAAC,cAACgjB,GAAA,EAAD,KAAY1gB,EAAAvC,EAAAC,cAAA,KAAGoE,KAAM,8CAAgD1G,EAAKD,MAAMyL,SAAS6Z,WAAYpY,OAAO,SAASC,IAAI,uBAA7G,oBAEftI,EAAAvC,EAAAC,cAACge,GAAA,EAAD,KACG1b,EAAAvC,EAAAC,cAACie,GAAA,EAAD,KACG3b,EAAAvC,EAAAC,cAAA,MAAIK,UAAU,aAAd,oBACAiC,EAAAvC,EAAAC,cAAA,0BAAoBsC,EAAAvC,EAAAC,cAAA,YAAOtC,EAAKM,MAAMilB,MAAY3gB,EAAAvC,EAAAC,cAAA,YAGrDsC,EAAAvC,EAAAC,cAACgjB,GAAA,EAAD,KAAY1gB,EAAAvC,EAAAC,cAAA,KAAGoE,KAAM,8CAAgD1G,EAAKM,MAAMilB,KAAMtY,OAAO,SAASC,IAAI,uBAA9F,sBAnCxB,6CAuC6CtI,EAAAvC,EAAAC,cAACqR,EAAAtR,EAAD,CAAWuR,MAAM,yBAvC9D,MA/Da5T,EA2GnBwlB,YAAc,WACX,OACG5gB,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KAC6B,OAA5BvC,EAAKM,MAAMmlB,aAAwB,wCAChCzlB,EAAKM,MAAMolB,YAKb9gB,EAAAvC,EAAAC,cAAC2I,EAAA,EAAD,CAAS/H,MAAM,YAJd0B,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACGqC,EAAAvC,EAAAC,cAAA,mDAA2CtC,EAAKM,MAAMqlB,QAAQA,QAAQljB,MACtEmC,EAAAvC,EAAAC,cAAA,OAAKK,UAAU,wBAAwB/C,GAAOsC,OAAOlC,EAAKM,MAAMqlB,QAAQC,aAlHjE5lB,EA0HnB6lB,YAAc,WACX,OACGjhB,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACsC,OAAlCvC,EAAKM,MAAMwlB,mBAA8B,wCACtC9lB,EAAKM,MAAMylB,kBAKPnhB,EAAAvC,EAAAC,cAAC2I,EAAA,EAAD,CAAS/H,MAAM,YAJjB0B,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACGqC,EAAAvC,EAAAC,cAAA,sFACAsC,EAAAvC,EAAAC,cAAA,OAAKK,UAAU,wBAAwB3C,EAAKM,MAAM0lB,kBAjIjDhmB,EAyInBimB,YAAc,WACX,OACGrhB,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACGqC,EAAAvC,EAAAC,cAAC4jB,GAAA,EAAD,KACGthB,EAAAvC,EAAAC,cAACge,GAAA,EAAD,KACG1b,EAAAvC,EAAAC,cAAC6jB,GAAA,EAAD,CAASpI,KAAG,EAACqI,MAAM,OAAOC,IAAI,wIAAwIC,IAAI,uBAC1K1hB,EAAAvC,EAAAC,cAACie,GAAA,EAAD,KACG3b,EAAAvC,EAAAC,cAACke,GAAA,EAAD,KAAU5b,EAAAvC,EAAAC,cAAA,wBAAesC,EAAAvC,EAAAC,cAAA,KAAGoE,KAAK,uGAAR,oBAAf,OAA6J9B,EAAAvC,EAAAC,cAAA,KAAGoE,KAAK,wEAAR,gBAG7K9B,EAAAvC,EAAAC,cAACge,GAAA,EAAD,KACG1b,EAAAvC,EAAAC,cAAC6jB,GAAA,EAAD,CAASpI,KAAG,EAACqI,MAAM,OAAOC,IAAI,uIAAuIC,IAAI,wBACzK1hB,EAAAvC,EAAAC,cAACie,GAAA,EAAD,KACG3b,EAAAvC,EAAAC,cAACke,GAAA,EAAD,KAAU5b,EAAAvC,EAAAC,cAAA,wBAAesC,EAAAvC,EAAAC,cAAA,KAAGoE,KAAK,yGAAR,kBAAf,OAA6J9B,EAAAvC,EAAAC,cAAA,KAAGoE,KAAK,wEAAR,gBAG7K9B,EAAAvC,EAAAC,cAACge,GAAA,EAAD,KACG1b,EAAAvC,EAAAC,cAAC6jB,GAAA,EAAD,CAASpI,KAAG,EAACqI,MAAM,OAAOC,IAAI,wIAAwIC,IAAI,gBAC1K1hB,EAAAvC,EAAAC,cAACie,GAAA,EAAD,KACG3b,EAAAvC,EAAAC,cAACke,GAAA,EAAD,KAAU5b,EAAAvC,EAAAC,cAAA,wBAAesC,EAAAvC,EAAAC,cAAA,KAAGoE,KAAK,uGAAR,gBAAf,OAAyJ9B,EAAAvC,EAAAC,cAAA,KAAGoE,KAAK,wEAAR,gBAGzK9B,EAAAvC,EAAAC,cAACge,GAAA,EAAD,KACG1b,EAAAvC,EAAAC,cAAC6jB,GAAA,EAAD,CAASpI,KAAG,EAACqI,MAAM,OAAOC,IAAI,2GAA2GC,IAAI,gBAC7I1hB,EAAAvC,EAAAC,cAACie,GAAA,EAAD,KACG3b,EAAAvC,EAAAC,cAACke,GAAA,EAAD,KAAU5b,EAAAvC,EAAAC,cAAA,wBAAesC,EAAAvC,EAAAC,cAAA,KAAGoE,KAAK,yGAAR,iBAAf,OAA4J9B,EAAAvC,EAAAC,cAAA,KAAGoE,KAAK,wEAAR,gBAG5K9B,EAAAvC,EAAAC,cAACge,GAAA,EAAD,KACG1b,EAAAvC,EAAAC,cAAC6jB,GAAA,EAAD,CAASpI,KAAG,EAACqI,MAAM,OAAOC,IAAI,wIAAwIC,IAAI,gBAC1K1hB,EAAAvC,EAAAC,cAACie,GAAA,EAAD,KACG3b,EAAAvC,EAAAC,cAACke,GAAA,EAAD,KAAU5b,EAAAvC,EAAAC,cAAA,wBAAesC,EAAAvC,EAAAC,cAAA,KAAGoE,KAAK,oGAAR,cAAf,OAAoJ9B,EAAAvC,EAAAC,cAAA,KAAGoE,KAAK,4FAAR,mBAtK7K1G,EAAKM,MAAQ,CACVilB,KAAM,UACNgB,iBAAiB,EACjBC,YAAa,KAEbb,QAAS,UACTD,aAAa,EACbD,aAAc,KAEdO,cAAe,UACfD,mBAAmB,EACnBD,mBAAoB,KAEpBW,UAAW,KAEdzmB,EAAK0mB,cAAgB1mB,EAAK0mB,cAAcjmB,KAAnBR,OAAAgS,EAAA,EAAAhS,CAAAD,IACrBA,EAAK2mB,WAAa3mB,EAAK2mB,WAAWlmB,KAAhBR,OAAAgS,EAAA,EAAAhS,CAAAD,IAClBA,EAAK4mB,kBAAoB5mB,EAAK4mB,kBAAkBnmB,KAAvBR,OAAAgS,EAAA,EAAAhS,CAAAD,IACzBA,EAAKwE,OAASxE,EAAKwE,OAAO/D,KAAZR,OAAAgS,EAAA,EAAAhS,CAAAD,IApBEA,uDAuBnB,WACGG,KAAKumB,gBACLvmB,KAAKwmB,aACLxmB,KAAKymB,iDAGR,WAAgB,IAAAxf,EAAAjH,KACbmb,KAAMC,IAAI,oEACNC,KAAK,SAAAgE,GACHpY,EAAKhG,SAAS,CAAEmkB,KAAM/F,EAAI7U,KAAKkc,IAAKN,iBAAiB,MAEvD9K,MAAM,SAAAgE,GAAG,OAAIrY,EAAKhG,SAAS,CAAEolB,YAAa/G,EAAI/U,uCAGrD,WAAa,IAAAU,EAAAjL,KACVmb,KAAMC,IAAI,2DACNC,KAAK,SAAAgE,GACHpU,EAAKhK,SAAS,CAAEukB,QAASnG,EAAI7U,KAAM+a,aAAa,MAElDjK,MAAM,SAAAgE,GAAG,OAAIrU,EAAKhK,SAAS,CAAEqkB,aAAchG,EAAI/U,8CAGtD,WAAoB,IAAAoc,EAAA3mB,KACjBmb,KAAMC,IAAI,mGACNC,KAAK,SAAAgE,GACHsH,EAAK1lB,SAAS,CAAE4kB,cAAexG,EAAI7U,KAAMob,mBAAmB,MAE9DtK,MAAM,SAAAgE,GAAG,OAAIqH,EAAK1lB,SAAS,CAAE0kB,mBAAoBrG,EAAI/U,mCAG5D,SAAOqc,GACA5mB,KAAKG,MAAMmmB,YAAcM,GAC1B5mB,KAAKiB,SAAS,CACXqlB,UAAWM,0BAwHpB,WAAS,IAAAC,EAAA7mB,KACNmB,EAA+BnB,KAAKJ,MAA5BwE,EAARjD,EAAQiD,WAAYC,EAApBlD,EAAoBkD,OACpB,OACGI,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAE,SAAA,KACGqC,EAAAvC,EAAAC,cAACuC,EAAA,EAAD,CAAOC,OAAQP,EAAYC,OAAQA,EAAQC,KAAK,MAC7CG,EAAAvC,EAAAC,cAAC0C,EAAA,EAAD,CAAaR,OAAQA,GAArB,2BACAI,EAAAvC,EAAAC,cAAC2C,EAAA,EAAD,KACGL,EAAAvC,EAAAC,cAAA,WACGsC,EAAAvC,EAAAC,cAACyf,GAAA,EAAD,CAAKkF,OAAK,GACPriB,EAAAvC,EAAAC,cAAC0f,GAAA,EAAD,KACGpd,EAAAvC,EAAAC,cAAC2f,GAAA,EAAD,CACGvb,KAAK,KACL/D,UAAWukB,KAAW,CAAE3X,OAAiC,MAAzBpP,KAAKG,MAAMmmB,YAC3CrhB,QAAS,WAAQ4hB,EAAKxiB,OAAO,OAHhC,sBAOHI,EAAAvC,EAAAC,cAAC0f,GAAA,EAAD,KACGpd,EAAAvC,EAAAC,cAAC2f,GAAA,EAAD,CACGvb,KAAK,KACL/D,UAAWukB,KAAW,CAAE3X,OAAiC,MAAzBpP,KAAKG,MAAMmmB,YAC3CrhB,QAAS,WAAQ4hB,EAAKxiB,OAAO,OAHhC,wBAOHI,EAAAvC,EAAAC,cAAC0f,GAAA,EAAD,KACGpd,EAAAvC,EAAAC,cAAC2f,GAAA,EAAD,CACGvb,KAAK,KACL/D,UAAWukB,KAAW,CAAE3X,OAAiC,MAAzBpP,KAAKG,MAAMmmB,YAC3CrhB,QAAS,WAAQ4hB,EAAKxiB,OAAO,OAHhC,mBAOHI,EAAAvC,EAAAC,cAAC0f,GAAA,EAAD,KACGpd,EAAAvC,EAAAC,cAAC2f,GAAA,EAAD,CACGvb,KAAK,KACL/D,UAAWukB,KAAW,CAAE3X,OAAiC,MAAzBpP,KAAKG,MAAMmmB,YAC3CrhB,QAAS,WAAQ4hB,EAAKxiB,OAAO,OAHhC,mBAQNI,EAAAvC,EAAAC,cAAA,WACAsC,EAAAvC,EAAAC,cAAC6kB,GAAA,EAAD,CAAYV,UAAWtmB,KAAKG,MAAMmmB,WAC/B7hB,EAAAvC,EAAAC,cAAC8kB,GAAA,EAAD,CAASC,MAAM,KACXlnB,KAAK+kB,eAETtgB,EAAAvC,EAAAC,cAAC8kB,GAAA,EAAD,CAASC,MAAM,KACXlnB,KAAKqlB,eAET5gB,EAAAvC,EAAAC,cAAC8kB,GAAA,EAAD,CAASC,MAAM,KACXlnB,KAAK0lB,eAETjhB,EAAAvC,EAAAC,cAAC8kB,GAAA,EAAD,CAASC,MAAM,KACXlnB,KAAK8lB,kBAKlBrhB,EAAAvC,EAAAC,cAAC4C,EAAA,EAAD,KACGN,EAAAvC,EAAAC,cAAC6C,EAAA,EAAD,CAAQjC,MAAM,UAAUkC,QAASZ,GAAjC,mBA7OIpB,aA0PPG,eAJS,SAAAjD,GAAK,MAAK,CAC/BkL,SAAUlL,EAAMkL,WAGJjI,CAAyB0hB,IC/PxCrV,KAAQC,IAAIyX,UAENC,qDACH,SAAAA,EAAYxnB,GAAO,IAAAC,EAAA,OAAAC,OAAA4F,EAAA,EAAA5F,CAAAE,KAAAonB,IAChBvnB,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACVknB,kBAAkB,GAHLxnB,4CAMnB,WAAS,IAAAoH,EAAAjH,KACN,OACGyE,EAAAvC,EAAAC,cAAA,UAAQK,UAAU,sBAAsBiV,MAAO,CAAE6P,gBAAiB,YAC/D7iB,EAAAvC,EAAAC,cAAC+X,EAAA,EAAD,CAAWD,OAAK,EAACzX,UAAU,YACxBiC,EAAAvC,EAAAC,cAAA,OAAKK,UAAU,cACZiC,EAAAvC,EAAAC,cAAColB,GAAD,CACGnjB,WAAYpE,KAAKG,MAAMknB,iBACvBhjB,OAAQ,kBAAM4C,EAAKhG,SAChB,CACGomB,kBAAmBpgB,EAAK9G,MAAMknB,sBAGvC5iB,EAAAvC,EAAAC,cAAA,KACGoE,KAAK,KACLtB,QACG,kBAAMgC,EAAKhG,SACR,CACGomB,kBAAmBpgB,EAAK9G,MAAMknB,qBAGzC5iB,EAAAvC,EAAAC,cAAC2N,GAAA,EAAD,CAAiBC,KAAK,iBACtB7L,EAAKO,EAAAvC,EAAAC,cAAA,QAAMK,UAAU,cAAhB,KAAsC0B,EAC5CO,EAAAvC,EAAAC,cAAA,QAAMK,UAAU,cAAhB,aAAwC,OAAxC,+CAEHiC,EAAAvC,EAAAC,cAAA,OAAKK,UAAU,eACZiC,EAAAvC,EAAAC,cAAA,KAAGK,UAAU,uBACZ0B,EACDO,EAAAvC,EAAAC,cAAA,KAAGoE,KAAK,uCAAuCuG,OAAO,SAASC,IAAI,uBAAnE,gCAlCG9J,aA8CNG,eAJS,SAAAjD,GAAK,MAAK,IAInBiD,CAAyBgkB,kCCtDlCI,GAAcC,QACY,cAA7BnX,OAAOC,SAASmX,UAEa,UAA7BpX,OAAOC,SAASmX,UAEhBpX,OAAOC,SAASmX,SAAStmB,MACtB,2DAsCN,SAASumB,GAAgBC,GACtBC,UAAUC,cACNC,SAASH,GACTvM,KAAK,SAAA2M,GACHA,EAAaC,cAAgB,WAC1B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACC,cAA3BF,EAAiB/nB,QACd0nB,UAAUC,cAAcO,WAKzBC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAM1BjN,MAAM,SAAAhU,GACJghB,QAAQhhB,MAAM,4CAA6CA,KC7EpE,IAAMkhB,GAAe,CAClB3iB,MAAO,GACPuB,SAAS,EACTE,MAAO,KACPoR,IAAK,GACLE,wBAA2B,CACxBnY,iBAAkB,GAClBC,gBAAiB,GACjBC,eAAgB,GAChBG,qBAAsB,IAEzByd,WAAW,GCXd,IAAMiK,GAAe,CAClB3iB,MAAO,GACPuB,SAAS,EACTE,MAAO,MCHV,IAAMkhB,GAAe,CAClB3iB,MAAO,GACPuB,SAAS,EACTE,MAAO,MCHV,IAAMkhB,GAAe,CAClBC,uBAAuB,EACvB3I,aAAa,EACb4B,SAAS,GCHZ,IAAM8G,GAAe,CAClB3iB,MAAO,GACPuB,SAAS,EACTE,MAAO,MCHV,IAAMkhB,GAAe,CAClBlH,YAAa,aACbvB,aAAc,aACdC,aAAc,aACdC,oBAAqB,aACrByI,qBAAsB,aACtBzD,aAAc,SACdC,WAAY,aACZyD,cAAe,aACfvhB,SAAS,EACTE,MAAO,MCVV,IAAMkhB,GAAe,CAClB3iB,MAAO,GACPuB,SAAS,EACTE,MAAO,KACPoR,IAAK,GACLE,wBAA2B,CACxBnY,iBAAkB,GAClBC,gBAAiB,GACjBC,eAAgB,GAChBC,qBAAsB,IAEzB2d,WAAW,GCXd,IAAMiK,GAAe,CAClB3iB,MAAO,GACPuB,SAAS,EACTE,MAAO,KACPoR,IAAK,GACLE,wBAA2B,CACxBnY,iBAAkB,GAClBC,gBAAiB,GACjBC,eAAgB,GAChBG,qBAAsB,IAEzByd,WAAW,GCHCqK,iCAAgB,CAC5Bvd,SHIY,WAAuD,IAA9BlL,EAA8B0oB,UAAA7kB,OAAA,QAAA8kB,IAAAD,UAAA,GAAAA,UAAA,GAAtBL,GAAcO,EAAQF,UAAA7kB,OAAA,EAAA6kB,UAAA,QAAAC,EACnE,OAAOC,EAAOlW,MACX,KAAK4H,GAAQuI,qBACV,OAAOljB,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGiH,SAAS,EACTE,MAAO,OAEb,KAAKmT,GAAQwI,uBACV,OAAOnjB,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GACA4oB,EAAOhO,QAAQ1P,UAFrB,IAGGjE,SAAS,IAEf,KAAKqT,GAAQyI,uBACV,OAAOpjB,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGiH,SAAS,EACTE,MAAOyhB,EAAOhO,QAAQzT,MACtBzB,MAAO,KAEb,QACG,OAAO1F,IGzBb0H,SNJY,WAAuD,IAA9B1H,EAA8B0oB,UAAA7kB,OAAA,QAAA8kB,IAAAD,UAAA,GAAAA,UAAA,GAAtBL,GAAcO,EAAQF,UAAA7kB,OAAA,EAAA6kB,UAAA,QAAAC,EACnE,OAAOC,EAAOlW,MACX,KAAK4H,GAAQc,qBACV,OAAOzb,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGiH,SAAS,EACTE,MAAO,OAEb,KAAKmT,GAAQe,uBACV,OAAO1b,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGiH,SAAS,EACTvB,MAAOkjB,EAAOhO,QAAQlT,WAE5B,KAAK4S,GAAQgB,uBACV,OAAO3b,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGiH,SAAS,EACTE,MAAOyhB,EAAOhO,QAAQzT,MACtBzB,MAAO,KAEb,QACG,OAAO1F,IMjBbmL,KJLY,WAA4D,IAA9BnL,EAA8B0oB,UAAA7kB,OAAA,QAAA8kB,IAAAD,UAAA,GAAAA,UAAA,GAAtBL,GAAcO,EAAQF,UAAA7kB,OAAA,EAAA6kB,UAAA,QAAAC,EACxE,OAAOC,EAAOlW,MACX,KAAK4H,GAAQqB,0BACV,OAAOhc,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGiH,SAAS,EACTE,MAAO,OAEb,KAAKmT,GAAQsB,4BACV,OAAOjc,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGiH,SAAS,EACTvB,MAAOkjB,EAAOhO,QAAQpP,gBAE5B,KAAK8O,GAAQuB,4BACV,OAAOlc,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGiH,SAAS,EACTE,MAAOyhB,EAAOhO,QAAQzT,MACtBzB,MAAO,KAEb,QACG,OAAO1F,IIhBbkY,ILNY,WAAmD,IAA9BlY,EAA8B0oB,UAAA7kB,OAAA,QAAA8kB,IAAAD,UAAA,GAAAA,UAAA,GAAtBL,GACzC,QAD+DK,UAAA7kB,OAAA,EAAA6kB,UAAA,QAAAC,GACjDjW,MACX,KAAK4H,GAAQuO,+BACV,OAAOlpB,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGsoB,uBAAwBtoB,EAAMsoB,wBAEpC,KAAKhO,GAAQoG,gBACV,OAAO/gB,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEG2f,aAAc3f,EAAM2f,cAE1B,KAAKrF,GAAQqG,eACV,OAAOhhB,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGuhB,SAAUvhB,EAAMuhB,UAEtB,QACG,OAAOvhB,IKXboiB,kBFCY,WAAgE,IAA9BpiB,EAA8B0oB,UAAA7kB,OAAA,QAAA8kB,IAAAD,UAAA,GAAAA,UAAA,GAAtBL,GAAcO,EAAQF,UAAA7kB,OAAA,EAAA6kB,UAAA,QAAAC,EAC5E,OAAOC,EAAOlW,MACX,KAAKoW,KAAYC,+BACd,OAAOppB,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGiH,SAAS,EACTE,MAAO,OAEb,KAAK2hB,KAAYE,iCACd,IAAM9lB,EAAgB0lB,EAAOhO,QAAQ1X,cAAc8Q,OAAO,SAAAf,GAAI,MAAsB,OAAlBA,EAAKG,WACvE,OAAOzT,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGiH,SAAS,EACTvB,MAAOxC,EACPkb,UAAWlb,EAAcW,OAAS,IAExC,KAAKilB,KAAYG,iCACd,OAAOtpB,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGiH,SAAS,EACTE,MAAOyhB,EAAOhO,QAAQzT,MACtBzB,MAAO,KAEb,KAAKojB,KAAYI,yBACd,OAAOvpB,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGyY,wBAAyBmQ,EAAOhO,QAAQnZ,QAE9C,KAAKqnB,KAAYK,aACd,OAAOxpB,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGuY,IAAKqQ,EAAOhO,QAAQrC,MAE1B,KAAKuQ,KAAYM,kBACd,OAAOzpB,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGoe,WAAYpe,EAAMoe,YAExB,QACG,OAAOpe,IEvCbmY,gBRAY,WAAwD,IAA9BnY,EAA8B0oB,UAAA7kB,OAAA,QAAA8kB,IAAAD,UAAA,GAAAA,UAAA,GAAtBL,GAAcO,EAAQF,UAAA7kB,OAAA,EAAA6kB,UAAA,QAAAC,EACpE,OAAOC,EAAOlW,MACX,KAAK2W,KAAUC,6BACZ,OAAO3pB,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGiH,SAAS,EACTE,MAAO,OAEb,KAAKkiB,KAAUE,+BACZ,IAAMrmB,EAAgB0lB,EAAOhO,QAAQ1X,cAAc8Q,OAAO,SAAAf,GAAI,MAAsB,OAAlBA,EAAKG,WACvE,OAAOzT,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGiH,SAAS,EACTvB,MAAOxC,EACPkb,UAAWlb,EAAcW,OAAS,IAExC,KAAKwlB,KAAUG,+BACZ,OAAO7pB,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGiH,SAAS,EACTE,MAAOyhB,EAAOhO,QAAQzT,MACtBzB,MAAO,KAEb,KAAK2jB,KAAUI,uBACZ,OAAO9pB,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGyY,wBAAyBmQ,EAAOhO,QAAQnZ,QAE9C,KAAK4nB,KAAUK,WACZ,OAAO/pB,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGuY,IAAKqQ,EAAOhO,QAAQrC,MAE1B,KAAK8Q,KAAUM,gBACZ,OAAOhqB,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGoe,WAAYpe,EAAMoe,YAExB,QACG,OAAOpe,IQtCbQ,ePTY,WAA6D,IAA9BR,EAA8B0oB,UAAA7kB,OAAA,QAAA8kB,IAAAD,UAAA,GAAAA,UAAA,GAAtBL,GAAcO,EAAQF,UAAA7kB,OAAA,EAAA6kB,UAAA,QAAAC,EACzE,OAAQC,EAAOlW,MACZ,KAAK4H,GAAQC,2BACV,OAAO5a,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGiH,SAAS,EACTE,MAAO,OAEb,KAAKmT,GAAQE,6BACV,OAAO7a,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGiH,SAAS,EACTvB,MAAOkjB,EAAOhO,QAAQpa,iBAE5B,KAAK8Z,GAAQG,6BACV,OAAO9a,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGiH,SAAS,EACTE,MAAOyhB,EAAOhO,QAAQzT,MACtBzB,MAAO,KAEb,QACG,OAAO1F,IOZbkD,cDFY,WAA4D,IAA9BlD,EAA8B0oB,UAAA7kB,OAAA,QAAA8kB,IAAAD,UAAA,GAAAA,UAAA,GAAtBL,GAAcO,EAAQF,UAAA7kB,OAAA,EAAA6kB,UAAA,QAAAC,EACxE,OAAOC,EAAOlW,MACX,KAAK6L,GAAcC,0BAChB,OAAO7e,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGiH,SAAS,EACTE,MAAO,OAEb,KAAKoX,GAAcE,4BAChB,IAAMvb,EAAgB0lB,EAAOhO,QAAQ1X,cAAc8Q,OAAO,SAAAf,GAAI,MAAsB,OAAlBA,EAAKG,UAAuC,OAAlBH,EAAKG,WACjG,OAAOzT,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGiH,SAAS,EACTvB,MAAOxC,EACPkb,UAAWlb,EAAcW,OAAS,IAExC,KAAK0a,GAAcG,4BAChB,OAAO/e,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGiH,SAAS,EACTE,MAAOyhB,EAAOhO,QAAQzT,MACtBzB,MAAO,KAEb,KAAK6Y,GAAcI,oBAChB,OAAOhf,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGyY,wBAAyBmQ,EAAOhO,QAAQnZ,QAE9C,KAAK8c,GAAcK,QAChB,OAAOjf,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGuY,IAAKqQ,EAAOhO,QAAQrC,MAE1B,KAAKgG,GAAcM,aAChB,OAAOlf,OAAAqJ,EAAA,EAAArJ,QAAAqJ,EAAA,EAAArJ,CAAA,GACDK,GADN,IAEGoe,WAAYpe,EAAMoe,YAExB,QACG,OAAOpe,MExCV4pB,GAAa,QAChBC,GAGGC,GAAmBC,+BAAoB,CAC1CC,OAAO,EACPC,WAAY,KAGTxF,GAAQyF,sBAAYC,GAAmCL,GAC1DM,kBAAeC,WAAf,EAAmBT,MAGtBU,KAAStgB,OACN,CAAC1F,EAAAvC,EAAAC,cAACuoB,GAAD,CAAK9F,MAAOA,GAAO3e,IAAK,IAAOxB,EAAAvC,EAAAC,cAAC0iB,EAAA,EAAD,CAAUD,MAAOA,GAAO3e,IAAK,GAAIxB,EAAAvC,EAAAC,cAACwoB,GAAD,CAAQ/F,MAAOA,OAAsBgG,SAASC,eAAe,SVTlH,WACZ,GAA6C,kBAAmBhD,UAAW,CAGxE,GADkB,IAAIjX,IAAIka,GAAwBxa,OAAOC,UAC3Cwa,SAAWza,OAAOC,SAASwa,OAItC,OAGHza,OAAO0a,iBAAiB,OAAQ,WAC7B,IAAMpD,EAAK,GAAA/W,OAAMia,GAAN,sBAEPtD,IAiDb,SAAiCI,GAE9BqD,MAAMrD,GACFvM,KAAK,SAAA9Q,GAGoB,MAApBA,EAASP,SACuD,IAAhEO,EAAS2gB,QAAQ9P,IAAI,gBAAgB+P,QAAQ,cAG7CtD,UAAUC,cAAcsD,MAAM/P,KAAK,SAAA2M,GAChCA,EAAaqD,aAAahQ,KAAK,WAC5B/K,OAAOC,SAAS+a,aAKtB3D,GAAgBC,KAGrBtM,MAAM,WACJgN,QAAQC,IACL,mEArEAgD,CAAwB3D,GAIxBC,UAAUC,cAAcsD,MAAM/P,KAAK,WAChCiN,QAAQC,IACL,+GAMNZ,GAAgBC,MUlB5B4D,oCC9BAC,EAAAC,EAAAC,EAAA,sBAAAnC,IAAAiC,EAAAC,EAAAC,EAAA,sBAAAnR,IAAAiR,EAAAC,EAAAC,EAAA,sBAAA9S,IAAA4S,EAAAC,EAAAC,EAAA,sBAAApP,IAAAkP,EAAAC,EAAAC,EAAA,sBAAA7S,IAAA,IAAA8S,EAAAH,EAAA,IAAAI,EAAAJ,EAAAK,EAAAF,GAEapC,EAAY,CACtBC,6BAA8B,+BAC9BC,+BAAgC,iCAChCC,+BAAgC,iCAChCC,uBAAwB,yBACxBC,WAAY,UACZC,gBAAiB,mBAiBPtP,EAAS,SAAC5J,GAAD,MAAU,CAC7BiC,KAAM2W,EAAUK,WAChB9O,QAAS,CAAEnK,SAGDiI,EAAoB,SAACjX,GAAD,MAAY,CAC1CiR,KAAM2W,EAAUI,uBAChB7O,QAAS,CAAEnZ,WAGD2a,EAAc,iBAAO,CAC/B1J,KAAM2W,EAAUM,kBAGNhR,EAAiB,SAACJ,GAC5B,OAAO,SAAAwC,GACJA,EA9BoC,CACvCrI,KAAM2W,EAAUC,+BA+BbtO,IAAMC,IAAI1C,GACN2C,KAAM,SAAAgE,GA7BqB,IAAChc,EA6Bd6X,GA7Bc7X,EA6BiBgc,EAAI7U,KA7BF,CACtDqI,KAAM2W,EAAUE,+BAChB3O,QAAS,CAAE1X,sBA4BJiY,MAAM,SAAAgE,GAzBqB,IAAChY,EAyBb4T,GAzBa5T,EAyBkBgY,EAzBP,CAC9CzM,KAAM2W,EAAUG,+BAChB5O,QAAS,CAAEzT,iDCtBdmkB,EAAAC,EAAAC,EAAA,sBAAA1C,IAAAwC,EAAAC,EAAAC,EAAA,sBAAAnR,IAAAiR,EAAAC,EAAAC,EAAA,sBAAAnrB,IAAAirB,EAAAC,EAAAC,EAAA,sBAAApP,IAAAkP,EAAAC,EAAAC,EAAA,sBAAAlJ,IAAA,IAAAmJ,EAAAH,EAAA,IAAAI,EAAAJ,EAAAK,EAAAF,GAEa3C,EAAc,CACxBC,+BAAgC,iCAChCC,iCAAkC,mCAClCC,iCAAkC,mCAClCC,yBAA0B,2BAC1BC,aAAc,eACdC,kBAAmB,qBAiBT/O,EAAS,SAAC5J,GAAD,MAAU,CAC7BiC,KAAMoW,EAAYK,aAClBvO,QAAS,CAAEnK,SAGDpQ,EAAwB,SAACoB,GAAD,MAAY,CAC9CiR,KAAMoW,EAAYI,yBAClBtO,QAAS,CAAEnZ,WAGD2a,EAAc,iBAAO,CAC/B1J,KAAMoW,EAAYM,oBAGR9G,EAAyB,SAAC/J,GACpC,OAAO,SAAAwC,GACJA,EA9B4C,CAC/CrI,KAAMoW,EAAYC,iCA8Bf/N,IAAMC,IAAI1C,GACN2C,KAAM,SAAAgE,GA5B6B,IAAChc,EA4BtB6X,GA5BsB7X,EA4BiBgc,EAAI7U,KA5BF,CAC9DqI,KAAMoW,EAAYE,iCAClBpO,QAAS,CAAE1X,sBA2BJiY,MAAM,SAAAgE,GAxB6B,IAAChY,EAwBrB4T,GAxBqB5T,EAwBkBgY,EAxBP,CACtDzM,KAAMoW,EAAYG,iCAClBrO,QAAS,CAAEzT,iDCtBdmkB,EAAAC,EAAAC,EAAA,sBAAAI,IAAA,IAAAC,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,GAAAS,EAAAT,EAAAK,EAAAG,GAGaE,EAAY,IACZC,EAAW,yBAET,SAASL,EAAMnsB,GAC3B,OACGssB,EAAAhqB,EAAAC,cAAC6pB,EAAA,OAAD,KACGE,EAAAhqB,EAAAC,cAAA,aAAQvC,EAAM0C,KAAd,IAAqB6pB,EAArB,IAAiCC","file":"static/js/main.4a61f144.chunk.js","sourcesContent":["import {\n   Button,\n   Jumbotron\n} from 'reactstrap';\nimport { NavLink as RRNavLink, Redirect } from 'react-router-dom';\nimport React, { Component } from 'react'\n\nimport Title from './head'\nimport { connect } from 'react-redux'\nimport { setQueryStatement as setOrgQueryStatement } from './actions/searchFor4CMemberActions'\nimport { setUnivQueryStatement } from './actions/searchForUnivCollaboratorActions'\nimport { withRouter } from \"react-router\";\n\n// import { setQueryStatement } from './actions/searchForUnivCollaboratorActions'\n\n\nvar base64 = require('base-64');\n\nclass ParseSaveQuery extends Component {\n   constructor(props) {\n      super(props);\n      this.state = { seconds: 5 }\n      this.tick = this.tick.bind(this)\n      this.props.setUnivQueryStatement({\n         activityKeywords: [],\n         topicalKeywords: [],\n         collaborations: [],\n         selectedUniversities: [],\n      })\n      this.props.setOrgQueryStatement({\n         activityKeywords: [],\n         topicalKeywords: [],\n         collaborations: [],\n         selectedOrganization: [],\n      })\n   }\n\n   componentDidMount() {\n      this.timer = setInterval(this.tick, 1000);\n   }\n\n   tick() {\n      if (this.state.seconds > 0) {\n         this.setState({ seconds: this.state.seconds - 1 })\n      } else {\n         clearInterval(this.timer);\n      }\n   }\n\n   render() {\n      const { match, history } = this.props;\n      const re = /^(4CCollaborator|univCollaborator)\\?((org|keyA|keyT|clb)=\\d+(&|\\n|\\d))+$/g;\n      let valid = false;\n      if (!match.params.id) {\n         history.replace({ pathname: '/' });\n      }\n      let query = match.params.id;\n      const buf = new Buffer(query, 'hex');\n      query = buf.toString('utf8');\n      let decoded_query;\n      try {\n         decoded_query = base64.decode(query);\n      }\n      catch {\n         return (\n            <>\n               <Title name=\"No Match Found\" />\n               <Jumbotron>\n                  <h1 className=\"display-3\">Malformatted String!</h1>\n                  <p className=\"lead\">A match could not be found for the string <code>{query}</code></p>\n                  <hr className=\"my-2\" />\n                  <p>You will be redirected to the homepage in {this.state.seconds} seconds</p>\n                  {this.state.seconds === 0 ? <Redirect to='/' /> : null}\n                  <p className=\"lead\">\n                     <Button tag={RRNavLink} exact to=\"/\" color=\"primary\">Go Home</Button>\n                  </p>\n               </Jumbotron>\n            </>\n         )\n      }\n      if (!re.test(decoded_query)) {\n         return (\n            <>\n               <Title name=\"No Match Found\" />\n               <Jumbotron>\n                  <h1 className=\"display-3\">Malformatted String!</h1>\n                  <p className=\"lead\">Regex test failed for the string <code>{query}</code></p>\n                  <p className=\"lead\">Using regex <code>{re.toString()}</code></p>\n                  <hr className=\"my-2\" />\n                  <p>You will be redirected to the homepage in {this.state.seconds} seconds</p>\n                  {this.state.seconds === 0 ? <Redirect to='/' /> : null}\n                  <p className=\"lead\">\n                     <Button tag={RRNavLink} exact to=\"/\" color=\"primary\">Go Home</Button>\n                  </p>\n               </Jumbotron>\n            </>\n         )\n      }\n      return (\n         <>\n            <Title name=\"Match Found\" />\n            <Jumbotron>\n               <h1 className=\"display-3\">Match Found!</h1>\n               <p className=\"lead\">A match could be found for the code <code>{query}</code></p>\n               <hr className=\"my-2\" />\n               <p>You will be redirected to <code>{decoded_query}</code> in {this.state.seconds} seconds</p>\n               {/* {this.state.seconds === 0 ? <Redirect to={decoded_query} /> : null} */}\n               <Redirect to={\"/\" + decoded_query} />\n            </Jumbotron>\n         </>\n      )\n   }\n}\n\nconst mapStateToProps = state => ({\n   collaborators: state.collaborators,\n})\n\nconst mapDispatchToProps = {\n   setUnivQueryStatement,\n   setOrgQueryStatement,\n};\n\nParseSaveQuery = withRouter(ParseSaveQuery);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ParseSaveQuery);","export function toTitleCase(str) {\n   return str.replace(\n      /\\w\\S*/g,\n      function (txt) {\n         return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n      }\n   );\n}\n\nexport const isEmptyUniv = (queryData) => {\n   let empty = true;\n   if (queryData.activityKeywords.length !== 0) {\n      empty = false;\n   }\n   if (queryData.topicalKeywords.length !== 0) {\n      empty = false;\n   }\n   if (queryData.collaborations.length !== 0) {\n      empty = false;\n   }\n   if (queryData.selectedUniversities.length !== 0) {\n      empty = false;\n   }\n   return empty;\n}\n\n\nexport const isEmptyOrg = (queryData) => {\n   let empty = true;\n   if (queryData.activityKeywords.length !== 0) {\n      empty = false;\n   }\n   if (queryData.topicalKeywords.length !== 0) {\n      empty = false;\n   }\n   if (queryData.collaborations.length !== 0) {\n      empty = false;\n   }\n   if (queryData.selectedOrganization.length !== 0) {\n      empty = false;\n   }\n   return empty;\n}\n\nexport const NBSP = '\\u00A0'","import React, { Component } from 'react';\nimport {\n   Button, Modal, ModalHeader, ModalBody, ModalFooter,\n} from 'reactstrap';\nimport './Modal.css';\n\nexport default class AdditionalDataModal extends Component {\n   \n   /* Passed in:\n      props:\n         - title\n         - body\n    */\n\n   render() {\n      const { openStatus, toggle, size, title, body } = this.props;\n      return (\n         <Modal isOpen={openStatus} toggle={toggle} centered size={size}>\n            <ModalHeader toggle={toggle}>{title}</ModalHeader>\n            <ModalBody>\n               {body}\n            </ModalBody>\n            <ModalFooter>\n               <Button color=\"primary\" onClick={toggle}>Close</Button>\n            </ModalFooter>\n         </Modal>\n      );\n   }\n}","import './App.css';\n\nimport {\n   ListGroup,\n   ListGroupItem,\n   ListGroupItemHeading,\n   ListGroupItemText,\n} from 'reactstrap';\nimport { NBSP, toTitleCase } from './helper'\nimport React, { Component } from 'react';\n\nimport BaseModal from './AdditionalDataModal';\nimport { connect } from 'react-redux'\n\nexport function getCollaborationsFromIDs(collaborationIDs, collaborations) {\n   let displayText = '';\n   collaborationIDs.map(collaboration => (\n      displayText += toTitleCase(collaborations[collaboration].collaborationName) + \", \"\n   ));\n   displayText = displayText.substring(0, displayText.length - 2);\n   return displayText;\n}\n\nclass Collaborations extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         showCollaborationsOverviewModal: false,\n         collaborationsOverviewModalTitle: 'User Collaborations',\n         collaborationsOverviewModalBody: [],\n      };\n   }\n\n   componentDidMount() {\n      this.setState({ collaborationsOverviewModalBody: this.buildCollaborationsOverviewModalBody() })\n      this.buildDisplayText();\n   }\n\n   buildCollaborationsOverviewModalBody = () => {\n      let modalBody = [];\n      const IDs = this.props.items;\n      IDs.map(\n         ID => (\n            modalBody.push(\n                  <ListGroupItem key={ID} >\n                     {this.showCollaborationsExtendedData(ID)}\n                  </ListGroupItem>)))\n      modalBody = <ListGroup>{modalBody}</ListGroup>\n      return modalBody;\n   }\n\n   buildDisplayText = () => {\n      let displayText = ''\n      const IDs = this.props.items;\n\n      IDs.map(ID => (\n         displayText += toTitleCase(\n            this.props.collaborations[ID].collaborationName) + \", \"));\n      displayText = displayText.substring(0, displayText.length - 2)\n      if (displayText.length > this.props.displayLength)\n         displayText = displayText.substring(0, this.props.displayLength) + \"...\"\n      if (displayText.length > 0)\n         displayText =\n            <a\n               href=\"#0\"\n               key={IDs}\n               onClick={\n                  () => this.setState(\n                     {\n                        showCollaborationsOverviewModal: !this.state.showCollaborationsOverviewModal\n                     })\n               }\n            >\n               {displayText}\n            </a>\n      else\n         displayText = \"No Collaborations\"\n      return displayText;\n   }\n\n   showCollaborationsExtendedData(id) {\n      let info = this.props.collaborations[id];\n      return (\n         <>\n            <ListGroupItemHeading>\n               {toTitleCase(info.collaborationName)}\n            </ListGroupItemHeading>\n            <ListGroupItemText>\n               {info.collaborationDescription ? <div><b>Description: </b>{NBSP}{info.collaborationDescription.split(\"\\n\").map((i, key) => {\n                  return <p key={key}>{i}</p>;\n               })}</div> : \"No Description Provided\"}\n            </ListGroupItemText>\n         </>\n      );\n   }\n\n\n   render() {\n      return (\n         <>\n            {this.buildDisplayText()}\n            <BaseModal\n               openStatus={this.state.showCollaborationsOverviewModal}\n               title={this.state.collaborationsOverviewModalTitle}\n               body={this.state.collaborationsOverviewModalBody}\n               toggle={() => this.setState(\n                  {\n                     showCollaborationsOverviewModal: !this.state.showCollaborationsOverviewModal\n                  })}\n               size='lg'\n            />\n         </>\n      )\n   }\n}\n\nconst mapStateToProps = state => ({\n   collaborations: state.collaborations.items,\n   collaborationsLoading: state.collaborations.loading,\n   collaborationsError: state.collaborations.error,\n})\n\nexport default connect(mapStateToProps)(Collaborations);","import React, { Component } from 'react';\nimport {\n   Badge,\n   ListGroupItem,\n   ListGroupItemHeading,\n   ListGroupItemText,\n   ListGroup,\n} from 'reactstrap';\n\nimport BaseModal from './AdditionalDataModal';\nimport { connect } from 'react-redux'\nimport './App.css';\n\nimport { toTitleCase, NBSP } from './helper'\n\nfunction getKeywordType(shortKeywordType) {\n   if (shortKeywordType === \"TK\") {\n      return { name: \"Topical\", color: \"primary\" }\n   }\n   if (shortKeywordType === \"AK\") {\n      return { name: \"Activity\", color: \"secondary\" }\n   }\n}\n\nfunction getKeywordSortOrder(shortKeywordSortOrder) {\n   if (shortKeywordSortOrder === \"HS\") {\n      return { name: \"High Level\", color: \"success\" }\n   }\n   if (shortKeywordSortOrder === \"MS\") {\n      return { name: \"Medium Level\", color: \"warning\" }\n   }\n   if (shortKeywordSortOrder === \"LS\") {\n      return { name: \"Low Level\", color: \"danger\" }\n   }\n}\n\nexport function getKeywordsFromIDs(keywordIDs, keywords) {\n   let displayText = '';\n   keywordIDs.map(keyword => (\n      displayText += toTitleCase(keywords[keyword].keywordName)+ \", \"\n   ));\n   displayText = displayText.substring(0, displayText.length - 2);\n   return displayText;\n}\n\nclass Keywords extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         showKeywordOverviewModal: false,\n         keywordOverviewModalTitle: 'User Keywords',\n         keywordOverviewModalBody: [],\n      };\n   }\n\n   componentDidMount() {\n      this.setState({ keywordOverviewModalBody: this.buildKeywordOverviewModalBody() })\n      this.buildDisplayText();\n   }\n\n   buildKeywordOverviewModalBody = () => {\n      let modalBody = [];\n      const keywordIDs = this.props.items;\n      keywordIDs.map(\n         keywordID => (\n            modalBody.push(\n                  <ListGroupItem key={keywordID} >\n                     {this.showKeywordExtendedData(keywordID)}\n                  </ListGroupItem>)))\n      modalBody = <ListGroup>{modalBody}</ListGroup>\n      return modalBody;\n   }\n\n   buildDisplayText = () => {\n      let displayText = ''\n      const keywordIDs = this.props.items;\n\n      keywordIDs.map(keywordID => (\n         displayText += toTitleCase(\n            this.props.keywords[keywordID].keywordName) + \", \"));\n      displayText = displayText.substring(0, displayText.length - 2)\n      if (displayText.length > this.props.displayLength)\n         displayText = displayText.substring(0, this.props.displayLength) + \"...\"\n      if (displayText.length > 0)\n         displayText =\n            <a\n               href=\"#0\"\n               key={keywordIDs}\n               onClick={\n                  () => this.setState(\n                     {\n                        showKeywordOverviewModal: !this.state.showKeywordOverviewModal\n                     })\n               }\n            >\n               {displayText}\n            </a>\n      else\n         displayText = \"No Keywords\"\n      return displayText;\n   }\n\n   showKeywordExtendedData(id) {\n      let keywordInfo = this.props.keywords[id];\n      return (\n         <>\n            <ListGroupItemHeading>\n               {toTitleCase(keywordInfo.keywordName)}\n               {NBSP}\n               <Badge\n                  color={getKeywordType(keywordInfo.keywordType).color}>\n                  {getKeywordType(keywordInfo.keywordType).name}\n               </Badge>\n               {NBSP}\n               <Badge\n                  color={getKeywordSortOrder(keywordInfo.sortOrder).color}>\n                  {getKeywordSortOrder(keywordInfo.sortOrder).name}\n               </Badge>\n            </ListGroupItemHeading>\n            <ListGroupItemText>\n               {keywordInfo.keywordDescription ? <div><b>Description: </b>{NBSP}{keywordInfo.keywordDescription.split(\"\\n\").map((i, key) => {\n                  return <p key={key}>{i}</p>;\n               })}</div> : \"No description provided\"}\n            </ListGroupItemText>\n         </>\n      );\n   }\n\n\n   render() {\n      return (\n         <>\n            {this.buildDisplayText()}\n            <BaseModal\n               openStatus={this.state.showKeywordOverviewModal}\n               title={this.state.keywordOverviewModalTitle}\n               body={this.state.keywordOverviewModalBody}\n               toggle={() => this.setState(\n                  {\n                     showKeywordOverviewModal: !this.state.showKeywordOverviewModal\n                  })}\n               size='lg'\n            />\n         </>\n      )\n   }\n}\n\nconst mapStateToProps = state => ({\n   keywords: state.keywords.items,\n   keywordsLoading: state.keywords.loading,\n   keywordError: state.keywords.error,\n})\n\nexport default connect(mapStateToProps)(Keywords);","export default class Loader {\n   static loadingItems = {};\n   static loadingStatus = false;\n\n   static addLoadItem(key, value) {\n      var pair = {[key]: value}\n      this.loadingItems = {...this.loadingItems, ...pair}\n      // this.loadingStatus = this.calculateLoadingState();\n   }\n\n   static getLoadingItems() {\n      return Object.values(this.loadingItems)\n   }\n\n   static loadingState() {\n      return this.loadingStatus;\n   }\n\n   static calculateLoadingState(loader) {\n      let openStatus = [];\n      let loadValues = loader;\n      loadValues.map(loadInfo => openStatus.push(loadInfo.condition, loadInfo.error !== null))\n      openStatus = openStatus.every(x => x === false);\n      return openStatus\n   }\n}\n","import './Modal.css';\n\nimport {\n   Alert,\n   Modal,\n   ModalBody,\n   ModalHeader,\n} from 'reactstrap';\nimport React, { Component } from 'react';\n\nexport default class LoadingModal extends Component {\n\n   /* Passed in:\n      props:\n         - title\n         - body\n    */\n\n   render() {\n      const { openStatus, size } = this.props;\n      return (\n         <Modal isOpen={openStatus} centered size={size}>\n            <ModalHeader>{this.props.title}</ModalHeader>\n            <ModalBody>\n               <Alert color=\"dark\">\n                  This might take a little while depending on network\n                  conditions.\n               </Alert>\n               {this.props.body}\n            </ModalBody>\n         </Modal>\n      );\n   }\n}","import './App.css';\n\nimport React, { Component } from 'react';\n\nimport ErrorModal from './AdditionalDataModal';\nimport LoadingModal from './LoadingModal'\nimport {\n   Spinner,\n} from 'reactstrap';\nimport { connect } from 'react-redux'\nimport { toTitleCase } from './helper'\n\nclass Loading extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         status: false,\n         errorModalOpenFlag: false,\n         errorModalTitle: '',\n         errorModalBody: '',\n         loadingItems: {},\n         loadingStatus: false,\n         render: false,\n      }\n   }\n\n   componentDidMount() {\n      setTimeout(function () { //Start the timer\n         this.setState({ render: true }) //After 1 second, set render to true\n      }.bind(this), 1000)\n   }\n\n   buildErrorMessage(error) {\n      let bodyText = []\n      try {\n         const errorJSON = Object.entries(error.response.data)\n         errorJSON.forEach((([key, value]) => {\n            bodyText.push(<span key={key}><b>{toTitleCase(key)}</b>: {value.toString()}</span>)\n         }))\n      }\n      catch {\n         bodyText.push(<span key='UDEFERR'><b>Detail</b>: Undefined Error</span>)\n      }\n      return (bodyText)\n   }\n\n   loadingText(friendlyName, condition, error) {\n      let status = <Spinner color=\"primary\" size=\"sm\" />\n      if (error !== null) {\n         status = <a href=\"#0\" key=\"ERROR\" onClick={() => this.showErrorInfo(error.toString(), this.buildErrorMessage(error))}>Error</a>\n      }\n      else if (condition === false) {\n         status = 'done'\n      }\n\n      return (condition === false && error === null) ? null : <div key={friendlyName}>Loading {friendlyName}... {status}</div>\n\n   }\n\n   showErrorInfo(title, body) {\n      this.setState({ errorModalTitle: title, errorModalBody: body, errorModalOpenFlag: !this.state.errorModalOpenFlag });\n   }\n\n   errorModalOpenToggle = () => {\n      this.setState({ errorModalOpenFlag: !this.state.errorModalOpenFlag });\n   };\n\n\n   render() {\n      const { body, status } = this.props;\n         let renderContainer = false //By default don't render anything\n         if (this.state.render) {\n         renderContainer = (<>\n            <ErrorModal\n               openStatus={this.state.errorModalOpenFlag}\n               title={this.state.errorModalTitle}\n               body={this.state.errorModalBody}\n               toggle={this.errorModalOpenToggle}\n               size={'lg'}\n            />\n            <LoadingModal\n               openStatus={!status}\n               title={<div>Loading Components</div>}\n               body={body.map(loadInfo => this.loadingText(loadInfo.friendlyName, loadInfo.condition, loadInfo.error))}\n            />\n         </>)\n         }\n\n      return (\n         renderContainer //Render the dom elements, or, when this.state == false, nothing.\n      )\n   }\n}\n\nconst mapStateToProps = state => ({\n   settings: state.settings,\n   keywords: state.keywords,\n   orgs: state.orgs,\n   collaborators: state.collaborators,\n})\n\nexport default connect(mapStateToProps)(Loading)","import React, { Component } from 'react';\nimport {\n   Button,\n   Badge,\n   ListGroupItem,\n   ListGroupItemHeading,\n   ListGroupItemText,\n   ListGroup,\n} from 'reactstrap';\n\nimport BaseModal from './AdditionalDataModal';\nimport { connect } from 'react-redux'\nimport './App.css';\n\nimport { NBSP } from './helper'\n\nfunction getOrgType(shortOrgType) {\n   if (shortOrgType === \"IO\") {\n      return { name: \"Institution\", color: \"primary\" }\n   }\n   if (shortOrgType === \"CY\") {\n      return { name: \"City\", color: \"secondary\" }\n   }\n   if (shortOrgType === \"CO\") {\n      return { name: \"County\", color: \"success\" }\n   }\n   if (shortOrgType === \"NG\") {\n      return { name: \"NGO\", color: \"warning\" }\n   }\n   if (shortOrgType === \"RA\") {\n      return { name: \"Regional Agency\", color: \"info\" }\n   }\n}\n\nexport function getOrganizationsFromIDs(organizationIDs, organizations) {\n   let displayText = '';\n   organizationIDs.map(organization => (\n      displayText += organizations[organization].orgNameUnique + \", \"\n   ));\n   displayText = displayText.substring(0, displayText.length - 2);\n   return displayText;\n}\n\nclass Organizations extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         showOrganizationOverviewModal: false,\n         organizationOverviewModalTitle: 'User Organizations',\n         organizationOverviewModalBody: [],\n\n         showOrganizationDetailModal: false,\n         organizationDetailModalTitle: 'User Organizations',\n         organizationDetailModalBody: [],\n      };\n   }\n\n   componentDidMount() {\n      this.setState({ organizationOverviewModalBody: this.buildOrganizationOverviewModalBody() })\n      // this.buildDisplayText();\n   }\n\n   buildOrganizationOverviewModalBody = () => {\n      let modalBody = [];\n      const organizationIDs = this.props.items;\n      organizationIDs.map(\n         organizationID => (\n            modalBody.push(\n               <ListGroupItem key={organizationID} >\n                  {this.showOrgExtendedData(organizationID)}\n               </ListGroupItem>)))\n      modalBody = <ListGroup>{modalBody}</ListGroup>\n      return modalBody;\n   }\n\n   buildDisplayText = () => {\n      let displayText = ''\n      const organizationIDs = this.props.items;\n\n      organizationIDs.map(organizationID => (\n         displayText += this.props.orgs[organizationID].orgName  + \", \"));\n      displayText = displayText.substring(0, displayText.length - 2)\n      if (displayText.length > this.props.displayLength)\n         displayText = displayText.substring(0, this.props.displayLength) + \"...\"\n      if (displayText.length > 0)\n         displayText =\n            <a\n               href=\"#0\"\n               key={organizationIDs}\n               onClick={\n                  () => this.setState(\n                     {\n                        showOrganizationOverviewModal: !this.state.showOrganizationOverviewModal\n                     })\n               }\n            >\n               {displayText}\n            </a>\n      else\n         displayText = \"No Organizations\"\n      return displayText;\n   }\n\n   showOrgExtendedData(orgID) {\n      let orgInfo = this.props.orgs[orgID];\n\n      return (\n         <>\n            <ListGroupItemHeading>\n               {this.props.orgs[orgID].orgNameUnique}\n               {NBSP}\n               <Badge color={getOrgType(orgInfo.orgType).color}>\n                  {getOrgType(orgInfo.orgType).name}\n               </Badge>\n            </ListGroupItemHeading>\n            <ListGroupItemText>\n               {(orgInfo.website !== null && orgInfo.website !== \"\") ? (\n                  <Button outline color=\"primary\" size=\"sm\" href={orgInfo.website} target=\"_blank\" rel=\"noopener noreferrer\">Visit Website</Button>\n               ) : \"No website provided\"}\n            </ListGroupItemText>\n         </>);\n   }\n\n   render() {\n      return (\n         <>\n            {this.buildDisplayText()}\n            <BaseModal\n               openStatus={this.state.showOrganizationOverviewModal}\n               title={this.state.organizationOverviewModalTitle}\n               body={this.state.organizationOverviewModalBody}\n               toggle={() => this.setState(\n                  {\n                     showOrganizationOverviewModal: !this.state.showOrganizationOverviewModal\n                  })}\n               size='lg'\n            />\n            <BaseModal\n               openStatus={this.state.showOrganizationDetailModal}\n               title={this.state.organizationDetailModalTitle}\n               body={this.state.organizationDetailModalBody}\n               toggle={() => this.setState(\n                  {\n                     showOrganizationDetailModal: !this.state.showOrganizationDetailModal\n                  })}\n               size='lg'\n            />\n         </>\n      )\n   }\n}\n\nconst mapStateToProps = state => ({\n   orgs: state.orgs.items,\n   orgsLoading: state.orgs.loading,\n   orgError: state.orgs.error,\n})\n\nexport default connect(mapStateToProps)(Organizations);\n","/*\n * Pagination component modified from @cornflourblue on github\n * https://github.com/cornflourblue/react-pagination-example\n *\n * MIT License\n * \n * Copyright (c) 2017 Jason Watmore\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in \n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\n\nconst propTypes = {\n   items: PropTypes.array.isRequired,\n   onChangePage: PropTypes.func.isRequired,\n   initialPage: PropTypes.number,\n   pageSize: PropTypes.number\n}\n\nconst defaultProps = {\n   initialPage: 1,\n   pageSize: 30\n}\n\nclass PaginationWrapper extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = { pager: {} };\n   }\n\n   componentDidMount() {\n      // set page if items array isn't empty\n      if (this.props.items && this.props.items.length) {\n         this.setPage(this.props.initialPage);\n      }\n   }\n\n   componentDidUpdate(prevProps, prevState) {\n      // reset page if items array has changed\n      if (this.props.items !== prevProps.items) {\n         this.setPage(this.props.initialPage);\n      }\n   }\n\n   setPage(page) {\n      var { items, pageSize } = this.props;\n      var pager = this.state.pager;\n\n      if (page < 1 || page > pager.totalPages) {\n         return;\n      }\n\n      // get new pager object for specified page\n      pager = this.getPager(items.length, page, pageSize);\n\n      // get new page of items from items array\n      var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\n\n      // update state\n      this.setState({ pager: pager });\n\n      // call change page function in parent component\n      this.props.onChangePage(pageOfItems);\n   }\n\n   getPager(totalItems, currentPage, pageSize) {\n      // default to first page\n      currentPage = currentPage || 1;\n\n      // default page size is 10\n      pageSize = pageSize || 10;\n\n      // calculate total pages\n      var totalPages = Math.ceil(totalItems / pageSize);\n\n      var startPage, endPage;\n      if (totalPages <= 10) {\n         // less than 10 total pages so show all\n         startPage = 1;\n         endPage = totalPages;\n      } else {\n         // more than 10 total pages so calculate start and end pages\n         if (currentPage <= 6) {\n            startPage = 1;\n            endPage = 10;\n         } else if (currentPage + 4 >= totalPages) {\n            startPage = totalPages - 9;\n            endPage = totalPages;\n         } else {\n            startPage = currentPage - 5;\n            endPage = currentPage + 4;\n         }\n      }\n\n      // calculate start and end item indexes\n      var startIndex = (currentPage - 1) * pageSize;\n      var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n      // create an array of pages to ng-repeat in the pager control\n      var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\n\n      // return object with all pager properties required by the view\n      return {\n         totalItems: totalItems,\n         currentPage: currentPage,\n         pageSize: pageSize,\n         totalPages: totalPages,\n         startPage: startPage,\n         endPage: endPage,\n         startIndex: startIndex,\n         endIndex: endIndex,\n         pages: pages\n      };\n   }\n\n   render() {\n      var pager = this.state.pager;\n\n      if (!pager.pages || pager.pages.length <= 1) {\n         // don't display pager if there is only 1 page\n         return null;\n      }\n\n      return (\n         <Pagination aria-label=\"pagination\">\n\n            <PaginationItem disabled={pager.currentPage === 1 ? true : false}>\n               <PaginationLink first href=\"#0\" onClick={() => this.setPage(1)}/>\n            </PaginationItem>\n\n            <PaginationItem disabled={pager.currentPage === 1 ? true : false}>\n               <PaginationLink previous href=\"#0\" onClick={() => this.setPage(pager.currentPage - 1)} />\n            </PaginationItem>\n\n            {pager.pages.map((page, index) =>\n               <PaginationItem key={index} active={pager.currentPage === page ? true : false}>\n                  <PaginationLink href=\"#0\" onClick={() => this.setPage(page)}>{page}</PaginationLink>\n               </PaginationItem>\n            )}\n\n            <PaginationItem disabled={pager.currentPage === pager.totalPages ? true : false}>\n               <PaginationLink next href=\"#0\" onClick={() => this.setPage(pager.currentPage + 1)} />\n            </PaginationItem>\n\n            <PaginationItem disabled={pager.currentPage === pager.totalPages ? true : false}>\n               <PaginationLink last href=\"#0\" onClick={() => this.setPage(pager.totalPages)} />\n            </PaginationItem>\n\n         </Pagination>\n\n      );\n   }\n}\n\nPaginationWrapper.propTypes = propTypes;\nPaginationWrapper.defaultProps = defaultProps;\nexport default PaginationWrapper;","import '../App.css';\n\nimport {\n   Alert,\n   Button,\n   ListGroup,\n   ListGroupItem,\n   ListGroupItemHeading,\n   ListGroupItemText,\n   Modal,\n   ModalBody,\n   ModalHeader\n} from 'reactstrap';\nimport React, { Component } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport { NBSP } from '../helper'\nimport { faLifeRing } from '@fortawesome/free-solid-svg-icons';\nimport { library } from '@fortawesome/fontawesome-svg-core';\n\nlibrary.add(faLifeRing);\n\nclass HowToSearchModal extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         'modal': false,\n      };\n\n   }\n\n   render() {\n\n      return (\n         <>\n            <Modal size=\"xl\" isOpen={this.state.modal} toggle={() => this.setState({ modal: !this.state.modal })}>\n               <ModalHeader toggle={() => this.setState({ modal: !this.state.modal })}><FontAwesomeIcon icon=\"life-ring\" /> Need Help?</ModalHeader>\n               <ModalBody>\n                  <Alert color=\"info\">\n                     If you're looking for NGO or government (city, regional, county)\n                     collaborators, then you're in the right place!\n                     If you want to search for university collaborators\n                     , you'll need to go{NBSP}\n                     <Link to=\"univCollaborator\">here</Link>.\n                  </Alert>\n\n                  <ListGroup>\n                     <ListGroupItem>\n                        <ListGroupItemHeading>How To Search</ListGroupItemHeading>\n                        <ListGroupItemText>\n                           <p>Not sure how to use this tool? Here are a couple of\n                           tips to get started.</p>\n                           <p>Here is a general formula for how the querys are structured:{NBSP}\n                           <em>Query = Organization AND (Activity Keywords OR \n                              Topical Keywords) AND Collaborations</em>.\n                           </p>\n                           <p>\n                              This means that your results will contain collaborators\n                              from any organization you selected that match any of\n                              the keywords (activity and topical) and each person\n                              identified with the collaborations selected.\n                           </p>\n                           <p>\n                              It's best to start broad and narrow your search\n                              results. If you are looking for a person that\n                              specializes in water, you may want to start with\n                              the keywords and omit any organization selection at\n                              the start (unless you only want someone from a\n                              specific organization). Then, select activity and\n                              topical high level keywords to get an idea of who\n                              specializes in water. At this point, if you know\n                              what types of collaborations you are looking for,\n                              go ahead and input them. Then, click {NBSP}\n                              <code>Run Query</code>. This will give you anybody\n                              who specializes in water. At this point, you can\n                              start narrowing down your parameters by adding\n                              some medium level or low level keywords to find\n                              someone more specific.\n                           </p>\n                        </ListGroupItemText>\n                     </ListGroupItem>\n                     <ListGroupItem>\n                        <ListGroupItemHeading>Organizations</ListGroupItemHeading>\n                        <ListGroupItemText>\n                           To select organizations that you can collaborate with,\n                           use the <code>Organization Selection</code> dropdown.\n                           You can select organizations and departments or, you\n                           can start typing in the field to filter organizations.\n                           To select an organization with multiple departments,\n                           you will need to select each org + department pair.\n                        </ListGroupItemText>\n                     </ListGroupItem>\n\n                     <ListGroupItem>\n                        <ListGroupItemHeading>Keywords</ListGroupItemHeading>\n                        <ListGroupItemText>\n                           Selecting keywords is very similar.\n                           The only difference is the keywords are broken up\n                           into high level, medium level, and low level.\n                           You can think of a high level keyword as <b>Fruit</b>\n                           , a medium level keyword <b>Apple</b> and a low level\n                           keyword <b>Honeycrisp</b>. This way, you can more\n                           easily narrow your search.\n                        </ListGroupItemText>\n                     </ListGroupItem>\n\n                     <ListGroupItem>\n                        <ListGroupItemHeading>Collaborations</ListGroupItemHeading>\n                        <ListGroupItemText>\n                           Selecting collaborations is similar to selecting an\n                           organization. You can select a\n                           collaboration, or type to filter the results\n                        </ListGroupItemText>\n                     </ListGroupItem>\n\n                     <ListGroupItem>\n                        <ListGroupItemHeading>There's More!</ListGroupItemHeading>\n                        <ListGroupItemText>\n                           If you want to save a query for later or share it\n                           with someone, click the <code>More Actions</code>\n                           {NBSP}dropdown, and then select{NBSP}\n                           <code>Save Query</code>{NBSP}\n                           (Note, you can only select this button if there are\n                           some parameters selected).<br />\n                           {/* If you have a code from someone else, you can use the\n                           {NBSP}<code>Paste Query</code> option to paste your\n                           qcode (query code) and the system will return the\n                           same query that was saved. */}\n                        </ListGroupItemText>\n                     </ListGroupItem>\n                  </ListGroup>\n               </ModalBody>\n            </Modal>\n            <Button color=\"info\" onClick={() => this.setState({ modal: !this.state.modal })}>Need Help?</Button>\n         </>\n      )\n   }\n\n}\n\nexport default HowToSearchModal;","import './Modal.css';\n\nimport {\n   Button,\n   Input,\n   InputGroup,\n   InputGroupAddon,\n   Modal,\n   ModalBody,\n   ModalFooter,\n   ModalHeader,\n   PopoverBody,\n   PopoverHeader,\n   UncontrolledAlert,\n   UncontrolledPopover\n} from 'reactstrap';\nimport React, { Component } from 'react';\n\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nvar base64 = require('base-64');\nvar Buffer = require('buffer/').Buffer\n\nexport default class CopyQueryToClipboard extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         copyCode: false,\n         copyURL: false,\n      }\n   }\n   /* Passed in:\n      props:\n         - title\n         - body\n    */\n\n   render() {\n      const { openStatus, toggle, size, query, endpoint } = this.props;\n      const protocol = window.location.protocol;\n      const host = window.location.host;\n      let encodedQuery = base64.encode(endpoint + \"?\" + query)\n      encodedQuery = Buffer.from(encodedQuery, 'utf8').toString('hex');\n      const URL = protocol.concat(\"//\", host, \"/save/\", encodedQuery);\n      return (\n         <Modal isOpen={openStatus} toggle={toggle} centered size={size}>\n            <ModalHeader toggle={toggle}>Copy Query to Clipboard</ModalHeader>\n            <ModalBody>\n               Saving or sharing a query is easy! You can copy the URL below to\n               your clipboard and use it to return to this same query.< br />\n               <b>Copy URL to clipboard</b>\n\n               <InputGroup>\n                  <Input disabled placeholder={URL} />\n                  <InputGroupAddon addonType=\"append\">\n\n                     <CopyToClipboard text={URL}\n                        onCopy={() => this.setState({ copyURL: true })}>\n                        <Button id=\"copyURLToClipboard\" color=\"success\">Copy to clipboard</Button>\n                     </CopyToClipboard>\n                     <UncontrolledPopover trigger=\"focus\" placement=\"right\" target=\"copyURLToClipboard\">\n                        <PopoverHeader>Copied URL to Clipboard</PopoverHeader>\n                        <PopoverBody>You can share or save this URL to return to this query later!<br /><kbd>Ctrl</kbd> + <kbd>V</kbd> can retrieve the code from your clipboard.</PopoverBody>\n                     </UncontrolledPopover>\n                  </InputGroupAddon>\n               </InputGroup>\n            </ModalBody>\n            <ModalFooter>\n               <Button color=\"primary\" onClick={toggle}>Close</Button>\n            </ModalFooter>\n         </Modal>\n      );\n   }\n}","import React, { Component } from 'react';\nimport {\n   Button, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon, Input\n} from 'reactstrap';\nimport './Modal.css';\n\n\nexport default class PasteQueryToClipboard extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         value: '',\n      }\n      this.runQuery = this.runQuery.bind(this)\n      this.handleChange = this.handleChange.bind(this)\n   }\n   /* Passed in:\n      props:\n         - title\n         - body\n    */\n\n   runQuery = () => {\n\n      let newLocation = \"save/\" + this.state.value\n      this.props.history.push(newLocation)\n   }\n\n   handleChange(event) {\n   this.setState({ value: event.target.value });\n   }\n\n   render() {\n      const { openStatus, toggle, size } = this.props;\n      return (\n         <Modal isOpen={openStatus} toggle={toggle} centered size={size}>\n            <ModalHeader toggle={toggle}>Paste Query from Clipboard</ModalHeader>\n            <ModalBody>\n               If you have a code, paste it below to convert it into a query.< br />\n               <b>Paste Code From Clipboard</b>\n\n               <InputGroup>\n                  <Input value={this.state.value} onChange={this.handleChange} autoFocus=\"true\"/>\n                  <InputGroupAddon addonType=\"append\">\n                     <Button color=\"success\" onClick={() => this.runQuery()}>Run Query</Button>\n                  </InputGroupAddon>\n               </InputGroup>\n            </ModalBody>\n            <ModalFooter>\n               <Button color=\"primary\" onClick={toggle}>Close</Button>\n            </ModalFooter>\n         </Modal>\n      );\n   }\n}","import * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\n\n\nconst fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\nconst fileExtension = '.xlsx';\n\nexport default (csvData, fileName) => {\n   const ws = XLSX.utils.json_to_sheet(csvData);\n   const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n   const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n   const data = new Blob([excelBuffer], { type: fileType });\n   FileSaver.saveAs(data, fileName + fileExtension);\n};","import './App.css';\n\nimport React, { Component } from 'react';\n\nimport {\n   Badge,\n} from 'reactstrap';\nimport { NBSP } from './helper'\nimport Obfuscate from 'react-obfuscate'\nimport UserDetailModal from './AdditionalDataModal';\n\nexport function getUserTypes(shortUserType) {\n   switch (shortUserType) {\n      case \"US\":\n         return { name: \"University Faculty/Staff\", color: \"primary\" };\n      case \"CS\":\n         return { name: \"City Staff\", color: \"secondary\" };\n      case \"CO\":\n         return { name: \"County Staff\", color: \"success\" }\n      case \"NS\":\n         return { name: \"NGO Staff\", color: \"danger\" }\n      case \"RS\":\n         return { name: \"Regional Staff\", color: \"warning\" }\n      default:\n         return { name: \"Error\", color: \"dark\" }\n   }\n}\n\nclass UserDetail extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         showUserDetails: false,\n         userDetailModalTitle: '',\n         userDetailModalBody: '',\n      }\n   }\n\n   showUserDetailModal = () => {\n      let user = this.props.user\n      let title = <div>About <b>{user.firstName} {user.lastName}</b></div>;\n      let body = <div>\n         <Badge color={getUserTypes(user.userType).color}>{getUserTypes(user.userType).name}</Badge><br />\n         <b>Email: </b><Obfuscate email={user.emailAddress} /><br />\n         {user.website ? <div><b>Website: </b>{NBSP}<a href={user.website} target=\"_blank\" rel=\"noopener noreferrer\">{user.website}</a></div> : \"\"}\n         {user.jobTitle ? <div><b>Job Title: </b>{NBSP}{user.jobTitle}</div> : \"\"}\n         {user.description ? <div><b>About: </b>{NBSP}{user.description.split(\"\\n\").map((i, key) => {\n            return <div key={key}>{i}< br /></div>;\n         })}</div> : \"\"}\n      </div>\n      this.setState({userDetailModalTitle: title, userDetailModalBody: body, showUserDetails: true})\n   }\n\n   render() {\n      return (\n         <>\n            <a href=\"#0\" onClick={() => this.showUserDetailModal()}>About {this.props.user.firstName} {this.props.user.lastName}</a>\n            <UserDetailModal\n               openStatus={this.state.showUserDetails}\n               title={this.state.userDetailModalTitle}\n               body={this.state.userDetailModalBody}\n               toggle={() => this.setState({ showUserDetails: !this.state.showUserDetails})}\n               size={'lg'}\n            />\n         </>\n      )\n   }\n}\n\nexport default UserDetail","import '../Modal.css';\n\nimport {\n   Button,\n   Col,\n   Dropdown,\n   DropdownItem,\n   DropdownMenu,\n   DropdownToggle,\n   Form,\n   FormGroup,\n   Label,\n   Row\n} from 'reactstrap';\nimport { NBSP, isEmptyOrg as isEmpty } from '../helper';\nimport React, { Component } from 'react';\n\nimport CopyToClipBoardModal from '../copyQueryToClipboard'\nimport PasteFromCipboardModal from '../PasteQueryFromKeyboard'\nimport Select from 'react-select'\nimport { buildQueryString } from './searchFor4CCollaborator'\nimport { connect } from 'react-redux'\nimport { withRouter } from \"react-router\";\nimport ExportData from '../Export'\nimport { getKeywordsFromIDs } from '../Keywords'\nimport { getCollaborationsFromIDs } from '../Collaborations'\nimport { getOrganizationsFromIDs } from '../Organizations'\nimport { getUserTypes } from '../User'\n\nclass SearchFor4CCollaboratorForm extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         queryData: this.props.selectedQuery,\n         validate: {\n            emailState: '',\n         },\n         selectedOption: null,\n         modal: false,\n         dropdownOpen: false,\n\n         copyToClipBoardToggle: false,\n         pasteFromClipBoardToggle: false,\n      }\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.exportData = this.exportData.bind(this);\n      this.orgOptions = this.getOrgTypes();\n      this.aKeywords = this.getKeywordTypes('AK');\n      this.tKeywords = this.getKeywordTypes('TK');\n      this.collaborations = this.getCollaborationsTypes();;\n   }\n\n   getOrgTypes = () => {\n      const orgTypes = [\"CY\", \"CO\", \"NG\", \"RA\"]\n      let orgs = this.props.orgs.items.filter(function (org) { return orgTypes.includes(org.orgType) });\n      return orgs.map(org => ({ label: org.orgNameUnique, value: org.id }));\n   }\n\n   getCollaborationsTypes = () => {\n      return this.props.collaborations.items.map(collaboration => ({ label: collaboration.collaborationName, value: collaboration.id }));\n   }\n\n   getKeywordTypes = (keywordType) => {\n      const keywordsFiltered = this.props.keywords.items.filter(function (keyword) { return keyword.keywordType === keywordType })\n      const keywordLow = keywordsFiltered.filter(function (keyword) { return keyword.sortOrder === \"LS\" });\n      const keywordMedium = keywordsFiltered.filter(function (keyword) { return keyword.sortOrder === \"MS\" });\n      const keywordHigh = keywordsFiltered.filter(function (keyword) { return keyword.sortOrder === \"HS\" });\n      let keywordLowNormalized = keywordLow.map(keyword => ({\n         label: keyword.keywordName,\n         value: keyword.id\n      }));\n      let keywordMediumNormalized = keywordMedium.map(keyword => ({\n         label: keyword.keywordName,\n         value: keyword.id\n      }));\n      let keywordHighNormalized = keywordHigh.map(keyword => ({\n         label: keyword.keywordName,\n         value: keyword.id\n      }));\n      let keywordOptionData =\n         [\n            {\n               label: 'High Level Keywords',\n               options: keywordHighNormalized,\n            },\n            {\n               label: 'Medium Level Keywords',\n               options: keywordMediumNormalized,\n            },\n            {\n               label: 'Low Level Keywords',\n               options: keywordLowNormalized,\n            },\n         ];\n      return keywordOptionData;\n   }\n\n   handleChange = (e) => {\n      let { name, value } = e.target;\n      if (e.target.type === \"checkbox\") {\n         value = e.target.checked;\n      }\n      const queryData = { ...this.state.queryData, [name]: value === null ? [] : value };\n      this.setState({ queryData });\n   };\n\n   handleSubmit(syntheticEvent) {\n      syntheticEvent.preventDefault();\n      this.props.submitHandler(this.state.queryData);\n\n   }\n\n   exportData() {\n      const users = this.props.collaborators.items;\n      const exportUsers = users.map(user => ({\n         'First Name': user.firstName,\n         'Last Name': user.lastName,\n         'Email Address': user.emailAddress,\n         'Website': user.website,\n         'Organizations': getOrganizationsFromIDs(user.organization, this.props.orgs.items),\n         'User Type': getUserTypes(user.userType).name,\n         'Job Title': user.jobTitle,\n         'Description': user.description,\n         'Keywords': getKeywordsFromIDs(user.keywords, this.props.keywords.items),\n         'Collaborations': getCollaborationsFromIDs(user.collaborations, this.props.collaborations.items),\n      }));\n      ExportData(exportUsers, 'user_export');\n   }\n\n   render() {\n\n      return (\n         <Form onSubmit={this.handleSubmit}>\n            <Row>\n               <Col>\n                  <FormGroup>\n                     <Label>Organization Selection</Label>\n                     <Select\n                        ref=\"orgSelection\"\n                        name=\"orgSelection\"\n\n                        value={this.state.queryData.selectedOrganization}\n                        options={this.orgOptions}\n                        onChange={(val) => this.handleChange({ target: { name: 'selectedOrganization', value: val } })}\n                        isMulti={true}\n                        autoBlur={false}\n                        closeOnSelect={false}\n                        closeMenuOnSelect={false}\n                     />\n                  </FormGroup>\n               </Col>\n            </Row>\n\n            <Row>\n               <Col>\n                  <FormGroup>\n                     <Label>Activity Keywords Selection</Label>\n                     <Select\n                        ref=\"activityKeywords\"\n                        value={this.state.queryData.activityKeywords}\n                        options={this.aKeywords}\n                        onChange={(val) => this.handleChange({ target: { name: 'activityKeywords', value: val } })}\n                        isMulti={true}\n                        autoBlur={false}\n                        closeOnSelect={false}\n                        closeMenuOnSelect={false}\n                     />\n                  </FormGroup>\n               </Col>\n            </Row>\n\n            <Row>\n               <Col>\n                  <FormGroup>\n                     <Label>Topical Keywords Selection</Label>\n                     <Select\n                        ref=\"topicalKeywords\"\n                        value={this.state.queryData.topicalKeywords}\n                        options={this.tKeywords}\n                        onChange={(val) => this.handleChange({ target: { name: 'topicalKeywords', value: val } })}\n                        isMulti={true}\n                        autoBlur={false}\n                        closeOnSelect={false}\n                        closeMenuOnSelect={false}\n                     />\n                  </FormGroup>\n               </Col>\n            </Row>\n\n            <Row>\n               <Col>\n                  <FormGroup>\n                     <Label>Collaborations Selection</Label>\n                     <Select\n                        ref=\"collaborations\"\n                        value={this.state.queryData.collaborations}\n                        options={this.collaborations}\n                        onChange={(val) => this.handleChange({ target: { name: 'collaborations', value: val } })}\n                        isMulti={true}\n                        autoBlur={false}\n                        closeOnSelect={false}\n                        closeMenuOnSelect={false}\n                     />\n                     {/* <FormText>This field is optional, you can leave it blank to select all collaborations.</FormText> */}\n                  </FormGroup>\n               </Col>\n            </Row>\n\n            <Row noGutters>\n               <div>\n                  <div id=\"runQueryButton\" style={{ display: 'inline-block' }}>\n                     <Button color=\"success\"><span>Run Query</span></Button>\n                  </div>\n               </div>\n               {NBSP}\n               <div>\n                  <Dropdown isOpen={this.state.dropdownOpen} toggle={() => this.setState(prevState => ({ dropdownOpen: !prevState.dropdownOpen }))}>\n                     <DropdownToggle caret>\n                        More Actions\n                        </DropdownToggle>\n                     <DropdownMenu>\n                        <DropdownItem disabled={this.props.collaborators.items.length === 0} onClick={this.exportData}>Export Search</DropdownItem>\n                        <DropdownItem divider />\n                        <DropdownItem disabled={isEmpty(this.state.queryData)}\n                           onClick={() =>\n                              this.setState(\n                                 {\n                                    copyToClipBoardToggle:\n                                       !this.state.copyToClipBoardToggle\n                                 })}\n                        ><span>{isEmpty(this.state.queryData) ?\n                           'Save Query (Create a query to enable)' :\n                           'Save Query'}</span></DropdownItem>\n                     </DropdownMenu>\n                  </Dropdown>\n                  <CopyToClipBoardModal\n                     openStatus={this.state.copyToClipBoardToggle}\n                     query={buildQueryString(this.state.queryData)}\n                     endpoint=\"4CCollaborator\"\n                     toggle={() => this.setState(\n                        {\n                           copyToClipBoardToggle: !this.state.copyToClipBoardToggle\n                        })}\n                     size='lg'\n                  />\n                  <PasteFromCipboardModal\n                     openStatus={this.state.pasteFromClipBoardToggle}\n                     endpoint=\"4CCollaborator\"\n                     history={this.props.history}\n                     toggle={() => this.setState(\n                        {\n                           pasteFromClipBoardToggle: !this.state.pasteFromClipBoardToggle\n                        })}\n                     size='lg'\n                  />\n\n               </div>\n            </Row>\n         </Form>\n      );\n   }\n}\n\n\nconst mapStateToProps = state => ({\n   nav: state.nav,\n   orgs: state.orgs,\n   keywords: state.keywords,\n   collaborations: state.collaborations,\n   collaborators: state.C4Collaborators,\n})\n\nSearchFor4CCollaboratorForm = withRouter(SearchFor4CCollaboratorForm);\n\nexport default connect(mapStateToProps)(SearchFor4CCollaboratorForm);","import '../App.css';\n\nimport {\n   Col,\n   Container,\n   Jumbotron,\n   Row,\n} from 'reactstrap';\nimport React, { Component } from 'react';\nimport { fetch4CMembers, setQueryStatement, setURL } from '../actions/searchFor4CMemberActions'\n\nimport HowToSearchModal from './HowToSearchModal'\nimport SearchForCollaboratorForm from './searchFor4CCollaboratorForm';\nimport Title from '../head'\nimport { connect } from 'react-redux'\nimport { isEmptyOrg as isEmpty } from '../helper'\nimport { withRouter } from \"react-router\";\n\nconst queryString = require('query-string');\n\n\nexport function buildURL(item) {\n   let org = item.selectedOrganization;\n   let activityKeywords = item.activityKeywords;\n   let topicalKeywords = item.topicalKeywords;\n   let collaborations = item.collaborations;\n   var url = \"/api/v1/users/?format=json\";\n   if (org) {\n      for (let i = 0; i < org.length; i++) {\n         url += '&organization=' + org[i].value;\n      }\n   }\n   if (activityKeywords) {\n      for (let i = 0; i < activityKeywords.length; i++) {\n         url += '&keywords=' + activityKeywords[i].value;\n      }\n   }\n   if (topicalKeywords) {\n      for (let i = 0; i < topicalKeywords.length; i++) {\n         url += '&keywords=' + topicalKeywords[i].value;\n      }\n   }\n   if (collaborations) {\n      for (let i = 0; i < collaborations.length; i++) {\n         url += '&collaborations=' + collaborations[i].value;\n      }\n   }\n   return url;\n\n}\n\nexport function buildQueryString(item) {\n   let org = item.selectedOrganization;\n   let activityKeywords = item.activityKeywords;\n   let topicalKeywords = item.topicalKeywords;\n   let collaborations = item.collaborations;\n   var params = \"\"\n   if (org) {\n      for (let i = 0; i < org.length; i++) {\n         params += 'org=' + org[i].value + '&';\n      }\n   }\n   if (activityKeywords) {\n      for (let i = 0; i < activityKeywords.length; i++) {\n         params += 'keyA=' + activityKeywords[i].value + '&';\n      }\n   }\n   if (topicalKeywords) {\n      for (let i = 0; i < topicalKeywords.length; i++) {\n         params += 'keyT=' + topicalKeywords[i].value + '&';\n      }\n   }\n   if (collaborations) {\n      for (let i = 0; i < collaborations.length; i++) {\n         params += 'clb=' + collaborations[i].value + '&';\n      }\n   }\n   params = params.substring(0, params.length - 1)\n   return params;\n}\n\nclass SearchForCollaborator extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         'selectedQueryStatements': {\n            activityKeywords: [],\n            topicalKeywords: [],\n            collaborations: [],\n            selectedOrganization: [],\n         },\n         readParams : false,\n         initialLoad: false\n      };\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.readParams = this.readParams.bind(this);\n   }\n\n\n   componentDidMount() {\n      if (isEmpty(this.props.collaborators.selectedQueryStatements)) {\n         this.readParams()\n      }\n      else {\n         this.props.fetch4CMembers(buildURL(this.props.collaborators.selectedQueryStatements));\n         this.props.history.push(`?${buildQueryString(this.props.collaborators.selectedQueryStatements)}`);\n         this.setState({ readParams: true })\n      }\n      // this.props.fetch4CMembers(buildURL(this.props.collaborators.selectedQueryStatements));\n      // this.props.history.push(`?${buildQueryString(this.props.collaborators.selectedQueryStatements)}`);\n      // this.setState({ readParams: true })\n   }\n\n   readParams() {\n      let orgsA = [];\n      let aKey = [];\n      let tKey = [];\n      let cKey = [];\n      const parsed = queryString.parse(this.props.location.search);\n      if (parsed.keyA) {\n         let keyA = parsed.keyA;\n         if (!(Array.isArray(parsed.keyA))) {\n            keyA = [parsed.keyA]\n         }\n         keyA.map(keyID => aKey.push({ label: this.props.keywords.items[keyID].keywordName, value: keyID }))\n      }\n      if (parsed.keyT) {\n         let keyT = parsed.keyT;\n         if (!(Array.isArray(parsed.keyT))) {\n            keyT = [parsed.keyT]\n         }\n         keyT.map(keyID => tKey.push({ label: this.props.keywords.items[keyID].keywordName, value: keyID }))\n      }\n      if (parsed.clb) {\n         let clb = parsed.clb;\n         if (!(Array.isArray(parsed.clb))) {\n            clb = [parsed.clb]\n         }\n         clb.map(clbID => cKey.push({ label: this.props.collaborations.items[clbID].collaborationName, value: clbID }))\n      }\n      if (parsed.org) {\n         let orgL = parsed.org;\n         if (!(Array.isArray(orgL))) {\n            orgL = [parsed.org]\n         }\n         orgL.map(orgID => orgsA.push({ label: this.props.orgs.items[orgID].orgNameUnique, value: orgID }))\n      }\n      let selectedQueryStatements = {\n         activityKeywords: aKey,\n         topicalKeywords: tKey,\n         collaborations: cKey,\n         selectedOrganization: orgsA\n      }\n      this.props.setQueryStatement(selectedQueryStatements)\n      this.props.fetch4CMembers(buildURL(selectedQueryStatements));\n      this.setState({readParams: true})\n   }\n\n   handleSubmit = (item) => {\n      if (this.props.collaborators.selectedQueryStatements === item) {\n         return\n      }\n      this.props.setQueryStatement(item);\n      this.props.history.push(`?${buildQueryString(item)}`);\n      this.props.fetch4CMembers(buildURL(item));\n   }\n\n   render() {\n      return (\n         <>\n            <Title name=\"Search for 4C Collaborator\" />\n            <Jumbotron fluid>\n               <Container fluid>\n                  <Row>\n                  <Col sm={{ size: 6, order: 2, offset: 1 }}>\n                     <h1 className=\"display-3\">Looking for a 4C Collaborator?</h1>\n                     <p className=\"lead\">Use the form below to query potential collaborators.</p>\n                     <p className=\"text-muted\">All fields are optional. Leave blank to select all options in that category.< br />\n                     <b>The level indicators only indicate scope, not priority or importance.</b></p>\n                     <HowToSearchModal />\n                     <hr className=\"my-2\" />\n                     {this.state.readParams? \n                     <SearchForCollaboratorForm \n                        selectedQuery={this.props.collaborators.selectedQueryStatements}\n                        submitHandler={this.handleSubmit}\n                        history={this.props.history}/>: null}\n                        </Col>\n                        </Row>\n               </Container>\n            </Jumbotron>\n         </>\n      )\n   }\n}\n\nconst mapStateToProps = state => ({\n   nav: state.nav,\n   orgs: state.orgs,\n   keywords: state.keywords,\n   collaborations: state.collaborations,\n   collaborators: state.C4Collaborators,\n})\n\nconst mapDispatchToProps = {\n   fetch4CMembers,\n   setURL,\n   setQueryStatement\n};\n\nSearchForCollaborator = withRouter(SearchForCollaborator);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForCollaborator);","\nimport axios from \"axios\";\n\nexport const Actions = {\n   FETCH_COLLABORATIONS_BEGIN: 'FETCH_COLLABORATIONS_BEGIN',\n   FETCH_COLLABORATIONS_SUCCESS: 'FETCH_COLLABORATIONS_SUCCESS',\n   FETCH_COLLABORATIONS_FAILURE: 'FETCH_COLLABORATIONS_FAILURE'\n}\n\nexport const fetchCollaborationsBegin = () => ({\n   type: Actions.FETCH_COLLABORATIONS_BEGIN\n});\n\nexport const fetchCollaborationsSuccess = (collaborations) => ({\n   type: Actions.FETCH_COLLABORATIONS_SUCCESS,\n   payload: { collaborations }\n})\n\nexport const fetchCollaborationsFailure = (error) => ({\n   type: Actions.FETCH_COLLABORATIONS_FAILURE,\n   payload: { error }\n})\n\nexport function fetchCollaborations() {\n   let collaborations = [];\n   return dispatch => {\n      dispatch(fetchCollaborationsBegin());\n      return axios.get('api/v1/collaborations/?format=json')\n         .then(response => {\n            response.data.map(collaboration => {\n               collaborations[collaboration.id] = collaboration;\n               return collaboration;\n            });\n            dispatch(fetchCollaborationsSuccess(collaborations));\n         })\n         .catch(error => dispatch(fetchCollaborationsFailure(error))\n         );\n   }\n}","\nimport axios from \"axios\";\n\nexport const Actions = {\n   FETCH_KEYWORDS_BEGIN: 'FETCH_KEYWORDS_BEGIN',\n   FETCH_KEYWORDS_SUCCESS: 'FETCH_KEYWORDS_SUCCESS',\n   FETCH_KEYWORDS_FAILURE: 'FETCH_KEYWORDS_FAILURE'\n}\n\nexport const fetchKeywordsBegin = () => ({\n   type: Actions.FETCH_KEYWORDS_BEGIN\n});\n\nexport const fetchKeywordsSuccess = (keywords) => ({\n   type: Actions.FETCH_KEYWORDS_SUCCESS,\n   payload: { keywords }\n})\n\nexport const fetchKeywordsFailure = (error) => ({\n   type: Actions.FETCH_KEYWORDS_FAILURE,\n   payload: { error }\n})\n\nexport function fetchKeywords() {\n   let keywords = [];\n   return dispatch => {\n      dispatch(fetchKeywordsBegin());\n      return axios.get('api/v1/keywords/?format=json')\n         .then(response => {\n            response.data.map(keyword => {\n               keywords[keyword.id] = keyword;\n               return keyword;\n            });\n            dispatch(fetchKeywordsSuccess(keywords));\n         })\n         .catch(error => dispatch(fetchKeywordsFailure(error))\n      );\n   }\n}","\nimport axios from \"axios\";\n\nexport const Actions = {\n   FETCH_ORGANIZATIONS_BEGIN: 'FETCH_ORGANIZATIONS_BEGIN',\n   FETCH_ORGANIZATIONS_SUCCESS: 'FETCH_ORGANIZATIONS_SUCCESS',\n   FETCH_ORGANIZATIONS_FAILURE: 'FETCH_ORGANIZATIONS_FAILURE'\n}\n\nexport const fetchOrganizationsBegin = () => ({\n   type: Actions.FETCH_ORGANIZATIONS_BEGIN\n});\n\nexport const fetchOrganizationsSuccess = (organizations) => ({\n   type: Actions.FETCH_ORGANIZATIONS_SUCCESS,\n   payload: { organizations }\n})\n\nexport const fetchOrganizationsFailure = (error) => ({\n   type: Actions.FETCH_ORGANIZATIONS_FAILURE,\n   payload: { error }\n})\n\nexport function fetchOrganizations() {\n   let organizations = [];\n   return dispatch => {\n      dispatch(fetchOrganizationsBegin());\n      return axios.get('api/v1/orgs/?format=json')\n         .then(response => {\n            response.data.map(organization => {\n               organizations[organization.id] = organization;\n               return organization;\n            });\n            dispatch(fetchOrganizationsSuccess(organizations));\n         })\n         .catch(error => dispatch(fetchOrganizationsFailure(error))\n         );\n   }\n}","import '../App.css';\nimport '../table.css'\n\nimport {\n   Alert,\n   Container,\n   Spinner,\n   Table,\n   Toast,\n   ToastBody,\n   ToastHeader\n} from 'reactstrap';\nimport { Element, scroller } from 'react-scroll';\nimport React, { Component } from 'react';\n\nimport Collaborations from '../Collaborations'\nimport Keyword from '../Keywords'\nimport Loader from '../loader';\nimport Loading from '../Loading'\nimport Obfuscate from 'react-obfuscate'\nimport Organizations from '../Organizations'\nimport PaginationWrapper from '../Pagination'\nimport SearchForCollaborator from './searchFor4CCollaborator'\nimport UserDetail from '../User'\nimport { connect } from 'react-redux'\nimport { fetchCollaborations } from '../actions/collaborationsActions'\nimport { fetchKeywords } from '../actions/keywordActions'\nimport { fetchOrganizations } from '../actions/organizationActions'\nimport { toggleToast } from '../actions/searchFor4CMemberActions'\n\nclass TableView extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         pageItems: [],\n         pageSize: 30,\n      };\n      this.onChangePage = this.onChangePage.bind(this);\n      this.scrollToTable = this.scrollToTable.bind(this);\n   }\n\n   componentDidMount() {\n      this.props.fetchKeywords();\n      this.props.fetchOrganizations();\n      this.props.fetchCollaborations();\n   }\n\n   onChangePage(pageOfItems) {\n      this.setState({ pageItems: pageOfItems })\n   }\n\n   toggleToastInter = () => this.props.toggleToast();\n\n   scrollToTable() {\n      scroller.scrollTo('resultsTable', {\n         duration: 500,\n         smooth: true,\n      });\n      this.props.toggleToast();\n   }\n\n   renderDisplayUserItems = () => {\n      const items = this.state.pageItems;\n      let renderItems = \"\"\n      renderItems = items.map(item => (\n         <tr key={item.id}>\n            <th scope=\"row\">{item.firstName} {item.lastName}</th>\n            <td>{!this.props.orgsLoading || this.props.orgs === [] ? <Organizations items={item.organization} displayLength={20} /> : <Spinner color=\"primary\" />}</td>\n            <td><Obfuscate email={item.emailAddress} /></td>\n            <td>{!this.props.keywordsLoading || this.props.keywords === [] ? <Keyword items={item.keywords} displayLength={25} /> : <Spinner color=\"primary\" />}</td>\n            <td>{!this.props.collaborationsLoading || this.props.collaborations === [] ? <Collaborations items={item.collaborations} displayLength={25} /> : <Spinner color=\"primary\" />}</td>\n            <td><UserDetail user={item} /></td>\n         </tr>\n      ));\n      return renderItems;\n   };\n\n   render() {\n      let loader = [\n         { friendlyName: 'Keywords', condition: this.props.keywordsLoading, error: this.props.keywordError },\n         { friendlyName: 'Organizations', condition: this.props.orgsLoading, error: this.props.orgError },\n         { friendlyName: 'Collaborations', condition: this.props.collaborationsLoading, error: this.props.collaborationsError },\n         { friendlyName: 'Organization Collaborators', condition: this.props.C4CollaboratorsLoading, error: this.props.C4CollaboratorsError },\n      ]\n      let loadStatus = Loader.calculateLoadingState(loader);\n      return (\n         <>\n            {this.props.C4Collaborators.length > 0 ?\n            <div style={{position: \"relative\", zIndex: \"1000\"}}>\n               <Toast isOpen={this.props.toastOpen} style={{position: \"fixed\", top: \"50px\", right: \"20px\"}}>\n                  <ToastHeader toggle={this.toggleToastInter} icon=\"success\">Results Loaded</ToastHeader>\n                  <ToastBody>\n                     <a href=\"#0\" onClick={this.scrollToTable}>\n                           Click here to scroll to results.\n                     </a>\n               </ToastBody>\n               </Toast>\n            </div>:null}\n            <Loading body={loader} status={loadStatus}/>\n            {(!this.props.keywordsLoading || this.props.keywords === []) && (!this.props.orgsLoading || this.props.orgs === []) && (!this.props.collaborationsLoading || this.props.collaborations === []) ? <SearchForCollaborator /> : null}\n            <Container fluid>\n               {this.props.C4Collaborators.length === 0 ?\n                  <Alert color=\"info\">\n                     <h4 className=\"alert-heading\">No Results</h4>\n                     <p>\n                        Hmm, it looks like there are no results with your\n                        current query. Try a different combination.\n                  </p>\n                  </Alert> :\n                  <>\n                     <div className=\"clearfix\">\n                        <p className=\"text-muted float-right\">Your query returned\n                        exactly {this.props.C4Collaborators.length} results.\n                     </p>\n                     </div>\n                     <Element name=\"resultsTable\">\n                     <Table hover responsive className=\"table-curved\">\n                        <thead className=\"thead-light\">\n                           <tr>\n                              <th>Name</th>\n                              <th>Organization(s)</th>\n                              <th>Email Address</th>\n                              <th>Keyword(s)</th>\n                              <th>Collaboration(s)</th>\n                              <th>More Information</th>\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {this.renderDisplayUserItems()}\n                        </tbody>\n                     </Table>\n                     </Element>\n                     <div className=\"centerd-pagination\">\n                        <PaginationWrapper pageSize={this.state.pageSize} items={this.props.C4Collaborators} onChangePage={this.onChangePage} />\n                     </div>\n                  </>\n               }\n            </Container>\n         </>\n      );\n   }\n}\n\nconst mapStateToProps = state => ({\n   keywords: state.keywords.items,\n   keywordsLoading: state.keywords.loading,\n   keywordError: state.keywords.error,\n\n   orgs: state.orgs.items,\n   orgsLoading: state.orgs.loading,\n   orgError: state.orgs.error,\n\n   C4Collaborators: state.C4Collaborators.items,\n   C4CollaboratorsLoading: state.C4Collaborators.loading,\n   C4CollaboratorsError: state.C4Collaborators.error,\n   toastOpen: state.C4Collaborators.showToast,\n\n   collaborations: state.collaborations.items,\n   collaborationsLoading: state.collaborations.loading,\n   collaborationsError: state.collaborations.error,\n})\n\nconst mapDispatchToProps = {\n   fetchKeywords,\n   fetchOrganizations,\n   fetchCollaborations,\n   toggleToast,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableView);","import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\n\nexport function getDepartmentsFromIDs(organizationIDs, organizations) {\n    let displayText = '';\n    organizationIDs.map(organization => (\n        displayText += organizations[organization].department + \", \"\n    ));\n    displayText = displayText.substring(0, displayText.length - 2);\n    return displayText;\n}\n\n\nclass Department extends React.Component {\n\n    buildDisplayText = () => {\n        let displayText = ''\n        const organizationIDs = this.props.items;\n        organizationIDs.map(organizationID => (\n            displayText += this.props.orgs[organizationID].department + \", \"));\n        displayText = displayText.substring(0, displayText.length - 2)\n        if (displayText.length > this.props.displayLength)\n            displayText = displayText.substring(0, this.props.displayLength) + \"...\"\n        if (displayText.length === 0 || displayText === 'null')\n            displayText = \"N/A\"\n        return displayText;\n    }\n\n    render() {\n        return (\n            <>\n                {this.buildDisplayText()}\n            </>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    orgs: state.orgs.items,\n    orgsLoading: state.orgs.loading,\n    orgError: state.orgs.error,\n})\n\nexport default connect(mapStateToProps)(Department);\n","import axios from \"axios\";\n\nexport const CollabActions = {\n   FETCH_COLLABORATORS_BEGIN: 'FETCH_COLLABORATORS_BEGIN',\n   FETCH_COLLABORATORS_SUCCESS: 'FETCH_COLLABORATORS_SUCCESS',\n   FETCH_COLLABORATORS_FAILURE: 'FETCH_COLLABORATORS_FAILURE',\n   SET_QUERY_STATEMENT: 'SET_QUERY_STATEMENT',\n   SET_URL: 'SET_URL',\n   TOGGLE_TOAST: 'TOGGLE_TOAST',\n}\n\nexport const fetchCollaboratorsBegin = () => ({\n   type: CollabActions.FETCH_COLLABORATORS_BEGIN\n});\n\nexport const fetchCollaboratorsSuccess = (collaborators) => ({\n   type: CollabActions.FETCH_COLLABORATORS_SUCCESS,\n   payload: { collaborators }\n})\n\nexport const fetchCollaboratorsFailure = (error) => ({\n   type: CollabActions.FETCH_COLLABORATORS_FAILURE,\n   payload: { error }\n})\n\nexport const setURL = (URL) => ({\n   type: CollabActions.SET_URL,\n   payload: { URL }\n})\n\nexport const setQueryStatement = (query) => ({\n   type: CollabActions.SET_QUERY_STATEMENT,\n   payload: { query }\n})\n\nexport const toggleToast = () => ({\n   type: CollabActions.TOGGLE_TOAST\n})\n\nexport const fetchCollaborators = (url) => {\n   return dispatch => {\n      dispatch(fetchCollaboratorsBegin());\n      axios.get(url)\n         .then (res => {dispatch(fetchCollaboratorsSuccess(res.data));})\n         .catch(err => { dispatch(fetchCollaboratorsFailure(err));});\n   }\n}","import '../App.css';\n\nimport {\n   Alert,\n   Button,\n   ListGroup,\n   ListGroupItem,\n   ListGroupItemHeading,\n   ListGroupItemText,\n   Modal,\n   ModalBody,\n   ModalHeader\n} from 'reactstrap';\nimport React, { Component } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport { NBSP } from '../helper'\nimport { faLifeRing } from '@fortawesome/free-solid-svg-icons';\nimport { library } from '@fortawesome/fontawesome-svg-core';\n\nlibrary.add(faLifeRing);\n\nclass HowToSearchModal extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         'modal': false,\n      };\n\n   }\n\n   render() {\n\n      return (\n         <>\n            <Modal size=\"xl\" isOpen={this.state.modal} toggle={() => this.setState({ modal: !this.state.modal })}>\n               <ModalHeader toggle={() => this.setState({ modal: !this.state.modal })}><FontAwesomeIcon icon=\"life-ring\" /> Need Help?</ModalHeader>\n               <ModalBody>\n                  <Alert color=\"info\">\n                     If you're looking for NGO or government (city, regional, county)\n                     collaborators, then you're in the right place!\n                     If you want to search for university collaborators\n                     , you'll need to go{NBSP}\n                     <Link to=\"univCollaborator\">here</Link>.\n                  </Alert>\n\n                  <ListGroup>\n                     <ListGroupItem>\n                        <ListGroupItemHeading>How To Search</ListGroupItemHeading>\n                        <ListGroupItemText>\n                           <p>Not sure how to use this tool? Here are a couple of\n                           tips to get started.</p>\n                           <p>Here is a general formula for how the querys are structured:{NBSP}\n                           <em>Query = Organization AND (Activity Keywords OR \n                              Topical Keywords) AND Collaborations</em>.\n                           </p>\n                           <p>\n                              This means that your results will contain collaborators\n                              from any organization you selected that match any of\n                              the keywords (activity and topical) and each person\n                              identified with the collaborations selected.\n                           </p>\n                           <p>\n                              It's best to start broad and narrow your search\n                              results. If you are looking for a person that\n                              specializes in water, you may want to start with\n                              the keywords and omit any organization selection at\n                              the start (unless you only want someone from a\n                              specific organization). Then, select activity and\n                              topical high level keywords to get an idea of who\n                              specializes in water. At this point, if you know\n                              what types of collaborations you are looking for,\n                              go ahead and input them. Then, click {NBSP}\n                              <code>Run Query</code>. This will give you anybody\n                              who specializes in water. At this point, you can\n                              start narrowing down your parameters by adding\n                              some medium level or low level keywords to find\n                              someone more specific.\n                           </p>\n                        </ListGroupItemText>\n                     </ListGroupItem>\n                     <ListGroupItem>\n                        <ListGroupItemHeading>Organizations</ListGroupItemHeading>\n                        <ListGroupItemText>\n                           To select organizations that you can collaborate with,\n                           use the <code>Organization Selection</code> dropdown.\n                           You can select organizations and departments or, you\n                           can start typing in the field to filter organizations.\n                           To select an organization with multiple departments,\n                           you will need to select each org + department pair.\n                        </ListGroupItemText>\n                     </ListGroupItem>\n\n                     <ListGroupItem>\n                        <ListGroupItemHeading>Keywords</ListGroupItemHeading>\n                        <ListGroupItemText>\n                           Selecting keywords is very similar.\n                           The only difference is the keywords are broken up\n                           into high level, medium level, and low level.\n                           You can think of a high level keyword as <b>Fruit</b>\n                           , a medium level keyword <b>Apple</b> and a low level\n                           keyword <b>Honeycrisp</b>. This way, you can more\n                           easily narrow your search.\n                        </ListGroupItemText>\n                     </ListGroupItem>\n\n                     <ListGroupItem>\n                        <ListGroupItemHeading>Collaborations</ListGroupItemHeading>\n                        <ListGroupItemText>\n                           Selecting collaborations is similar to selecting an\n                           organization. You can select a\n                           collaboration, or type to filter the results\n                        </ListGroupItemText>\n                     </ListGroupItem>\n\n                     <ListGroupItem>\n                        <ListGroupItemHeading>There's More!</ListGroupItemHeading>\n                        <ListGroupItemText>\n                           If you want to save a query for later or share it\n                           with someone, click the <code>More Actions</code>\n                           {NBSP}dropdown, and then select{NBSP}\n                           <code>Save Query</code>{NBSP}\n                           (Note, you can only select this button if there are\n                           some parameters selected).<br />\n                           {/* If you have a code from someone else, you can use the\n                           {NBSP}<code>Paste Query</code> option to paste your\n                           qcode (query code) and the system will return the\n                           same query that was saved. */}\n                        </ListGroupItemText>\n                     </ListGroupItem>\n                  </ListGroup>\n               </ModalBody>\n            </Modal>\n            <Button color=\"info\" onClick={() => this.setState({ modal: !this.state.modal })}>Need Help?</Button>\n         </>\n      )\n   }\n\n}\n\nexport default HowToSearchModal;","import '../Modal.css';\n\nimport {\n   Button,\n   Col,\n   Dropdown,\n   DropdownItem,\n   DropdownMenu,\n   DropdownToggle,\n   Form,\n   FormGroup,\n   Label,\n   Row\n} from 'reactstrap';\nimport { NBSP, isEmptyOrg as isEmpty } from '../helper';\nimport React, { Component } from 'react';\n\nimport CopyToClipBoardModal from '../copyQueryToClipboard'\nimport PasteFromCipboardModal from '../PasteQueryFromKeyboard'\nimport Select from 'react-select'\nimport { buildQueryString } from './SearchForCollaborator'\nimport { connect } from 'react-redux'\nimport { withRouter } from \"react-router\";\nimport ExportData from '../Export'\nimport { getKeywordsFromIDs } from '../Keywords'\nimport { getCollaborationsFromIDs } from '../Collaborations'\nimport { getOrganizationsFromIDs } from '../Organizations'\nimport { getUserTypes } from '../User'\n\n\nclass SearchForCollaboratorForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n           queryData: this.props.selectedQuery,\n           validate: {\n              emailState: '',\n           },\n           selectedOption: null,\n           modal: false,\n           dropdownOpen: false,\n  \n           copyToClipBoardToggle: false,\n           pasteFromClipBoardToggle: false,\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.exportData = this.exportData.bind(this);\n        this.orgOptions = this.getOrgTypes();\n        this.aKeywords = this.getKeywordTypes('AK');\n        this.tKeywords = this.getKeywordTypes('TK');\n        this.collaborations = this.getCollaborationsTypes();\n     }\n  \n     getOrgTypes = () => {\n        const orgTypes = [\"IO\", \"CY\", \"CO\", \"NG\", \"RA\"]\n        let collabOrgs = this.props.orgs.items.filter(function (org) { return orgTypes.includes(org.orgType) });\n        return collabOrgs.map(org => ({ label: org.orgNameUnique, value: org.id }));\n     }\n  \n     getCollaborationsTypes = () => {\n        return this.props.collaborations.items.map(collaboration => ({ label: collaboration.collaborationName, value: collaboration.id }));\n     }\n  \n     getKeywordTypes = (keywordType) => {\n        const keywordsFiltered = this.props.keywords.items.filter(function (keyword) { return keyword.keywordType === keywordType })\n        const keywordLow = keywordsFiltered.filter(function (keyword) { return keyword.sortOrder === \"LS\" });\n        const keywordMedium = keywordsFiltered.filter(function (keyword) { return keyword.sortOrder === \"MS\" });\n        const keywordHigh = keywordsFiltered.filter(function (keyword) { return keyword.sortOrder === \"HS\" });\n        let keywordLowNormalized = keywordLow.map(keyword => ({\n           label: keyword.keywordName,\n           value: keyword.id\n        }));\n        let keywordMediumNormalized = keywordMedium.map(keyword => ({\n           label: keyword.keywordName,\n           value: keyword.id\n        }));\n        let keywordHighNormalized = keywordHigh.map(keyword => ({\n           label: keyword.keywordName,\n           value: keyword.id\n        }));\n        let keywordOptionData =\n           [\n              {\n                 label: 'High Level Keywords',\n                 options: keywordHighNormalized,\n              },\n              {\n                 label: 'Medium Level Keywords',\n                 options: keywordMediumNormalized,\n              },\n              {\n                 label: 'Low Level Keywords',\n                 options: keywordLowNormalized,\n              },\n           ];\n        return keywordOptionData;\n     }\n  \n     handleChange = (e) => {\n        let { name, value } = e.target;\n        if (e.target.type === \"checkbox\") {\n           value = e.target.checked;\n        }\n        const queryData = { ...this.state.queryData, [name]: value === null ? [] : value };\n        this.setState({ queryData });\n     };\n  \n     handleSubmit(syntheticEvent) {\n        syntheticEvent.preventDefault();\n        this.props.submitHandler(this.state.queryData);\n  \n     }\n  \n     exportData() {\n        const users = this.props.collaborators.items;\n        const exportUsers = users.map(user => ({\n           'First Name': user.firstName,\n           'Last Name': user.lastName,\n           'Email Address': user.emailAddress,\n           'Website': user.website,\n           'Organizations': getOrganizationsFromIDs(user.organization, this.props.orgs.items),\n           'User Type': getUserTypes(user.userType).name,\n           'Job Title': user.jobTitle,\n           'Description': user.description,\n           'Keywords': getKeywordsFromIDs(user.keywords, this.props.keywords.items),\n           'Collaborations': getCollaborationsFromIDs(user.collaborations, this.props.collaborations.items),\n        }));\n        ExportData(exportUsers, 'user_export');\n     }\n  \n  \n     render() {\n  \n        return (\n           <Form onSubmit={this.handleSubmit}>\n              <Row>\n                 <Col>\n                    <FormGroup>\n                       <Label>Organization Selection</Label>\n                       <Select\n                          ref=\"organizationSelection\"\n                          name=\"organizationSelection\"\n  \n                          value={this.state.queryData.selectedOrganization}\n                          options={this.orgOptions}\n                          onChange={(val) => this.handleChange({ target: { name: 'selectedOrganization', value: val } })}\n                          isMulti={true}\n                          autoBlur={false}\n                          closeOnSelect={false}\n                          closeMenuOnSelect={false}\n                       />\n                    </FormGroup>\n                 </Col>\n              </Row>\n  \n              <Row>\n                 <Col>\n                    <FormGroup>\n                       <Label>Activity Keywords Selection</Label>\n                       <Select\n                          ref=\"activityKeywords\"\n                          value={this.state.queryData.activityKeywords}\n                          options={this.aKeywords}\n                          onChange={(val) => this.handleChange({ target: { name: 'activityKeywords', value: val } })}\n                          isMulti={true}\n                          autoBlur={false}\n                          closeOnSelect={false}\n                          closeMenuOnSelect={false}\n                       />\n                    </FormGroup>\n                 </Col>\n              </Row>\n  \n              <Row>\n                 <Col>\n                    <FormGroup>\n                       <Label>Topical Keywords Selection</Label>\n                       <Select\n                          ref=\"topicalKeywords\"\n                          value={this.state.queryData.topicalKeywords}\n                          options={this.tKeywords}\n                          onChange={(val) => this.handleChange({ target: { name: 'topicalKeywords', value: val } })}\n                          isMulti={true}\n                          autoBlur={false}\n                          closeOnSelect={false}\n                          closeMenuOnSelect={false}\n                       />\n                    </FormGroup>\n                 </Col>\n              </Row>\n  \n              <Row>\n                 <Col>\n                    <FormGroup>\n                       <Label>Collaborations Selection</Label>\n                       <Select\n                          ref=\"collaborations\"\n                          value={this.state.queryData.collaborations}\n                          options={this.collaborations}\n                          onChange={(val) => this.handleChange({ target: { name: 'collaborations', value: val } })}\n                          isMulti={true}\n                          autoBlur={false}\n                          closeOnSelect={false}\n                          closeMenuOnSelect={false}\n                       />\n                    </FormGroup>\n                 </Col>\n              </Row>\n  \n              <Row noGutters>\n                 <div>\n                    <div id=\"runQueryButton\" style={{ display: 'inline-block' }}>\n                       <Button color=\"success\"><span>Run Query</span></Button>\n                    </div>\n                 </div>\n                 {NBSP}\n                 <div>\n  \n                    <Dropdown isOpen={this.state.dropdownOpen} toggle={() => this.setState(prevState => ({ dropdownOpen: !prevState.dropdownOpen }))}>\n                       <DropdownToggle caret>\n                          More Actions\n                          </DropdownToggle>\n                       <DropdownMenu>\n                          <DropdownItem disabled={this.props.collaborators.items.length === 0} onClick={this.exportData}>Export Search</DropdownItem>\n                          <DropdownItem divider />\n                          <DropdownItem disabled={isEmpty(this.state.queryData)}\n                             onClick={() =>\n                                this.setState(\n                                   {\n                                      copyToClipBoardToggle:\n                                         !this.state.copyToClipBoardToggle\n                                   })}\n                          ><span>{isEmpty(this.state.queryData) ?\n                             'Save Query (Create a query to enable)' :\n                             'Save Query'}</span></DropdownItem>\n                       </DropdownMenu>\n                    </Dropdown>\n                    <CopyToClipBoardModal\n                       openStatus={this.state.copyToClipBoardToggle}\n                       query={buildQueryString(this.state.queryData)}\n                       endpoint=\"Collaborator\"\n                       toggle={() => this.setState(\n                          {\n                             copyToClipBoardToggle: !this.state.copyToClipBoardToggle\n                          })}\n                       size='lg'\n                    />\n                    <PasteFromCipboardModal\n                       openStatus={this.state.pasteFromClipBoardToggle}\n                       endpoint=\"Collaborator\"\n                       history={this.props.history}\n                       toggle={() => this.setState(\n                          {\n                             pasteFromClipBoardToggle: !this.state.pasteFromClipBoardToggle\n                          })}\n                       size='lg'\n                    />\n  \n                 </div>\n              </Row>\n           </Form>\n        );\n     }\n  }\n  \n  \n  const mapStateToProps = state => ({\n     nav: state.nav,\n     orgs: state.orgs,\n     keywords: state.keywords,\n     collaborations: state.collaborations,\n     collaborators: state.collaborators,\n  })\n\nSearchForCollaboratorForm = withRouter(SearchForCollaboratorForm);\n\nexport default connect(mapStateToProps)(SearchForCollaboratorForm);","import '../App.css';\n\nimport {\n   Col,\n   Container,\n   Jumbotron,\n   Row,\n} from 'reactstrap';\nimport React, { Component } from 'react';\nimport { fetchCollaborators, setURL, setQueryStatement } from '../actions/searchForCollaboratorActions'\n\nimport HowToSearchModal from './HowToSearchModal'\nimport SearchForCollaboratorForm from './SearchForCollaboratorForm';\nimport Title from '../head'\nimport { connect } from 'react-redux'\nimport { isEmptyOrg as isEmpty } from '../helper'\nimport { withRouter } from \"react-router\";\n\nconst queryString = require('query-string');\n\n\nexport function buildURL(item) {\n   let org = item.selectedOrganization;\n   let activityKeywords = item.activityKeywords;\n   let topicalKeywords = item.topicalKeywords;\n   let collaborations = item.collaborations;\n   var url = \"/api/v1/users/?format=json\";\n   if (org) {\n      for (let i = 0; i < org.length; i++) {\n         url += '&organization=' + org[i].value;\n      }\n   }\n   if (activityKeywords) {\n      for (let i = 0; i < activityKeywords.length; i++) {\n         url += '&keywords=' + activityKeywords[i].value;\n      }\n   }\n   if (topicalKeywords) {\n      for (let i = 0; i < topicalKeywords.length; i++) {\n         url += '&keywords=' + topicalKeywords[i].value;\n      }\n   }\n   if (collaborations) {\n      for (let i = 0; i < collaborations.length; i++) {\n         url += '&collaborations=' + collaborations[i].value;\n      }\n   }\n   return url;\n\n}\n\nexport function buildQueryString(item) {\n   let org = item.selectedOrganization;\n   let activityKeywords = item.activityKeywords;\n   let topicalKeywords = item.topicalKeywords;\n   let collaborations = item.collaborations;\n   var params = \"\"\n   if (org) {\n      for (let i = 0; i < org.length; i++) {\n         params += 'org=' + org[i].value + '&';\n      }\n   }\n   if (activityKeywords) {\n      for (let i = 0; i < activityKeywords.length; i++) {\n         params += 'keyA=' + activityKeywords[i].value + '&';\n      }\n   }\n   if (topicalKeywords) {\n      for (let i = 0; i < topicalKeywords.length; i++) {\n         params += 'keyT=' + topicalKeywords[i].value + '&';\n      }\n   }\n   if (collaborations) {\n      for (let i = 0; i < collaborations.length; i++) {\n         params += 'clb=' + collaborations[i].value + '&';\n      }\n   }\n   params = params.substring(0, params.length - 1)\n   return params;\n}\n\nclass SearchForCollaborator extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         'selectedQueryStatements': {\n            activityKeywords: [],\n            topicalKeywords: [],\n            collaborations: [],\n            selectedOrganization: [],\n         },\n         readParams : false,\n         initialLoad: false\n      };\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.readParams = this.readParams.bind(this);\n   }\n\n\n   componentDidMount() {\n      if (isEmpty(this.props.collaborators.selectedQueryStatements)) {\n         this.readParams()\n         \n      }\n      // else {\n      //    this.props.fetchUnivCollaborators(buildURL(this.props.collaborators.selectedQueryStatements));\n      //    this.props.history.push(`?${buildQueryString(this.props.collaborators.selectedQueryStatements)}`);\n      //    this.setState({ readParams: true })\n      // }\n   }\n\n   readParams() {\n      let orgsA = [];\n      let aKey = [];\n      let tKey = [];\n      let cKey = [];\n      const parsed = queryString.parse(this.props.location.search);\n      if (parsed.keyA) {\n         let keyA = parsed.keyA;\n         if (!(Array.isArray(parsed.keyA))) {\n            keyA = [parsed.keyA]\n         }\n         keyA.map(keyID => aKey.push({ label: this.props.keywords.items[keyID].keywordName, value: keyID }))\n      }\n      if (parsed.keyT) {\n         let keyT = parsed.keyT;\n         if (!(Array.isArray(parsed.keyT))) {\n            keyT = [parsed.keyT]\n         }\n         keyT.map(keyID => tKey.push({ label: this.props.keywords.items[keyID].keywordName, value: keyID }))\n      }\n      if (parsed.clb) {\n         let clb = parsed.clb;\n         if (!(Array.isArray(parsed.clb))) {\n            clb = [parsed.clb]\n         }\n         clb.map(clbID => cKey.push({ label: this.props.collaborations.items[clbID].collaborationName, value: clbID }))\n      }\n      if (parsed.org) {\n         let orgL = parsed.org;\n         if (!(Array.isArray(orgL))) {\n            orgL = [parsed.org]\n         }\n         orgL.map(orgID => orgsA.push({ label: this.props.orgs.items[orgID].orgNameUnique, value: orgID }))\n      }\n      let selectedQueryStatements = {\n         activityKeywords: aKey,\n         topicalKeywords: tKey,\n         collaborations: cKey,\n         selectedOrganization: orgsA,\n      }\n      this.props.setQueryStatement(selectedQueryStatements)\n      this.props.fetchCollaborators(buildURL(selectedQueryStatements));\n      this.setState({readParams: true})\n   }\n\n   handleSubmit = (item) => {\n      if (this.props.collaborators.selectedQueryStatements === item) {\n         return\n      }\n      this.props.setQueryStatement(item);\n      this.props.history.push(`?${buildQueryString(item)}`);\n      this.props.fetchCollaborators(buildURL(item));\n   }\n\n   render() {\n      return (\n         <>\n            <Title name=\"Search for Collaborator\" />\n            <Jumbotron fluid>\n               <Container fluid>\n                  <Row>\n                  <Col sm={{ size: 6, order: 2, offset: 1 }}>\n                     <h1 className=\"display-3\">Looking for a Collaborator?</h1>\n                     <p className=\"lead\">Use the form below to query potential collaborators.</p>\n                     <p className=\"text-muted\">All fields are optional. Leave blank to select all options in that category.< br />\n                     <b>The level indicators only indicate scope, not priority or importance.</b></p>\n                     <HowToSearchModal />\n                     <hr className=\"my-2\" />\n                     {this.state.readParams? \n                     <SearchForCollaboratorForm \n                        selectedQuery={this.props.collaborators.selectedQueryStatements}\n                        submitHandler={this.handleSubmit}\n                        history={this.props.history}/>: null}\n                        </Col>\n                        </Row>\n               </Container>\n            </Jumbotron>\n         </>\n      )\n   }\n}\n\nconst mapStateToProps = state => ({\n   nav: state.nav,\n   orgs: state.orgs,\n   keywords: state.keywords,\n   collaborations: state.collaborations,\n   collaborators: state.collaborators,\n})\n\nconst mapDispatchToProps = {\n   fetchCollaborators,\n   setURL,\n   setQueryStatement,\n};\n\nSearchForCollaborator = withRouter(SearchForCollaborator);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForCollaborator);","import '../App.css';\n\nimport {\n   Alert,\n   Container,\n   Spinner,\n   Table,\n   Toast,\n   ToastBody,\n   ToastHeader\n} from 'reactstrap';\nimport { Element, scroller } from 'react-scroll';\nimport React, { Component } from 'react';\n\nimport Collaborations from '../Collaborations'\nimport Keyword from '../Keywords'\nimport Loader from '../loader';\nimport Loading from '../Loading'\nimport Obfuscate from 'react-obfuscate'\nimport Organizations from '../Organizations'\nimport Department from '../Department'\nimport PaginationWrapper from '../Pagination'\nimport SearchForCollaborator from './SearchForCollaborator'\nimport UserDetail from '../User'\nimport { connect } from 'react-redux'\nimport { fetchCollaborations } from '../actions/collaborationsActions'\nimport { fetchKeywords } from '../actions/keywordActions'\nimport { fetchOrganizations } from '../actions/organizationActions'\nimport { toggleToast } from '../actions/searchForCollaboratorActions'\n\nclass TableView extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         pageItems: [],\n         pageSize: 30,\n      };\n      this.onChangePage = this.onChangePage.bind(this);\n      this.scrollToTable = this.scrollToTable.bind(this);\n   }\n\n   componentDidMount() {\n      this.props.fetchKeywords();\n      this.props.fetchOrganizations();\n      this.props.fetchCollaborations();\n   }\n\n   onChangePage(pageOfItems) {\n      this.setState({ pageItems: pageOfItems })\n   }\n\n   toggleToastInter = () => this.props.toggleToast();\n\n   scrollToTable() {\n      scroller.scrollTo('resultsTable', {\n         duration: 500,\n         smooth: true,\n      });\n      this.props.toggleToast();\n   }\n\n   filterResults = (user) => {\n      const userOrgs = user.organization.map(orgID => this.props.orgs[orgID]);\n      return userOrgs.map(org => [\"IO\"].includes(org.orgType));\n   };\n\n   renderDisplayUserItems = () => {\n      const items = this.state.pageItems;\n      let renderItems = \"\"\n      renderItems = items.map(item => (\n         <tr key={item.id}>\n            <th scope=\"row\">{item.firstName} {item.lastName}</th>\n            <td>{!this.props.orgsLoading || this.props.orgs === [] ? <Organizations items={item.organization} displayLength={20} /> : <Spinner color=\"primary\" />}</td>\n            <td>{!this.props.orgsLoading || this.props.orgs === [] ? <Department items={item.organization} displayLength={20} /> : <Spinner color=\"primary\" />}</td>\n            <td><Obfuscate email={item.emailAddress} /></td>\n            <td>{!this.props.keywordsLoading || this.props.keywords === [] ? <Keyword items={item.keywords} displayLength={25} /> : <Spinner color=\"primary\" />}</td>\n            <td>{!this.props.collaborationsLoading || this.props.collaborations === [] ? <Collaborations items={item.collaborations} displayLength={25} /> : <Spinner color=\"primary\" />}</td>\n            <td><UserDetail user={item} /></td>\n         </tr>\n      ));\n      return renderItems;\n   };\n\n   render() {\n      let loader = [\n         { friendlyName: 'Keywords', condition: this.props.keywordsLoading, error: this.props.keywordError },\n         { friendlyName: 'Organizations', condition: this.props.orgsLoading, error: this.props.orgError },\n         { friendlyName: 'Collaborations', condition: this.props.collaborationsLoading, error: this.props.collaborationsError },\n         { friendlyName: 'Collaborators', condition: this.props.collaboratorsLoading, error: this.props.collaboratorsError },\n      ]\n      let loadStatus = Loader.calculateLoadingState(loader);\n\n      return (\n         <>\n         {this.props.collaborators.length > 0 ?\n            <div style={{ position: \"relative\", zIndex: \"1000\" }}>\n               <Toast isOpen={this.props.toastOpen} style={{ position: \"fixed\", top: \"50px\", right: \"20px\" }}>\n                  <ToastHeader toggle={this.toggleToastInter} icon=\"success\">Results Loaded</ToastHeader>\n                  <ToastBody>\n                     <a href=\"#0\" onClick={this.scrollToTable}>\n                        Click here to scroll to results.\n                     </a>\n                  </ToastBody>\n               </Toast>\n            </div> : null}\n            <Loading body={loader} status={loadStatus} />\n            {(!this.props.keywordsLoading || this.props.keywords === []) && (!this.props.orgsLoading || this.props.orgs === []) && (!this.props.collaborationsLoading || this.props.collaborations === []) ? <SearchForCollaborator /> : null}\n            <Container fluid>\n               {this.props.collaborators.length === 0 ?\n                  <Alert color=\"info\">\n                     <h4 className=\"alert-heading\">No Results</h4>\n                     <p>\n                        Hmm, it looks like there are no results with your\n                        current query. Try a different combination.\n                    </p>\n                  </Alert> :\n                  <>\n                     <div className=\"clearfix\">\n                        {!(this.props.orgsLoading || this.props.orgError) && !(this.collaboratorsLoading || this.collaboratorsError) ?\n                           <p className=\"text-muted float-right\">Your query returned\n                           exactly {this.props.collaborators.length} results.\n                           </p> : 'Loading'\n                        }\n                     </div>\n                     <Element name=\"resultsTable\">\n                     <Table hover responsive className=\"table-curved\">\n                        <thead className=\"thead-light\">\n                           <tr>\n                              <th>Name</th>\n                              <th>Organization(s)</th>\n                              <th>Department</th>\n                              <th>Email Address</th>\n                              <th>Keyword(s)</th>\n                              <th>Collaboration(s)</th>\n                              <th>More Information</th>\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {this.renderDisplayUserItems()}\n                        </tbody>\n                     </Table>\n                     </Element>\n                     <div className=\"centerd-pagination\">\n                        <PaginationWrapper pageSize={this.state.pageSize} items={this.props.collaborators} onChangePage={this.onChangePage} />\n                     </div>\n                  </>\n               }\n            </Container>\n         </>\n      );\n   }\n}\n\nconst mapStateToProps = state => ({\n   keywords: state.keywords.items,\n   keywordsLoading: state.keywords.loading,\n   keywordError: state.keywords.error,\n\n   orgs: state.orgs.items,\n   orgsLoading: state.orgs.loading,\n   orgError: state.orgs.error,\n\n   collaborators: state.collaborators.items,\n   collaboratorsLoading: state.collaborators.loading,\n   collaboratorsError: state.collaborators.error,\n   toastOpen: state.collaborators.showToast,\n\n   collaborations: state.collaborations.items,\n   collaborationsLoading: state.collaborations.loading,\n   collaborationsError: state.collaborations.error,\n})\n\nconst mapDispatchToProps = {\n   fetchKeywords,\n   fetchOrganizations,\n   fetchCollaborations,\n   toggleToast,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableView);\n","import './App.css';\nimport './welcomeJumbotron.css'\n\nimport {\n   Button,\n   Col,\n   Container,\n   Jumbotron,\n   Row,\n} from 'reactstrap';\nimport React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nclass WelcomeJumbotron extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n\n         navIsOpen: false,\n         devModeOpen: true,\n      };\n   }\n   render() {\n      const { settings } = this.props;\n      return (\n\n         <Jumbotron className=\"welcome text-light\" fluid>\n            <Container fluid>\n               <Row>\n                  <Col sm={{ size: 6, order: 2, offset: 1 }}>\n                  <h1 className=\"display-3\">{settings.frontHeading}</h1>\n                  <p className=\"lead\">{settings.frontMessage}</p>\n                  <hr className=\"my-2 hr-light\" />\n                  <p>{settings.frontMessageSubText}</p>\n                  <p className=\"lead\">\n                        <Button href={'https://www.surveymonkey.com/r/5X3RL3B'}\n                        color=\"light\"  target=\"_blank\" rel=\"noopener noreferrer\">\n                        Request Addition to Database</Button>\n                  </p>\n                  </Col>\n               </Row>\n            </Container>\n         </Jumbotron>\n      );\n   }\n}\n\nconst mapStateToProps = state => ({\n   settings: state.settings,\n})\n\nexport default connect(mapStateToProps)(WelcomeJumbotron)","import './App.css';\nimport './indexCards.css'\n\nimport {\n   Button,\n   Card,\n   CardBody,\n   CardDeck,\n   CardText,\n   Container,\n} from 'reactstrap';\nimport React, { Component } from 'react';\n\nimport PasteFromCipboardModal from './PasteQueryFromKeyboard'\nimport { NavLink as RRNavLink } from 'react-router-dom';\nimport Title from './head'\nimport WelcomeJumbotron from './WelcomeJumbotron';\nimport { connect } from 'react-redux';\n\nconst UnderConstructionCard = () => {\n   return (\n      <Card className=\"cardHideOverflow card-no-border shadow text-light\">\n            <span className=\"newFeaturesBanner\"><b>New Features Coming Soon!</b></span>\n            <div className=\"underConstructionCardImage card-defaults\">\n               <CardBody>\n                  <h5 className='cardTitle'>Under Construction</h5>\n                  <CardText>New features will be coming soon!</CardText>\n               </CardBody>\n               <div className=\"card-footer-light\"><Button color=\"light\" disabled>Button Coming Soon</Button></div>\n            </div>\n      </Card>\n   )\n}\n\nconst LookingForUnivCollaboratorCard = () => {\n   return (\n      <Card className=\"cardHideOverflow card-no-border shadow text-light\" >\n         <div className=\"lookingForUnivCollaboratorCardImage card-defaults\">\n            <CardBody>\n               <h5 className='cardTitle'>Looking for a University Collaborator?</h5>\n               <CardText>Interested in finding faculty, staff, or students to work on a project?</CardText>\n            </CardBody>\n            <div className=\"card-footer-light\"><Button color=\"light\" tag={RRNavLink} exact to=\"/univCollaborator\">Search For a University Collaborator</Button></div>\n         </div>\n      </Card>\n   )\n}\n\nconst LookingFor4CCollaboratorCard = () => {\n   return (\n      <Card className=\"cardHideOverflow card-no-border shadow text-light\" >\n         <div className=\"lookingForGovCollaboratorCardImage card-defaults\">\n            <CardBody>\n               <h5 className='cardTitle'>Looking for a 4C Collaborator?</h5>\n               <CardText>Interested in finding a city, county, NGO, or regional staff?</CardText>\n            </CardBody>\n            <div className=\"card-footer-light\"><Button color=\"light\" tag={RRNavLink} exact to=\"/4CCollaborator\">Search For a 4C Collaborator</Button></div>\n         </div>\n      </Card>\n   )\n}\n\nconst LookingForCollaboratorCard = () => {\n   return (\n      <Card className=\"cardHideOverflow card-no-border shadow text-light\" >\n         <div className=\"lookingForCollaboratorCardImage card-defaults\">\n            <CardBody>\n               <h5 className='cardTitle'>Looking for a Collaborator?</h5>\n               <CardText>Interested in finding faculty, students, city, county, NGO, or regional staff?</CardText>\n            </CardBody>\n            <div className=\"card-footer-light\"><Button color=\"light\" tag={RRNavLink} exact to=\"/Collaborator\">Search For a Collaborator</Button></div>\n         </div>\n      </Card>\n   )\n}\n\nclass FrontPageCards extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n\n         navIsOpen: false,\n         devModeOpen: true,\n         pasteFromClipBoardToggle: false,\n      };\n   }\n\n   PasteQCode = () => {\n      return (\n         <Card className=\"cardHideOverflow card-no-border shadow text-light\" >\n            <div className=\"PasteQCodeCardImage card-defaults\">\n               <CardBody>\n                  <h5 className='cardTitle'>Have a saved query?</h5>\n                  <CardText>If you have a saved code, you can retrieve it here.</CardText>\n               </CardBody>\n               <div className=\"card-footer-light\"><Button color=\"light\" onClick={() => this.setState({ pasteFromClipBoardToggle: !this.state.pasteFromClipBoardToggle })}>Paste Code</Button></div>\n               <PasteFromCipboardModal\n                  openStatus={this.state.pasteFromClipBoardToggle}\n                  endpoint=\"univCollaborator\"\n                  history={this.props.history}\n                  toggle={() => this.setState(\n                     {\n                        pasteFromClipBoardToggle: !this.state.pasteFromClipBoardToggle\n                     })}\n                  size='lg'\n               />\n            </div>\n         </Card>\n      )\n   }\n\n\n   render() {\n      return (\n         <>\n            <Title name=\"Home\" />\n            <WelcomeJumbotron />\n            <Container>\n               <CardDeck className=\"card-deck-overrides\">\n                  <LookingForCollaboratorCard />\n                  {/* <LookingForUnivCollaboratorCard />\n                  <LookingFor4CCollaboratorCard />\n                  <UnderConstructionCard />\n                  <this.PasteQCode /> */}\n               </CardDeck>\n            </Container>\n         </>\n      );\n   }\n}\n\nconst mapStateToProps = state => ({\n   settings: state.settings,\n})\n\n// FrontPageCards = withRouter(FrontPageCards)\n\nexport default connect(mapStateToProps)(FrontPageCards)","import React, { Component } from 'react';\nimport { Modal, ModalBody, ModalHeader } from 'reactstrap'\n\nclass CollaboratorsLinksResourcesModal extends React.Component {\n\n    render() {\n        return (\n            <Modal isOpen={this.props.isOpen} centered toggle={this.props.closeCollaboratorLinksResourcesModal}>\n                <ModalHeader>Organization Tools:</ModalHeader>\n                <ModalBody>\n                    <a href=\"https://trello.com\" target=\"_blank\">Trello</a>\n                    <br /> <br />\n                    <a href=\"https://asana.com\" target=\"_blank\">Asana</a>\n                </ModalBody>\n                <ModalHeader>Collaboration Tools</ModalHeader>\n                <ModalBody>\n                    <a href=\"https://slack.com\" target=\"_blank\">Slack</a>\n                    <br /> <br />\n                    <a href=\"https://zoom.us\" target=\"_blank\">Zoom</a>\n                    <br /> <br />\n                    <a href=\"https://miro.com\" target=\"_blank\">Miro</a>\n                </ModalBody>\n                <ModalHeader>Resources</ModalHeader>\n                <ModalBody>\n                    <a\n                        href=\"https://resources.ca.gov/CNRALegacyFiles/docs/climate/safeguarding/update2018/safeguarding-california-plan-2018-update.pdf\"\n                        target=\"_blank\"\n                    >\n                        California’s Climate Adaptation Strategy 2018\n                    </a>\n                    <br /> <br />\n                    <a href=\"https://ww2.arb.ca.gov/our-work/topics/climate-change\" target=\"_blank\">\n                        California Greenhouse Gas Reduction Programs and Data\n                    </a>\n                    <br /> <br />\n                    <a href=\"https://opr.ca.gov/planning/icarp/ \" target=\"_blank\">\n                        Integrated Climate Adaptation and Resiliency Program\n                    </a>\n                </ModalBody>\n            </Modal>\n        )\n    }\n}\n\nexport default CollaboratorsLinksResourcesModal\n","export const Actions = {\n   TOGGLE_DEV_MODE: 'TOGGLE_DEV_MODE',\n   TOGGLE_NAV_BAR: 'TOGGLE_NAV_BAR',\n\n   TOGGLE_SEARCH_FOR_UNIV_COLLABORATOR: 'TOGGLE_SEARCH_FOR_UNIV_COLLABORATOR',\n}\n\nexport const toggleDevMode = () => ({\n   type: Actions.TOGGLE_DEV_MODE\n});\n\nexport const toggleNavBar = () => ({\n   type: Actions.TOGGLE_NAV_BAR\n});\n\nexport const toggleSearchForUnivCollaborator = () => ({\n   type: Actions.TOGGLE_SEARCH_FOR_UNIV_COLLABORATOR\n})","import React, { Component } from 'react';\nimport {\n   Collapse,\n   Navbar,\n   NavbarToggler,\n   NavbarBrand,\n   Nav,\n   NavItem,\n   NavLink,\n   } from 'reactstrap';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { toggleNavBar, toggleDevMode, toggleSearchForUnivCollaborator } from './actions/menuActions'\nimport { NavLink as RRNavLink } from 'react-router-dom';\n\nclass Navigation extends Component {\n\n   render() {\n      const {nav, settings} = this.props;\n      return (\n\n         <Navbar color=\"dark\" dark expand=\"md\">\n            <NavbarBrand tag={RRNavLink} exact to=\"/\">{settings.siteHeading}</NavbarBrand>\n            <NavbarToggler onClick={() => this.props.toggleNavBar()} />\n            <Collapse isOpen={nav.navOpen} navbar>\n               <Nav className=\"ml-auto\" navbar>\n                  {/* <NavItem>\n                     <NavLink tag={RRNavLink} exact to=\"/univCollaborator\" activeClassName=\"active\">Search for a University Collaborator</NavLink>\n                  </NavItem>\n                  <NavItem>\n                     <NavLink tag={RRNavLink} exact to=\"/4CCollaborator\" activeClassName=\"active\">Search for a 4C Member</NavLink>\n                  </NavItem> */}\n                  <NavItem>\n                     <NavLink\n                         style={{cursor: \"pointer\"}}\n                         activeClassName=\"active\"\n                         onClick={this.props.openCollaboratorLinksResourcesModal}\n                     >\n                        Collaborator Links & Resources\n                     </NavLink>\n                  </NavItem>\n               </Nav>\n            </Collapse>\n         </Navbar>\n      );\n   }\n}\n\nconst mapStateToProps = state => ({\n   nav: state.nav,\n   settings: state.settings,\n})\n\nconst mapDispatchToProps = {\n   toggleNavBar,\n   toggleDevMode,\n   toggleSearchForUnivCollaborator\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation)\n","import React, { Component } from 'react';\nimport {\n   Container,\n   Jumbotron,\n} from 'reactstrap';\nimport './App.css';\nimport Title from './head'\n\nclass NotFound extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n\n         navIsOpen: false,\n         devModeOpen: true,\n      };\n   }\n   render() {\n      const { pathname } = this.props.location;\n      return (\n         <>\n         <Title name=\"404\" />\n         <Jumbotron fluid>\n            <Container fluid>\n               <h1 className=\"display-3\">404</h1>\n               <p className=\"lead\">Page not found</p>\n               <hr className=\"my-2\" />\n               <p>The requested URL was not found on this server</p>\n               <p className=\"lead\">\n                  The path <code>{pathname}</code> could not be found in this application.\n               </p>\n            </Container>\n         </Jumbotron>\n         </>\n      );\n   }\n}\n\nexport default NotFound","import '../App.css';\n\nimport {\n   Alert,\n   Button,\n   ListGroup,\n   ListGroupItem,\n   ListGroupItemHeading,\n   ListGroupItemText,\n   Modal,\n   ModalBody,\n   ModalHeader\n} from 'reactstrap';\nimport React, { Component } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport { NBSP } from '../helper'\nimport { faLifeRing } from '@fortawesome/free-solid-svg-icons';\nimport { library } from '@fortawesome/fontawesome-svg-core';\n\nlibrary.add(faLifeRing);\n\nclass HowToSearchModal extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         'modal': false,\n      };\n\n   }\n\n   render() {\n\n      return (\n         <>\n            <Modal size=\"xl\" isOpen={this.state.modal} toggle={() => this.setState({ modal: !this.state.modal })}>\n               <ModalHeader toggle={() => this.setState({ modal: !this.state.modal })}><FontAwesomeIcon icon=\"life-ring\" /> Need Help?</ModalHeader>\n               <ModalBody>\n                  <Alert color=\"info\">\n                     If you're looking for potential university collaborators, then\n                     you're in the right place! If you want to search for NGO or\n                     government (city, regional, county), you'll need to go{NBSP}\n                     <Link to=\"4CCollaborator\">here</Link>.\n                  </Alert>\n\n                  <ListGroup>\n                     <ListGroupItem>\n                        <ListGroupItemHeading>How To Search</ListGroupItemHeading>\n                        <ListGroupItemText>\n                           <p>Not sure how to use this tool? Here are a couple of\n                           tips to get started.</p>\n                           <p>Here is a general formula for how queries are structured:{NBSP}\n                           <em>Query = University AND (Activity Keywords OR \n                              Topical Keywords) AND Collaborations</em>.\n                           </p>\n                           <p>\n                              This means that your results will contain collaborators\n                              from any university you selected that match any of\n                              the keywords (activity and topical) and each person\n                              identified with the collaborations selected.\n                           </p>\n                           <p>\n                              It's best to start broad and narrow your search\n                              results. If you are looking for a person that\n                              specializes in water, you may want to start with\n                              the keywords and omit any university selection at\n                              the start (unless you only want someone from a\n                              specific univeristy). Then, select activity and\n                              topical high level keywords to get an idea of who\n                              specializes in water. At this point, if you know\n                              what types of collaborations you are looking for,\n                              go ahead and input them. Then, click {NBSP}\n                              <code>Run Query</code>. This will give you anybody\n                              who specializes in water. At this point, you can\n                              start narrowing down your parameters by adding\n                              some medium level or low level keywords to find\n                              someone more specific.\n                           </p>\n                        </ListGroupItemText>\n                     </ListGroupItem>\n                     <ListGroupItem>\n                        <ListGroupItemHeading>Universities</ListGroupItemHeading>\n                        <ListGroupItemText>\n                           To select universities that you can collaborate with,\n                           use the <code>University Selection</code> dropdown.\n                           You can select universities and departments or, you\n                           can start typing in the field to filter universities.\n                           To select an entire univeristy, you'll need to\n                           individually select each department.\n                        </ListGroupItemText>\n                     </ListGroupItem>\n\n                     <ListGroupItem>\n                        <ListGroupItemHeading>Keywords</ListGroupItemHeading>\n                        <ListGroupItemText>\n                           Selecting keywords is very similar.\n                           The only difference is the keywords are broken up\n                           into high level, medium level, and low level.\n                           You can think of a high level keyword as <b>Fruit</b>\n                           , a medium level keyword <b>Apple</b> and a low level\n                           keyword <b>Honeycrisp</b>. This way, you can more\n                           easily narrow your search.\n                        </ListGroupItemText>\n                     </ListGroupItem>\n\n                     <ListGroupItem>\n                        <ListGroupItemHeading>Collaborations</ListGroupItemHeading>\n                        <ListGroupItemText>\n                           Selecting collaborations is similar to selecting a\n                           university. You can select a\n                           collaboration, or type to filter the results\n                        </ListGroupItemText>\n                     </ListGroupItem>\n\n                     <ListGroupItem>\n                        <ListGroupItemHeading>There's More!</ListGroupItemHeading>\n                        <ListGroupItemText>\n                           If you want to save a query for later or share it\n                           with someone, click the <code>More Actions</code>\n                           {NBSP}dropdown, and then select{NBSP}\n                           <code>Save Query</code>{NBSP}\n                           (Note, you can only select this button if there are\n                           some parameters selected).<br />\n                           {/* If you have a code from someone else, you can use the\n                           {NBSP}<code>Paste Query</code> option to paste your\n                           qcode (query code) and the system will return the\n                           same query that was saved. */}\n                        </ListGroupItemText>\n                     </ListGroupItem>\n                  </ListGroup>\n               </ModalBody>\n            </Modal>\n            <Button color=\"info\" onClick={() => this.setState({ modal: !this.state.modal })}>Need Help?</Button>\n         </>\n      )\n   }\n\n}\n\nexport default HowToSearchModal;","import '../Modal.css';\n\nimport {\n   Button,\n   Col,\n   Dropdown,\n   DropdownItem,\n   DropdownMenu,\n   DropdownToggle,\n   Form,\n   FormGroup,\n   Label,\n   Row\n} from 'reactstrap';\nimport { NBSP, isEmptyUniv as isEmpty } from '../helper';\nimport React, { Component } from 'react';\n\nimport CopyToClipBoardModal from '../copyQueryToClipboard'\nimport PasteFromCipboardModal from '../PasteQueryFromKeyboard'\nimport Select from 'react-select'\nimport { buildQueryString } from './searchForUniversity'\nimport { connect } from 'react-redux'\nimport { withRouter } from \"react-router\";\nimport ExportData from '../Export'\nimport { getKeywordsFromIDs } from '../Keywords'\nimport { getCollaborationsFromIDs } from '../Collaborations'\nimport { getOrganizationsFromIDs } from '../Organizations'\nimport { getUserTypes } from '../User'\n\n// const exportToCSV = ExportData();\n\nclass SearchForUniversityForm extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         queryData: this.props.selectedQuery,\n         validate: {\n            emailState: '',\n         },\n         selectedOption: null,\n         modal: false,\n         dropdownOpen: false,\n\n         copyToClipBoardToggle: false,\n         pasteFromClipBoardToggle: false,\n      }\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.exportData = this.exportData.bind(this);\n      this.univOptions = this.getUnivertisyTypes();\n      this.aKeywords = this.getKeywordTypes('AK');\n      this.tKeywords = this.getKeywordTypes('TK');\n      this.collaborations = this.getCollaborationsTypes();\n   }\n\n   getUnivertisyTypes = () => {\n      const orgTypes = [\"IO\"]\n      let univOrgs = this.props.orgs.items.filter(function (org) { return orgTypes.includes(org.orgType) });\n      return univOrgs.map(org => ({ label: org.orgNameUnique, value: org.id }));\n   }\n\n   getCollaborationsTypes = () => {\n      return this.props.collaborations.items.map(collaboration => ({ label: collaboration.collaborationName, value: collaboration.id }));\n   }\n\n   getKeywordTypes = (keywordType) => {\n      const keywordsFiltered = this.props.keywords.items.filter(function (keyword) { return keyword.keywordType === keywordType })\n      const keywordLow = keywordsFiltered.filter(function (keyword) { return keyword.sortOrder === \"LS\" });\n      const keywordMedium = keywordsFiltered.filter(function (keyword) { return keyword.sortOrder === \"MS\" });\n      const keywordHigh = keywordsFiltered.filter(function (keyword) { return keyword.sortOrder === \"HS\" });\n      let keywordLowNormalized = keywordLow.map(keyword => ({\n         label: keyword.keywordName,\n         value: keyword.id\n      }));\n      let keywordMediumNormalized = keywordMedium.map(keyword => ({\n         label: keyword.keywordName,\n         value: keyword.id\n      }));\n      let keywordHighNormalized = keywordHigh.map(keyword => ({\n         label: keyword.keywordName,\n         value: keyword.id\n      }));\n      let keywordOptionData =\n         [\n            {\n               label: 'High Level Keywords',\n               options: keywordHighNormalized,\n            },\n            {\n               label: 'Medium Level Keywords',\n               options: keywordMediumNormalized,\n            },\n            {\n               label: 'Low Level Keywords',\n               options: keywordLowNormalized,\n            },\n         ];\n      return keywordOptionData;\n   }\n\n   handleChange = (e) => {\n      let { name, value } = e.target;\n      if (e.target.type === \"checkbox\") {\n         value = e.target.checked;\n      }\n      const queryData = { ...this.state.queryData, [name]: value === null ? [] : value };\n      this.setState({ queryData });\n   };\n\n   handleSubmit(syntheticEvent) {\n      syntheticEvent.preventDefault();\n      this.props.submitHandler(this.state.queryData);\n\n   }\n\n   exportData() {\n      const users = this.props.collaborators.items;\n      const exportUsers = users.map(user => ({\n         'First Name': user.firstName,\n         'Last Name': user.lastName,\n         'Email Address': user.emailAddress,\n         'Website': user.website,\n         'Organizations': getOrganizationsFromIDs(user.organization, this.props.orgs.items),\n         'User Type': getUserTypes(user.userType).name,\n         'Job Title': user.jobTitle,\n         'Description': user.description,\n         'Keywords': getKeywordsFromIDs(user.keywords, this.props.keywords.items),\n         'Collaborations': getCollaborationsFromIDs(user.collaborations, this.props.collaborations.items),\n      }));\n      ExportData(exportUsers, 'user_export');\n   }\n\n\n   render() {\n\n      return (\n         <Form onSubmit={this.handleSubmit}>\n            <Row>\n               <Col>\n                  <FormGroup>\n                     <Label>University Selection</Label>\n                     <Select\n                        ref=\"universitySelection\"\n                        name=\"universitySelection\"\n\n                        value={this.state.queryData.selectedUniversities}\n                        options={this.univOptions}\n                        onChange={(val) => this.handleChange({ target: { name: 'selectedUniversities', value: val } })}\n                        isMulti={true}\n                        autoBlur={false}\n                        closeOnSelect={false}\n                        closeMenuOnSelect={false}\n                     />\n                  </FormGroup>\n               </Col>\n            </Row>\n\n            <Row>\n               <Col>\n                  <FormGroup>\n                     <Label>Activity Keywords Selection</Label>\n                     <Select\n                        ref=\"activityKeywords\"\n                        value={this.state.queryData.activityKeywords}\n                        options={this.aKeywords}\n                        onChange={(val) => this.handleChange({ target: { name: 'activityKeywords', value: val } })}\n                        isMulti={true}\n                        autoBlur={false}\n                        closeOnSelect={false}\n                        closeMenuOnSelect={false}\n                     />\n                  </FormGroup>\n               </Col>\n            </Row>\n\n            <Row>\n               <Col>\n                  <FormGroup>\n                     <Label>Topical Keywords Selection</Label>\n                     <Select\n                        ref=\"topicalKeywords\"\n                        value={this.state.queryData.topicalKeywords}\n                        options={this.tKeywords}\n                        onChange={(val) => this.handleChange({ target: { name: 'topicalKeywords', value: val } })}\n                        isMulti={true}\n                        autoBlur={false}\n                        closeOnSelect={false}\n                        closeMenuOnSelect={false}\n                     />\n                  </FormGroup>\n               </Col>\n            </Row>\n\n            <Row>\n               <Col>\n                  <FormGroup>\n                     <Label>Collaborations Selection</Label>\n                     <Select\n                        ref=\"collaborations\"\n                        value={this.state.queryData.collaborations}\n                        options={this.collaborations}\n                        onChange={(val) => this.handleChange({ target: { name: 'collaborations', value: val } })}\n                        isMulti={true}\n                        autoBlur={false}\n                        closeOnSelect={false}\n                        closeMenuOnSelect={false}\n                     />\n                  </FormGroup>\n               </Col>\n            </Row>\n\n            <Row noGutters>\n               <div>\n                  <div id=\"runQueryButton\" style={{ display: 'inline-block' }}>\n                     <Button color=\"success\"><span>Run Query</span></Button>\n                  </div>\n               </div>\n               {NBSP}\n               <div>\n\n                  <Dropdown isOpen={this.state.dropdownOpen} toggle={() => this.setState(prevState => ({ dropdownOpen: !prevState.dropdownOpen }))}>\n                     <DropdownToggle caret>\n                        More Actions\n                        </DropdownToggle>\n                     <DropdownMenu>\n                        <DropdownItem disabled={this.props.collaborators.items.length === 0} onClick={this.exportData}>Export Search</DropdownItem>\n                        <DropdownItem divider />\n                        <DropdownItem disabled={isEmpty(this.state.queryData)}\n                           onClick={() =>\n                              this.setState(\n                                 {\n                                    copyToClipBoardToggle:\n                                       !this.state.copyToClipBoardToggle\n                                 })}\n                        ><span>{isEmpty(this.state.queryData) ?\n                           'Save Query (Create a query to enable)' :\n                           'Save Query'}</span></DropdownItem>\n                     </DropdownMenu>\n                  </Dropdown>\n                  <CopyToClipBoardModal\n                     openStatus={this.state.copyToClipBoardToggle}\n                     query={buildQueryString(this.state.queryData)}\n                     endpoint=\"univCollaborator\"\n                     toggle={() => this.setState(\n                        {\n                           copyToClipBoardToggle: !this.state.copyToClipBoardToggle\n                        })}\n                     size='lg'\n                  />\n                  <PasteFromCipboardModal\n                     openStatus={this.state.pasteFromClipBoardToggle}\n                     endpoint=\"univCollaborator\"\n                     history={this.props.history}\n                     toggle={() => this.setState(\n                        {\n                           pasteFromClipBoardToggle: !this.state.pasteFromClipBoardToggle\n                        })}\n                     size='lg'\n                  />\n\n               </div>\n            </Row>\n         </Form>\n      );\n   }\n}\n\n\nconst mapStateToProps = state => ({\n   nav: state.nav,\n   orgs: state.orgs,\n   keywords: state.keywords,\n   collaborations: state.collaborations,\n   collaborators: state.univCollaborators,\n})\n\nSearchForUniversityForm = withRouter(SearchForUniversityForm);\n\nexport default connect(mapStateToProps)(SearchForUniversityForm);","import '../App.css';\n\nimport {\n   Col,\n   Container,\n   Jumbotron,\n   Row,\n} from 'reactstrap';\nimport React, { Component } from 'react';\nimport { fetchUnivCollaborators, setURL, setUnivQueryStatement } from '../actions/searchForUnivCollaboratorActions'\n\nimport HowToSearchModal from './HowToSearchModal'\nimport SearchForCollaboratorForm from './searchForUniversityForm';\nimport Title from '../head'\nimport { connect } from 'react-redux'\nimport { isEmptyUniv as isEmpty } from '../helper'\nimport { toggleSearchForUnivCollaborator } from '../actions/menuActions'\nimport { withRouter } from \"react-router\";\n\nconst queryString = require('query-string');\n\n\nexport function buildURL(item) {\n   let org = item.selectedUniversities;\n   let activityKeywords = item.activityKeywords;\n   let topicalKeywords = item.topicalKeywords;\n   let collaborations = item.collaborations;\n   var url = \"/api/v1/users/?format=json\";\n   if (org) {\n      for (let i = 0; i < org.length; i++) {\n         url += '&organization=' + org[i].value;\n      }\n   }\n   if (activityKeywords) {\n      for (let i = 0; i < activityKeywords.length; i++) {\n         url += '&keywords=' + activityKeywords[i].value;\n      }\n   }\n   if (topicalKeywords) {\n      for (let i = 0; i < topicalKeywords.length; i++) {\n         url += '&keywords=' + topicalKeywords[i].value;\n      }\n   }\n   if (collaborations) {\n      for (let i = 0; i < collaborations.length; i++) {\n         url += '&collaborations=' + collaborations[i].value;\n      }\n   }\n   return url;\n\n}\n\nexport function buildQueryString(item) {\n   let org = item.selectedUniversities;\n   let activityKeywords = item.activityKeywords;\n   let topicalKeywords = item.topicalKeywords;\n   let collaborations = item.collaborations;\n   var params = \"\"\n   if (org) {\n      for (let i = 0; i < org.length; i++) {\n         params += 'org=' + org[i].value + '&';\n      }\n   }\n   if (activityKeywords) {\n      for (let i = 0; i < activityKeywords.length; i++) {\n         params += 'keyA=' + activityKeywords[i].value + '&';\n      }\n   }\n   if (topicalKeywords) {\n      for (let i = 0; i < topicalKeywords.length; i++) {\n         params += 'keyT=' + topicalKeywords[i].value + '&';\n      }\n   }\n   if (collaborations) {\n      for (let i = 0; i < collaborations.length; i++) {\n         params += 'clb=' + collaborations[i].value + '&';\n      }\n   }\n   params = params.substring(0, params.length - 1)\n   return params;\n}\n\nclass SearchForUnivCollaborator extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         'selectedQueryStatements': {\n            activityKeywords: [],\n            topicalKeywords: [],\n            collaborations: [],\n            selectedUniversities: [],\n         },\n         readParams : false,\n         initialLoad: false\n      };\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.readParams = this.readParams.bind(this);\n   }\n\n\n   componentDidMount() {\n      if (isEmpty(this.props.collaborators.selectedQueryStatements)) {\n         this.readParams()\n         \n      }\n      // else {\n      //    this.props.fetchUnivCollaborators(buildURL(this.props.collaborators.selectedQueryStatements));\n      //    this.props.history.push(`?${buildQueryString(this.props.collaborators.selectedQueryStatements)}`);\n      //    this.setState({ readParams: true })\n      // }\n   }\n\n   readParams() {\n      let orgsA = [];\n      let aKey = [];\n      let tKey = [];\n      let cKey = [];\n      const parsed = queryString.parse(this.props.location.search);\n      if (parsed.keyA) {\n         let keyA = parsed.keyA;\n         if (!(Array.isArray(parsed.keyA))) {\n            keyA = [parsed.keyA]\n         }\n         keyA.map(keyID => aKey.push({ label: this.props.keywords.items[keyID].keywordName, value: keyID }))\n      }\n      if (parsed.keyT) {\n         let keyT = parsed.keyT;\n         if (!(Array.isArray(parsed.keyT))) {\n            keyT = [parsed.keyT]\n         }\n         keyT.map(keyID => tKey.push({ label: this.props.keywords.items[keyID].keywordName, value: keyID }))\n      }\n      if (parsed.clb) {\n         let clb = parsed.clb;\n         if (!(Array.isArray(parsed.clb))) {\n            clb = [parsed.clb]\n         }\n         clb.map(clbID => cKey.push({ label: this.props.collaborations.items[clbID].collaborationName, value: clbID }))\n      }\n      if (parsed.org) {\n         let orgL = parsed.org;\n         if (!(Array.isArray(orgL))) {\n            orgL = [parsed.org]\n         }\n         orgL.map(orgID => orgsA.push({ label: this.props.orgs.items[orgID].orgNameUnique, value: orgID }))\n      }\n      let selectedQueryStatements = {\n         activityKeywords: aKey,\n         topicalKeywords: tKey,\n         collaborations: cKey,\n         selectedUniversities: orgsA,\n      }\n      this.props.setUnivQueryStatement(selectedQueryStatements)\n      this.props.fetchUnivCollaborators(buildURL(selectedQueryStatements));\n      this.setState({readParams: true})\n   }\n\n   handleSubmit = (item) => {\n      if (this.props.collaborators.selectedQueryStatements === item) {\n         return\n      }\n      this.props.setUnivQueryStatement(item);\n      this.props.history.push(`?${buildQueryString(item)}`);\n      this.props.fetchUnivCollaborators(buildURL(item));\n   }\n\n   render() {\n      return (\n         <>\n            <Title name=\"Search for University Collaborator\" />\n            <Jumbotron fluid>\n               <Container fluid>\n                  <Row>\n                  <Col sm={{ size: 6, order: 2, offset: 1 }}>\n                     <h1 className=\"display-3\">Looking for a University Collaborator?</h1>\n                     <p className=\"lead\">Use the form below to query potential collaborators.</p>\n                     <p className=\"text-muted\">All fields are optional. Leave blank to select all options in that category.< br />\n                     <b>The level indicators only indicate scope, not priority or importance.</b></p>\n                     <HowToSearchModal />\n                     <hr className=\"my-2\" />\n                     {this.state.readParams? \n                     <SearchForCollaboratorForm \n                        selectedQuery={this.props.collaborators.selectedQueryStatements}\n                        submitHandler={this.handleSubmit}\n                        history={this.props.history}/>: null}\n                        </Col>\n                        </Row>\n               </Container>\n            </Jumbotron>\n         </>\n      )\n   }\n}\n\nconst mapStateToProps = state => ({\n   nav: state.nav,\n   orgs: state.orgs,\n   keywords: state.keywords,\n   collaborations: state.collaborations,\n   collaborators: state.univCollaborators,\n})\n\nconst mapDispatchToProps = {\n   toggleSearchForUnivCollaborator,\n   fetchUnivCollaborators,\n   setURL,\n   setUnivQueryStatement,\n};\n\n// function mapDispatchToProps(dispatch) {\n//    return bindActionCreators({ toggleSearchForCollaborator, fetchCollaborators}, dispatch)\n// }\n\nSearchForUnivCollaborator = withRouter(SearchForUnivCollaborator);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForUnivCollaborator);","import '../App.css';\n\nimport {\n   Alert,\n   Container,\n   Spinner,\n   Table,\n   Toast,\n   ToastBody,\n   ToastHeader\n} from 'reactstrap';\nimport { Element, scroller } from 'react-scroll';\nimport React, { Component } from 'react';\n\nimport Collaborations from '../Collaborations'\nimport Keyword from '../Keywords'\nimport Loader from '../loader';\nimport Loading from '../Loading'\nimport Obfuscate from 'react-obfuscate'\nimport Organizations from '../Organizations'\nimport PaginationWrapper from '../Pagination'\nimport SearchForCollaborator from './searchForUniversity'\nimport UserDetail from '../User'\nimport { connect } from 'react-redux'\nimport { fetchCollaborations } from '../actions/collaborationsActions'\nimport { fetchKeywords } from '../actions/keywordActions'\nimport { fetchOrganizations } from '../actions/organizationActions'\nimport { toggleToast } from '../actions/searchForUnivCollaboratorActions'\n\nclass TableView extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         pageItems: [],\n         pageSize: 30,\n      };\n      this.onChangePage = this.onChangePage.bind(this);\n      this.scrollToTable = this.scrollToTable.bind(this);\n   }\n\n   componentDidMount() {\n      this.props.fetchKeywords();\n      this.props.fetchOrganizations();\n      this.props.fetchCollaborations();\n   }\n\n   onChangePage(pageOfItems) {\n      this.setState({ pageItems: pageOfItems })\n   }\n\n   toggleToastInter = () => this.props.toggleToast();\n\n   scrollToTable() {\n      scroller.scrollTo('resultsTable', {\n         duration: 500,\n         smooth: true,\n      });\n      this.props.toggleToast();\n   }\n\n   filterUnivResults = (user) => {\n      const userOrgs = user.organization.map(orgID => this.props.orgs[orgID]);\n      return userOrgs.map(org => [\"IO\"].includes(org.orgType));\n   };\n\n   renderDisplayUserItems = () => {\n      const items = this.state.pageItems;\n      let renderItems = \"\"\n      renderItems = items.map(item => (\n         <tr key={item.id}>\n            <th scope=\"row\">{item.firstName} {item.lastName}</th>\n            <td>{!this.props.orgsLoading || this.props.orgs === [] ? <Organizations items={item.organization} displayLength={20} /> : <Spinner color=\"primary\" />}</td>\n            <td><Obfuscate email={item.emailAddress} /></td>\n            <td>{!this.props.keywordsLoading || this.props.keywords === [] ? <Keyword items={item.keywords} displayLength={25} /> : <Spinner color=\"primary\" />}</td>\n            <td>{!this.props.collaborationsLoading || this.props.collaborations === [] ? <Collaborations items={item.collaborations} displayLength={25} /> : <Spinner color=\"primary\" />}</td>\n            <td><UserDetail user={item} /></td>\n         </tr>\n      ));\n      return renderItems;\n   };\n\n   render() {\n      let loader = [\n         { friendlyName: 'Keywords', condition: this.props.keywordsLoading, error: this.props.keywordError },\n         { friendlyName: 'Organizations', condition: this.props.orgsLoading, error: this.props.orgError },\n         { friendlyName: 'Collaborations', condition: this.props.collaborationsLoading, error: this.props.collaborationsError },\n         { friendlyName: 'University Collaborators', condition: this.props.univCollaboratorsLoading, error: this.props.univCollaboratorsError },\n      ]\n      let loadStatus = Loader.calculateLoadingState(loader);\n\n      return (\n         <>\n         {this.props.univCollaborators.length > 0 ?\n            <div style={{ position: \"relative\", zIndex: \"1000\" }}>\n               <Toast isOpen={this.props.toastOpen} style={{ position: \"fixed\", top: \"50px\", right: \"20px\" }}>\n                  <ToastHeader toggle={this.toggleToastInter} icon=\"success\">Results Loaded</ToastHeader>\n                  <ToastBody>\n                     <a href=\"#0\" onClick={this.scrollToTable}>\n                        Click here to scroll to results.\n                     </a>\n                  </ToastBody>\n               </Toast>\n            </div> : null}\n            <Loading body={loader} status={loadStatus} />\n            {(!this.props.keywordsLoading || this.props.keywords === []) && (!this.props.orgsLoading || this.props.orgs === []) && (!this.props.collaborationsLoading || this.props.collaborations === []) ? <SearchForCollaborator /> : null}\n            <Container fluid>\n               {this.props.univCollaborators.length === 0 ?\n                  <Alert color=\"info\">\n                     <h4 className=\"alert-heading\">No Results</h4>\n                     <p>\n                        Hmm, it looks like there are no results with your\n                        current query. Try a different combination.\n                  </p>\n                  </Alert> :\n                  <>\n                     <div className=\"clearfix\">\n                        {!(this.props.orgsLoading || this.props.orgError) && !(this.univCollaboratorsLoading || this.univCollaboratorsError) ?\n                           <p className=\"text-muted float-right\">Your query returned\n                           exactly {this.props.univCollaborators.length} results.\n                        </p> : 'Loading'\n                        }\n\n                     </div>\n                     <Element name=\"resultsTable\">\n                     <Table hover responsive className=\"table-curved\">\n                        <thead className=\"thead-light\">\n                           <tr>\n                              <th>Name</th>\n                              <th>Organization(s)</th>\n                              <th>Email Address</th>\n                              <th>Keyword(s)</th>\n                              <th>Collaboration(s)</th>\n                              <th>More Information</th>\n                           </tr>\n                        </thead>\n                        <tbody>\n                           {this.renderDisplayUserItems()}\n                        </tbody>\n                     </Table>\n                     </Element>\n                     <div className=\"centerd-pagination\">\n                        <PaginationWrapper pageSize={this.state.pageSize} items={this.props.univCollaborators} onChangePage={this.onChangePage} />\n                     </div>\n                  </>\n               }\n            </Container>\n         </>\n      );\n   }\n}\n\nconst mapStateToProps = state => ({\n   keywords: state.keywords.items,\n   keywordsLoading: state.keywords.loading,\n   keywordError: state.keywords.error,\n\n   orgs: state.orgs.items,\n   orgsLoading: state.orgs.loading,\n   orgError: state.orgs.error,\n\n   univCollaborators: state.univCollaborators.items,\n   univCollaboratorsLoading: state.univCollaborators.loading,\n   univCollaboratorsError: state.univCollaborators.error,\n   toastOpen: state.univCollaborators.showToast,\n\n   collaborations: state.collaborations.items,\n   collaborationsLoading: state.collaborations.loading,\n   collaborationsError: state.collaborations.error,\n})\n\nconst mapDispatchToProps = {\n   fetchKeywords,\n   fetchOrganizations,\n   fetchCollaborations,\n   toggleToast,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableView);","import axios from 'axios';\n\nexport const Actions = {\n   FETCH_SETTINGS_BEGIN: 'FETCH_SETTINGS_BEGIN',\n   FETCH_SETTINGS_SUCCESS: 'FETCH_SETTINGS_SUCCESS',\n   FETCH_SETTINGS_FAILURE: 'FETCH_SETTINGS_FAILURE',\n}\n\nexport const fetchSettingsBegin = () => ({\n   type: Actions.FETCH_SETTINGS_BEGIN\n});\n\nexport const fetchSettingsSuccess = (settings) => ({\n   \n   type: Actions.FETCH_SETTINGS_SUCCESS,\n   payload: {settings}\n})\n\nexport const fetchSettingsFailure = (error) => ({\n   type: Actions.FETCH_SETTINGS_FAILURE,\n   payload: { error }\n})\n\nexport function fetchSettings() {\n   return dispatch => {\n      dispatch(fetchSettingsBegin());\n      return axios.get('api/v1/frontendParameters/1/?format=json')\n         .then(response => {dispatch(fetchSettingsSuccess(response.data))})\n         .catch(error => dispatch(fetchSettingsFailure(error)));\n   }\n}","import './App.css';\n\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom'\n\nimport C4TableView from './4CCollaborators/TableView';\nimport TableView from './Collaborators/TableView';\n// import ComingSoon from './ComingSoon'\nimport FrontPageCards from './indexPage';\nimport Loader from './loader';\nimport Loading from './Loading'\nimport CollaboratorLinksResourcesModal from \"./CollaboratorLinksResourcesModal\";\nimport Navigation from './Navigation'\nimport NotFound from './404'\nimport UnivTableView from './universityCollaborators/TableView'\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { fetchSettings } from './actions/settingsActions'\n\nimport ParseSaveQuery from './ParseSaveQuery'\n// import DebugMessage from './DebugMessage'\n\naxios.defaults.baseURL = \"https://api.centralcoastclimate.org\"\n// axios.defaults.baseURL = \"http://192.168.86.218:8000\"\n\nclass RootContainer extends Component {\n\n   constructor(props) {\n      super(props)\n      this.state = {\n         showCollaboratorLinksResourcesModal: false\n      }\n   }\n\n   componentDidMount() {\n      this.props.fetchSettings();\n   }\n\n   handleCollaboratorLinksResourcesModalOpen = () => {\n      this.setState({\n         showCollaboratorLinksResourcesModal: true\n      })\n   }\n\n   handleCollaboratorLinksResourcesModalClose = () => {\n      this.setState({\n         showCollaboratorLinksResourcesModal: false\n      })\n   }\n\n   render() {\n      let loader = [\n         { friendlyName: 'Settings', condition: this.props.settings.loading, error: this.props.settings.error },\n      ]\n      let loadStatus = Loader.calculateLoadingState(loader);\n      return (\n         <main className=\"App content\">\n            <Loading body={loader} status={loadStatus} />\n            <CollaboratorLinksResourcesModal\n                isOpen={this.state.showCollaboratorLinksResourcesModal}\n                closeCollaboratorLinksResourcesModal={this.handleCollaboratorLinksResourcesModalClose}\n            />\n            {/* <DebugMessage /> */}\n            <Navigation\n                openCollaboratorLinksResourcesModal={this.handleCollaboratorLinksResourcesModalOpen}\n            />\n            <Switch>\n               <Route path=\"/\" exact component={FrontPageCards} />\n               <Route path=\"/save/:id?\" component={ParseSaveQuery} />\n               <Route path=\"/univCollaborator/\" exact component={UnivTableView} />\n               <Route path=\"/4CCollaborator/\" exact component={C4TableView} />\n               <Route path=\"/Collaborator\" exact component={TableView} />\n               <Route component={NotFound} status={404} />\n            </Switch>\n         </main>\n      );\n   }\n}\n\nconst mapStateToProps = state => ({\n   settings: state.settings,\n   orgCollaborators: state.C4Collaborators,\n   univCollaborators: state.univCollaborators,\n   collaborators: state.collaborators,\n})\n\nconst mapDispatchToProps = {\n   fetchSettings,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RootContainer)\n","import './App.css';\n\nimport { Route, Router } from 'react-router-dom'\n\nimport PropTypes from 'prop-types'\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactGA from 'react-ga';\nimport RootContainer from './RootContainer';\nimport { createBrowserHistory } from 'history';\n\nconst trackingId = \"UA-156443950-1\";\nReactGA.initialize(trackingId);\nReactGA.pageview(window.location.pathname + window.location.search);\n\nconst history = createBrowserHistory();\n\n// Initialize google analytics page view tracking\nhistory.listen(location => {\n   ReactGA.set({ page: location.pathname }); // Update the user's current page\n   ReactGA.pageview(location.pathname); // Record a pageview for the given page\n});\n\nconst App = ({ store }) => (\n   <Provider store={store}>\n      <Router history={history}>\n         <Route path=\"/:filter?\" component={RootContainer} />\n      </Router>\n   </Provider>\n);\n\n\nApp.propTypes = {\n   store: PropTypes.object.isRequired\n}\n\nexport default App;","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport {\n   Alert,\n   Button,\n   Nav,\n   NavItem,\n   NavLink,\n   Modal,\n   ModalHeader,\n   ModalFooter,\n   ModalBody, TabContent, TabPane, Card, CardText, CardDeck, CardBody, CardFooter, CardColumns, CardImg,\n   Spinner\n} from 'reactstrap';\nimport './App.css';\nimport './appInfo.css';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport Obfuscate from \"react-obfuscate\";\nvar base64 = require('base-64');\n\nclass AppInfo extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         hash: 'Loading',\n         loadVersionHash: true,\n         commitError: null,\n\n         license: 'Loading',\n         loadLicense: true,\n         licenseError: null,\n\n         moduleLicense: 'Loading',\n         loadModuleLicense: true,\n         moduleLicenseError: null,\n\n         activeTab: '1'\n      };\n      this.getCommitHash = this.getCommitHash.bind(this);\n      this.getLicense = this.getLicense.bind(this);\n      this.getModuleLicenses = this.getModuleLicenses.bind(this);\n      this.toggle = this.toggle.bind(this);\n   }\n\n   componentDidMount() {\n      this.getCommitHash();\n      this.getLicense();\n      this.getModuleLicenses();\n   }\n\n   getCommitHash() {\n      axios.get('https://api.github.com/repos/dgaiero/c4-website/commits/gh-pages')\n         .then(res => {\n            this.setState({ hash: res.data.sha, loadVersionHash: false });\n         })\n         .catch(err => this.setState({ commitError: err.response }))\n   }\n\n   getLicense() {\n      axios.get('https://api.github.com/repos/dgaiero/c4-website/license')\n         .then(res => {\n            this.setState({ license: res.data, loadLicense: false });\n         })\n         .catch(err => this.setState({ licenseError: err.response }))\n   }\n\n   getModuleLicenses() {\n      axios.get('https://raw.githubusercontent.com/dgaiero/c4-website/dev/webserver/c4Lookup/c4frontend/oLICENSE')\n         .then(res => {\n            this.setState({ moduleLicense: res.data, loadModuleLicense: false });\n         })\n         .catch(err => this.setState({ moduleLicenseError: err.response }))\n   }\n\n   toggle(tab) {\n      if (this.state.activeTab !== tab) {\n         this.setState({\n            activeTab: tab\n         });\n      }\n   }\n\n   tab1Content = () => {\n      return (\n         <>\n            <Alert color=\"dark\">\n               <h4 className=\"alert-heading\">Application Frontend and Backend Versions</h4>\n               <p>\n                  This application is broken up into a frontend service\n                  (this website) and a backend API service.\n                  Each service has its own version information.\n                              </p>\n               <hr />\n               <p className=\"mb-0\">\n                  When providing feedback or if you have a question or\n                  issue with this website, please make sure to refer to\n                                 <b> both</b> version tags.\n                              </p>\n            </Alert>\n\n            <div style={{ marginBottom: '16px' }}>\n               <CardDeck>\n                  <Card>\n                     <CardBody>\n                        <h5 className='cardTitle'>Backend API</h5>\n                        <CardText>\n                           <b>Branch: </b>{this.props.settings.commitBranch}< br />\n                           <b>Commit Hash: </b><code>{this.props.settings.commitHash}</code><br />\n                        </CardText>\n\n                     </CardBody>\n                     <CardFooter><a href={'https://github.com/dgaiero/c4-website/tree/' + this.props.settings.commitHash} target=\"_blank\" rel=\"noopener noreferrer\">Open in Remote</a></CardFooter>\n                  </Card>\n                  <Card>\n                     <CardBody>\n                        <h5 className='cardTitle'>Frontend Service</h5>\n                        <b>Commit Hash: </b><code>{this.state.hash}</code><br />\n\n                     </CardBody>\n                     <CardFooter><a href={'https://github.com/dgaiero/c4-website/tree/' + this.state.hash} target=\"_blank\" rel=\"noopener noreferrer\">Open in Remote</a></CardFooter>\n                  </Card>\n               </CardDeck>\n            </div>\n            Designed and developed by Dominic Gaiero (<Obfuscate email=\"4cwebsite@dgaiero.me\" />)\n         </>\n      )\n   }\n\n   tab2Content = () => {\n      return (\n         <>\n         {this.state.licenseError !== null ? \"An error occured fetching the license\" :\n            !this.state.loadLicense ? \n            <>\n               <b>This application is licensed under the {this.state.license.license.name}</b>\n               <pre className=\"license form-control\">{base64.decode(this.state.license.content)}</pre>\n            </>\n         : <Spinner color=\"primary\" />\n         }\n         </>\n      )\n   }\n\n   tab3Content = () => {\n      return (\n         <>\n            {this.state.moduleLicenseError !== null ? \"An error occured fetching the license\" :\n               !this.state.loadModuleLicense ?\n                  <>\n                     <b>The following is all of the licenses of software used in this application</b>\n                     <pre className=\"license form-control\">{this.state.moduleLicense}</pre>\n                  </>\n                  : <Spinner color=\"primary\" />\n            }\n         </>\n      )\n   }\n\n   tab4Content = () => {\n      return (\n         <>\n            <CardColumns>\n               <Card>\n                  <CardImg top width=\"100%\" src=\"https://images.unsplash.com/photo-1478486982180-2de2fafa19f9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80\" alt=\"Construction Image\" />\n                  <CardBody>\n                     <CardText><span>Photo by <a href=\"https://unsplash.com/@thatsmrbio?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Matthew Hamilton</a> on <a href=\"/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></CardText>\n                  </CardBody>\n               </Card>\n               <Card>\n                  <CardImg top width=\"100%\" src=\"https://images.unsplash.com/photo-1552664730-d307ca884978?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjE3MzYxfQ&auto=format&fit=crop&w=500&q=80\" alt=\"Collaboration Image\" />\n                  <CardBody>\n                     <CardText><span>Photo by <a href=\"https://unsplash.com/@youxventures?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">You X Ventures</a> on <a href=\"/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></CardText>\n                  </CardBody>\n               </Card>\n               <Card>\n                  <CardImg top width=\"100%\" src=\"https://images.unsplash.com/photo-1491772135384-20292e4b5ea1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80\" alt=\"Waves Image\" />\n                  <CardBody>\n                     <CardText><span>Photo by <a href=\"https://unsplash.com/@johnonolan?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">John O'Nolan</a> on <a href=\"/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></CardText>\n                  </CardBody>\n               </Card>\n               <Card>\n                  <CardImg top width=\"100%\" src=\"https://images.unsplash.com/photo-1556761175-b413da4baf72?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80\" alt=\"Waves Image\" />\n                  <CardBody>\n                     <CardText><span>Photo by <a href=\"https://unsplash.com/@austindistel?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Austin Distel</a> on <a href=\"/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></CardText>\n                  </CardBody>\n               </Card>\n               <Card>\n                  <CardImg top width=\"100%\" src=\"https://images.unsplash.com/photo-1515879218367-8466d910aaa4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80\" alt=\"Waves Image\" />\n                  <CardBody>\n                     <CardText><span>Photo by <a href=\"https://unsplash.com/@cdr6934?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Chris Ried</a> on <a href=\"/s/photos/programming?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></CardText>\n                  </CardBody>\n               </Card>\n            </CardColumns>\n         </>\n      )\n   }\n\n   render() {\n      const { openStatus, toggle } = this.props;\n      return (\n         <>\n            <Modal isOpen={openStatus} toggle={toggle} size=\"lg\">\n               <ModalHeader toggle={toggle}>Application Information</ModalHeader>\n               <ModalBody>\n                  <div>\n                     <Nav pills>\n                        <NavItem>\n                           <NavLink\n                              href=\"#0\"\n                              className={classnames({ active: this.state.activeTab === '1' })}\n                              onClick={() => { this.toggle('1'); }}>\n                              About Application\n                           </NavLink>\n                        </NavItem>\n                        <NavItem>\n                           <NavLink\n                              href=\"#0\"\n                              className={classnames({ active: this.state.activeTab === '2' })}\n                              onClick={() => { this.toggle('2'); }}>\n                              Application License\n                           </NavLink>\n                        </NavItem>\n                        <NavItem>\n                           <NavLink\n                              href=\"#0\"\n                              className={classnames({ active: this.state.activeTab === '3' })}\n                              onClick={() => { this.toggle('3'); }}>\n                              Other Licenses\n                           </NavLink>\n                        </NavItem>\n                        <NavItem>\n                           <NavLink\n                              href=\"#0\"\n                              className={classnames({ active: this.state.activeTab === '4' })}\n                              onClick={() => { this.toggle('4'); }}>\n                              Photo Credits\n                           </NavLink>\n                        </NavItem>\n                     </Nav>\n                     < br />\n                     <TabContent activeTab={this.state.activeTab}>\n                        <TabPane tabId=\"1\">\n                           {this.tab1Content()}\n                        </TabPane>\n                        <TabPane tabId=\"2\">\n                           {this.tab2Content()}\n                        </TabPane>\n                        <TabPane tabId=\"3\">\n                           {this.tab3Content()}\n                        </TabPane>\n                        <TabPane tabId=\"4\">\n                           {this.tab4Content()}\n                        </TabPane>\n                     </TabContent>\n                  </div>\n               </ModalBody>\n               <ModalFooter>\n                  <Button color=\"primary\" onClick={toggle}>Close</Button>\n               </ModalFooter>\n            </Modal>\n         </>\n      )\n   }\n\n}\n\nconst mapStateToProps = state => ({\n   settings: state.settings,\n})\n\nexport default connect(mapStateToProps)(AppInfo)","import React, { Component } from 'react';\nimport {\n   Container,\n} from 'reactstrap';\n\nimport './App.css';\nimport { NBSP } from './helper';\nimport './footer.css'\nimport AppInfo from './AppInfo'\nimport { connect } from 'react-redux';\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faInfoCircle);\n\nclass Footer extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         showAppInfoModal: false,\n      };\n   }\n   render() {\n      return (\n         <footer className=\"footer mt-auto py-3\" style={{ backgroundColor: '#F8F9FA' }}>\n            <Container fluid className=\"clearfix\">\n               <div className=\"float-left\">\n                  <AppInfo\n                     openStatus={this.state.showAppInfoModal}\n                     toggle={() => this.setState(\n                        {\n                           showAppInfoModal: !this.state.showAppInfoModal\n                        })}\n                  />\n                  <a\n                     href=\"#0\"\n                     onClick={\n                        () => this.setState(\n                           {\n                              showAppInfoModal: !this.state.showAppInfoModal\n                           })\n                     }\n                  ><FontAwesomeIcon icon=\"info-circle\" /></a>\n                  {NBSP}<span className=\"text-muted\">|</span>{NBSP}\n                  <span className=\"text-muted\">Copyright {'\\u00A9'} 2019 Central Coast Climate Collaborative </span>\n               </div>\n               <div className=\"float-right\">\n                  <p className=\"c4-icon text-muted\"></p>\n                  {NBSP}\n                  <a href=\"https://www.centralcoastclimate.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Visit main website</a>\n               </div>\n            </Container>\n         </footer>\n      )\n   }\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(Footer)","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n   window.location.hostname === 'localhost' ||\n   // [::1] is the IPv6 localhost address.\n   window.location.hostname === '[::1]' ||\n   // 127.0.0.1/8 is considered localhost for IPv4.\n   window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n   )\n);\n\nexport default function register() {\n   if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n         // Our service worker won't work if PUBLIC_URL is on a different origin\n         // from what our page is served on. This might happen if a CDN is used to\n         // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n         return;\n      }\n\n      window.addEventListener('load', () => {\n         const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n         if (isLocalhost) {\n            // This is running on localhost. Lets check if a service worker still exists or not.\n            checkValidServiceWorker(swUrl);\n\n            // Add some additional logging to localhost, pointing developers to the\n            // service worker/PWA documentation.\n            navigator.serviceWorker.ready.then(() => {\n               console.log(\n                  'This web app is being served cache-first by a service ' +\n                  'worker. To learn more, visit https://goo.gl/SC7cgQ'\n               );\n            });\n         } else {\n            // Is not local host. Just register service worker\n            registerValidSW(swUrl);\n         }\n      });\n   }\n}\n\nfunction registerValidSW(swUrl) {\n   navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n         registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n               if (installingWorker.state === 'installed') {\n                  if (navigator.serviceWorker.controller) {\n                     // At this point, the old content will have been purged and\n                     // the fresh content will have been added to the cache.\n                     // It's the perfect time to display a \"New content is\n                     // available; please refresh.\" message in your web app.\n                     console.log('New content is available; please refresh.');\n                  } else {\n                     // At this point, everything has been precached.\n                     // It's the perfect time to display a\n                     // \"Content is cached for offline use.\" message.\n                     console.log('Content is cached for offline use.');\n                  }\n               }\n            };\n         };\n      })\n      .catch(error => {\n         console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n   // Check if the service worker can be found. If it can't reload the page.\n   fetch(swUrl)\n      .then(response => {\n         // Ensure service worker exists, and that we really are getting a JS file.\n         if (\n            response.status === 404 ||\n            response.headers.get('content-type').indexOf('javascript') === -1\n         ) {\n            // No service worker found. Probably a different app. Reload the page.\n            navigator.serviceWorker.ready.then(registration => {\n               registration.unregister().then(() => {\n                  window.location.reload();\n               });\n            });\n         } else {\n            // Service worker found. Proceed as normal.\n            registerValidSW(swUrl);\n         }\n      })\n      .catch(() => {\n         console.log(\n            'No internet connection found. App is running in offline mode.'\n         );\n      });\n}\n\nexport function unregister() {\n   if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n         registration.unregister();\n      });\n   }\n}","import { C4Actions } from '../actions/searchFor4CMemberActions'\n\nconst initialState = {\n   items: [],\n   loading: true,\n   error: null,\n   url: '',\n   'selectedQueryStatements': {\n      activityKeywords: [],\n      topicalKeywords: [],\n      collaborations: [],\n      selectedOrganization: [],\n   },\n   showToast: false,\n}\n\nexport default function C4MembersReducer(state = initialState, action) {\n   switch(action.type) {\n      case C4Actions.C4_FETCH_COLLABORATORS_BEGIN:\n         return {\n            ...state,\n            loading: true,\n            error: null,\n         }\n      case C4Actions.C4_FETCH_COLLABORATORS_SUCCESS:\n         const collaborators = action.payload.collaborators.filter(user => user.userType !== 'US');\n         return {\n            ...state,\n            loading: false,\n            items: collaborators,\n            showToast: collaborators.length > 0 ? true : false,\n         }\n      case C4Actions.C4_FETCH_COLLABORATORS_FAILURE:\n         return {\n            ...state,\n            loading: false,\n            error: action.payload.error,\n            items: [],\n         }\n      case C4Actions.C4_SET_QUERY_STATEMENT:\n         return {\n            ...state,\n            selectedQueryStatements: action.payload.query,\n         }\n      case C4Actions.C4_SET_URL:\n         return {\n            ...state,\n            url: action.payload.url,\n         }\n      case C4Actions.C4_TOGGLE_TOAST:\n         return {\n            ...state,\n            showToast: !state.showToast,\n         }\n      default:\n         return state;\n   }\n}","import { Actions } from '../actions/collaborationsActions'\n\nconst initialState = {\n   items: [],\n   loading: true,\n   error: null\n}\n\nexport default function collaborationsReducer(state = initialState, action) {\n   switch (action.type) {\n      case Actions.FETCH_COLLABORATIONS_BEGIN:\n         return {\n            ...state,\n            loading: true,\n            error: null,\n         }\n      case Actions.FETCH_COLLABORATIONS_SUCCESS:\n         return {\n            ...state,\n            loading: false,\n            items: action.payload.collaborations,\n         }\n      case Actions.FETCH_COLLABORATIONS_FAILURE:\n         return {\n            ...state,\n            loading: false,\n            error: action.payload.error,\n            items: [],\n         }\n      default:\n         return state;\n   }\n}","import {Actions} from '../actions/keywordActions'\n\nconst initialState = {\n   items: [],\n   loading: true,\n   error: null\n}\n\nexport default function keywordsReducer(state = initialState, action) {\n   switch(action.type) {\n      case Actions.FETCH_KEYWORDS_BEGIN:\n         return {\n            ...state,\n            loading: true,\n            error: null,\n         }\n      case Actions.FETCH_KEYWORDS_SUCCESS:\n         return {\n            ...state,\n            loading: false,\n            items: action.payload.keywords,\n         }\n      case Actions.FETCH_KEYWORDS_FAILURE:\n         return {\n            ...state,\n            loading: false,\n            error: action.payload.error,\n            items: [],\n         }\n      default:\n         return state;\n   }\n}","import {Actions} from '../actions/menuActions'\n\nconst initialState = {\n   searchForCollaborator: false,\n   devModeOpen: false,\n   navOpen: false,\n}\n\nexport default function menuReducer(state = initialState, action) {\n   switch(action.type) {\n      case Actions.TOGGLE_SEARCH_FOR_COLLABORATOR:\n         return {\n            ...state,\n            searchForCollaborator: !state.searchForCollaborator,\n         }\n      case Actions.TOGGLE_DEV_MODE:\n         return {\n            ...state,\n            devModeOpen: !state.devModeOpen\n         };\n      case Actions.TOGGLE_NAV_BAR:\n         return {\n            ...state,\n            navOpen: !state.navOpen\n         }\n      default:\n         return state;\n   }\n}","import {Actions} from '../actions/organizationActions'\n\nconst initialState = {\n   items: [],\n   loading: true,\n   error: null\n}\n\nexport default function organizationsReducer(state = initialState, action) {\n   switch(action.type) {\n      case Actions.FETCH_ORGANIZATIONS_BEGIN:\n         return {\n            ...state,\n            loading: true,\n            error: null,\n         }\n      case Actions.FETCH_ORGANIZATIONS_SUCCESS:\n         return {\n            ...state,\n            loading: false,\n            items: action.payload.organizations,\n         }\n      case Actions.FETCH_ORGANIZATIONS_FAILURE:\n         return {\n            ...state,\n            loading: false,\n            error: action.payload.error,\n            items: [],\n         }\n      default:\n         return state;\n   }\n}","import { Actions } from '../actions/settingsActions'\n\nconst initialState = {\n   siteHeading: 'Loading...',\n   frontHeading: 'Loading...',\n   frontMessage: 'Loading...',\n   frontMessageSubText: 'Loading...',\n   additionEmailAddress: 'Loading...',\n   commitBranch: 'master',\n   commitHash: 'Loading...',\n   commitMessage: 'Loading...',\n   loading: true,\n   error: null,\n}\n\nexport default function settingsReducer(state = initialState, action) {\n   switch(action.type) {\n      case Actions.FETCH_SETTINGS_BEGIN:\n         return {\n            ...state,\n            loading: true,\n            error: null,\n         }\n      case Actions.FETCH_SETTINGS_SUCCESS:\n         return {\n            ...state,\n            ...action.payload.settings,\n            loading: false,\n         }\n      case Actions.FETCH_SETTINGS_FAILURE:\n         return {\n            ...state,\n            loading: false,\n            error: action.payload.error,\n            items: [],\n         }\n      default:\n         return state;\n   }\n}","import { UnivActions } from '../actions/searchForUnivCollaboratorActions'\n\nconst initialState = {\n   items: [],\n   loading: true,\n   error: null,\n   url: '',\n   'selectedQueryStatements': {\n      activityKeywords: [],\n      topicalKeywords: [],\n      collaborations: [],\n      selectedUniversities: [],\n   },\n   showToast: false,\n}\n\nexport default function univCollaboratorsReducer(state = initialState, action) {\n   switch(action.type) {\n      case UnivActions.UNIV_FETCH_COLLABORATORS_BEGIN:\n         return {\n            ...state,\n            loading: true,\n            error: null,\n         }\n      case UnivActions.UNIV_FETCH_COLLABORATORS_SUCCESS:\n         const collaborators = action.payload.collaborators.filter(user => user.userType === 'US');\n         return {\n            ...state,\n            loading: false,\n            items: collaborators,\n            showToast: collaborators.length > 0 ? true : false,\n         }\n      case UnivActions.UNIV_FETCH_COLLABORATORS_FAILURE:\n         return {\n            ...state,\n            loading: false,\n            error: action.payload.error,\n            items: [],\n         }\n      case UnivActions.UNIV_SET_QUERY_STATEMENT:\n         return {\n            ...state,\n            selectedQueryStatements: action.payload.query,\n         }\n      case UnivActions.UNIV_SET_URL:\n         return {\n            ...state,\n            url: action.payload.url,\n         }\n      case UnivActions.UNIV_TOGGLE_TOAST:\n         return {\n            ...state,\n            showToast: !state.showToast,\n         }\n      default:\n         return state;\n   }\n}","import { CollabActions } from '../actions/searchForCollaboratorActions'\n\nconst initialState = {\n   items: [],\n   loading: true,\n   error: null,\n   url: '',\n   'selectedQueryStatements': {\n      activityKeywords: [],\n      topicalKeywords: [],\n      collaborations: [],\n      selectedOrganization: [],\n   },\n   showToast: false,\n}\n\nexport default function collaboratorsReducer(state = initialState, action) {\n   switch(action.type) {\n      case CollabActions.FETCH_COLLABORATORS_BEGIN:\n         return {\n            ...state,\n            loading: true,\n            error: null,\n         }\n      case CollabActions.FETCH_COLLABORATORS_SUCCESS:\n         const collaborators = action.payload.collaborators.filter(user => user.userType === 'US' || user.userType !== 'US');\n         return {\n            ...state,\n            loading: false,\n            items: collaborators,\n            showToast: collaborators.length > 0 ? true : false,\n         }\n      case CollabActions.FETCH_COLLABORATORS_FAILURE:\n         return {\n            ...state,\n            loading: false,\n            error: action.payload.error,\n            items: [],\n         }\n      case CollabActions.SET_QUERY_STATEMENT:\n         return {\n            ...state,\n            selectedQueryStatements: action.payload.query,\n         }\n      case CollabActions.SET_URL:\n         return {\n            ...state,\n            url: action.payload.url,\n         }\n      case CollabActions.TOGGLE_TOAST:\n         return {\n            ...state,\n            showToast: !state.showToast,\n         }\n      default:\n         return state;\n   }\n}","import C4Collaborators from './searchFor4CMemberReducer'\nimport collaborations from './collaborationsReducer'\nimport {combineReducers} from 'redux'\nimport keywords from './keywordReducer'\nimport nav from './menuReducer'\nimport orgs from './organizationReducer'\nimport settings from './settingsReducer'\nimport univCollaborators from './searchForUnivCollaboratorReducer';\nimport collaborators from './searchForCollaboratorReducer';\n\nexport default combineReducers({\n   settings,\n   keywords,\n   orgs,\n   nav,\n   univCollaborators,\n   C4Collaborators,\n   collaborations,\n   collaborators,\n});","import 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\n\nimport { applyMiddleware, createStore } from 'redux'\n\nimport App from './App';\nimport Footer from './Footer'\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport registerServiceWorker from './registerServiceWorker';\nimport rootReducer from './reducers/rootReducer'\nimport thunk from 'redux-thunk';\n\nconst middleware = [\n   thunk,\n];\n\nconst composeEnhancers = composeWithDevTools({\n   trace: true,\n   traceLimit: 55,\n})\n\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\n   applyMiddleware(...middleware),\n));\n\nReactDOM.render(\n   [<App store={store} key={1} />, <Provider store={store} key={2} ><Footer store={store}/></Provider>], document.getElementById('root'));\nregisterServiceWorker();","import axios from \"axios\";\n\nexport const C4Actions = {\n   C4_FETCH_COLLABORATORS_BEGIN: 'C4_FETCH_COLLABORATORS_BEGIN',\n   C4_FETCH_COLLABORATORS_SUCCESS: 'C4_FETCH_COLLABORATORS_SUCCESS',\n   C4_FETCH_COLLABORATORS_FAILURE: 'C4_FETCH_COLLABORATORS_FAILURE',\n   C4_SET_QUERY_STATEMENT: 'C4_SET_QUERY_STATEMENT',\n   C4_SET_URL: 'SET_URL',\n   C4_TOGGLE_TOAST: 'C4_TOGGLE_TOAST',\n}\n\nexport const fetch4CMembersBegin = () => ({\n   type: C4Actions.C4_FETCH_COLLABORATORS_BEGIN\n});\n\nexport const fetch4CMembersSuccess = (collaborators) => ({\n   type: C4Actions.C4_FETCH_COLLABORATORS_SUCCESS,\n   payload: { collaborators }\n})\n\nexport const fetch4CMembersFailure = (error) => ({\n   type: C4Actions.C4_FETCH_COLLABORATORS_FAILURE,\n   payload: { error }\n})\n\nexport const setURL = (URL) => ({\n   type: C4Actions.C4_SET_URL,\n   payload: { URL }\n})\n\nexport const setQueryStatement = (query) => ({\n   type: C4Actions.C4_SET_QUERY_STATEMENT,\n   payload: { query }\n})\n\nexport const toggleToast = () => ({\n   type: C4Actions.C4_TOGGLE_TOAST\n})\n\nexport const fetch4CMembers = (url) => {\n   return dispatch => {\n      dispatch(fetch4CMembersBegin());\n\n      axios.get(url)\n         .then (res => {dispatch(fetch4CMembersSuccess(res.data));})\n         .catch(err => { dispatch(fetch4CMembersFailure(err));});\n   }\n}","import axios from \"axios\";\n\nexport const UnivActions = {\n   UNIV_FETCH_COLLABORATORS_BEGIN: 'UNIV_FETCH_COLLABORATORS_BEGIN',\n   UNIV_FETCH_COLLABORATORS_SUCCESS: 'UNIV_FETCH_COLLABORATORS_SUCCESS',\n   UNIV_FETCH_COLLABORATORS_FAILURE: 'UNIV_FETCH_COLLABORATORS_FAILURE',\n   UNIV_SET_QUERY_STATEMENT: 'UNIV_SET_QUERY_STATEMENT',\n   UNIV_SET_URL: 'UNIV_SET_URL',\n   UNIV_TOGGLE_TOAST: 'UNIV_TOGGLE_TOAST',\n}\n\nexport const fetchUnivCollaboratorsBegin = () => ({\n   type: UnivActions.UNIV_FETCH_COLLABORATORS_BEGIN\n});\n\nexport const fetchUnivCollaboratorsSuccess = (collaborators) => ({\n   type: UnivActions.UNIV_FETCH_COLLABORATORS_SUCCESS,\n   payload: { collaborators }\n})\n\nexport const fetchUnivCollaboratorsFailure = (error) => ({\n   type: UnivActions.UNIV_FETCH_COLLABORATORS_FAILURE,\n   payload: { error }\n})\n\nexport const setURL = (URL) => ({\n   type: UnivActions.UNIV_SET_URL,\n   payload: { URL }\n})\n\nexport const setUnivQueryStatement = (query) => ({\n   type: UnivActions.UNIV_SET_QUERY_STATEMENT,\n   payload: { query }\n})\n\nexport const toggleToast = () => ({\n   type: UnivActions.UNIV_TOGGLE_TOAST\n})\n\nexport const fetchUnivCollaborators = (url) => {\n   return dispatch => {\n      dispatch(fetchUnivCollaboratorsBegin());\n      axios.get(url)\n         .then (res => {dispatch(fetchUnivCollaboratorsSuccess(res.data));})\n         .catch(err => { dispatch(fetchUnivCollaboratorsFailure(err));});\n   }\n}","import { Helmet } from 'react-helmet'\nimport React from 'react'\n\nexport const delimiter = \"|\"\nexport const appTitle = \"4C Collaborator Lookup\"\n\nexport default function Title(props) {\n   return (\n      <Helmet>\n         <title>{props.name} {delimiter} {appTitle}</title>\n      </Helmet>\n   )\n}"],"sourceRoot":""}