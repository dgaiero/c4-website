{"version":3,"sources":["AdditionalDataModal.js","LoadingModal.js","Loading.js","Pagination.js","actions/keywordActions.js","actions/organizationActions.js","helper.js","Keywords.js","Organizations.js","User.js","copyQueryToClipboard.js","universityCollaborators/searchForUniversityForm.js","actions/menuActions.js","actions/searchForCollaboratorActions.js","universityCollaborators/searchForUniversity.js","loader.js","TableView.js","Navigation.js","DebugMessage.js","actions/settingsActions.js","WelcomeJumbotron.js","indexPage.js","universityCollaborators/parseSaveQuery.js","logo.js","404.js","RootContainer.js","App.js","Footer.js","reducers/settingsReducer.js","reducers/keywordReducer.js","reducers/organizationReducer.js","reducers/menuReducer.js","reducers/searchForCollaboratorReducer.js","reducers/rootReducer.js","registerServiceWorker.js","index.js"],"names":["AdditionalDataModal","_this$props","this","props","openStatus","toggle","size","title","body","react_default","a","createElement","Modal","isOpen","centered","ModalHeader","ModalBody","ModalFooter","Button","color","onClick","Component","memberSearchModal","Loading","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","errorModalOpenToggle","setState","errorModalOpenFlag","state","status","errorModalTitle","errorModalBody","loadingItems","loadingStatus","friendlyName","condition","error","_this2","Spinner","href","key","showErrorInfo","toString","stack","_this3","Fragment","AdditionalDataModal_AdditionalDataModal","LoadingModal_memberSearchModal","map","loadInfo","loadingText","connect","settings","keywords","orgs","collaborators","PaginationWrapper","pager","items","length","setPage","initialPage","prevProps","prevState","page","pageSize","totalPages","getPager","pageOfItems","slice","startIndex","endIndex","onChangePage","totalItems","currentPage","startPage","endPage","Math","ceil","min","pages","toConsumableArray","Array","keys","i","Pagination","aria-label","PaginationItem","disabled","PaginationLink","first","previous","index","active","next","last","React","defaultProps","Actions","FETCH_KEYWORDS_BEGIN","FETCH_KEYWORDS_SUCCESS","FETCH_KEYWORDS_FAILURE","fetchKeywordsBegin","type","fetchKeywordsSuccess","payload","fetchKeywordsFailure","FETCH_ORGANIZATIONS_BEGIN","FETCH_ORGANIZATIONS_SUCCESS","FETCH_ORGANIZATIONS_FAILURE","fetchOrganizationsBegin","fetchOrganizationsSuccess","organizations","fetchOrganizationsFailure","toTitleCase","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","NBSP","getKeywordType","shortKeywordType","name","getKeywordSortOrder","shortKeywordSortOrder","Keywords","buildKeywordOverviewModalBody","modalBody","keywordID","push","ListGroupItem","tag","showKeywordExtendedData","action","keywordName","ListGroup","buildDisplayText","displayText","keywordIDs","substring","displayLength","showKeywordOverviewModal","keywordOverviewModalTitle","keywordOverviewModalBody","showKeywordDetailModal","keywordDetailModalTitle","keywordDetailModalBody","id","keywordInfo","Badge","keywordType","sortOrder","keywordDescription","keywordsLoading","loading","keywordError","getOrgType","shortOrgType","Organizations","buildOrganizationOverviewModalBody","organizationID","showOrgExtendedData","orgNameUnique","organizationIDs","showOrganizationOverviewModal","organizationOverviewModalTitle","organizationOverviewModalBody","showOrganizationDetailModal","organizationDetailModalTitle","organizationDetailModalBody","orgID","orgInfo","orgType","website","outline","target","rel","orgsLoading","orgError","getUserTypes","shortUserType","library","add","faInfo","UserDetail","showUserDetailModal","user","firstName","lastName","userType","emailAddress","jobTitle","description","split","userDetailModalTitle","userDetailModalBody","showUserDetails","index_es","icon","base64","require","CopyQueryToClipboard","copyCode","copyURL","query","protocol","window","location","host","encodedQuery","encode","URL","concat","InputGroup","Input","placeholder","InputGroupAddon","addonType","lib","text","onCopy","UncontrolledPopover","trigger","placement","PopoverHeader","PopoverBody","getKeywords","_callee","regenerator_default","wrap","_context","prev","axios","get","abrupt","sent","t0","console","stop","parseKeywordData","_callee2","keywordLow","keywordMedium","keywordHigh","keywordLowNormalized","keywordMediumNormalized","keywordHighNormalized","keywordOptionData","_context2","data","keyword","label","value","options","isEmpty","empty","queryData","activityKeywords","topicalKeywords","selectedUniversities","getUnivertisyTypes","newRequest","then","response","handleChange","e","_e$target","checked","log","objectSpread","defineProperty","selectedQuery","validate","emailState","selectedOption","modal","dropdownOpen","copyToClipBoardToggle","bind","assertThisInitialized","handleSubmit","syntheticEvent","preventDefault","submitHandler","Form","onSubmit","Col","FormGroup","Label","react_select_browser_esm","ref","cacheOptions","defaultOptions","loadOptions","onChange","val","isMulti","isSearchable","autoBlur","closeOnSelect","closeMenuOnSelect","FormText","Row","Dropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","divider","copyQueryToClipboard_CopyQueryToClipboard","buildQueryString","TOGGLE_DEV_MODE","TOGGLE_NAV_BAR","TOGGLE_SEARCH_FOR_COLLABORATOR","toggleDevMode","toggleSearchForCollaborator","FETCH_COLLABORATORS_BEGIN","FETCH_COLLABORATORS_SUCCESS","FETCH_COLLABORATORS_FAILURE","SET_QUERY_STATEMENT","GET_URL","queryString","buildURL","item","org","url","params","SearchForCollaborator","selectedQueryStatements","history","fetchCollaborators","readParams","orgsA","aKey","tKey","parsed","parse","search","keyA","isArray","keyID","keyT","orgL","Jumbotron","fluid","Container","className","searchForUniversityForm_memberSearchModal","mapDispatchToProps","dispatch","res","catch","err","withRouter","nav","Loader","pair","values","loader","every","x","TableView","renderDisplayUserItems","pageItems","scope","src_Organizations","organization","src_Keywords","User","fetchKeywords","fetchOrganizations","collaboratorsLoading","collaboratorsError","loadStatus","calculateLoadingState","src_Loading","searchForUniversity","Table","hover","responsive","src_Pagination","Navigation","Navbar","light","expand","NavbarBrand","RRNavLink","exact","to","siteHeading","NavbarToggler","toggleNavBar","Collapse","navOpen","navbar","Nav","NavItem","NavLink","activeClassName","commitBranch","devModeOpen","DebugMessage","navIsOpen","Alert","commitMessage","commitHash","FETCH_SETTINGS_BEGIN","FETCH_SETTINGS_SUCCESS","FETCH_SETTINGS_FAILURE","fetchSettingsBegin","fetchSettingsSuccess","fetchSettingsFailure","WelcomeJumbotron","frontHeading","frontMessage","frontMessageSubText","additionEmailAddress","UnderConstructionCard","Card","style","border","overflow","borderRadius","z-index","height","position","CardBody","CardText","CardFooter","LookingForCollaboratorCard","FrontPageCards","src_WelcomeJumbotron","marginBottom","CardDeck","indexPage_LookingForCollaboratorCard","indexPage_UnderConstructionCard","ParseSaveQuery","_ref","match","pathname","decoded_query","decode","logo","viewBox","d","NotFound","defaults","baseURL","RootContainer","fetchSettings","src_DebugMessage","src_Navigation","react_router","path","component","App","store","es","react_router_dom","Footer","backgroundColor","initialState","searchForCollaborator","combineReducers","arguments","undefined","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","applyMiddleware","thunk","createStore","createStoreWithMiddleware","rootReducer","ReactDOM","render","src_App_0","src_Footer","document","getElementById","process","origin","addEventListener","fetch","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","unregisterServiceWorker"],"mappings":"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","file":"static/js/main.7904ff70.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n   Button, Modal, ModalHeader, ModalBody, ModalFooter,\r\n} from 'reactstrap';\r\nimport './Modal.css';\r\n\r\nexport default class AdditionalDataModal extends Component {\r\n   \r\n   /* Passed in:\r\n      props:\r\n         - title\r\n         - body\r\n    */\r\n\r\n   render() {\r\n      const { openStatus, toggle, size, title, body } = this.props;\r\n      return (\r\n         <Modal isOpen={openStatus} toggle={toggle} centered size={size}>\r\n            <ModalHeader toggle={toggle}>{title}</ModalHeader>\r\n            <ModalBody>\r\n               {body}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" onClick={toggle}>Close</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      );\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n   Modal, ModalHeader, ModalBody,\r\n} from 'reactstrap';\r\nimport './Modal.css';\r\n\r\nexport default class memberSearchModal extends Component {\r\n   \r\n   /* Passed in:\r\n      props:\r\n         - title\r\n         - body\r\n    */\r\n\r\n   render() {\r\n      const { openStatus, size } = this.props;\r\n      return (\r\n         <Modal isOpen={openStatus} centered size={size}>\r\n            <ModalHeader>{this.props.title}</ModalHeader>\r\n            <ModalBody>\r\n               {this.props.body}\r\n            </ModalBody>\r\n         </Modal>\r\n      );\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n   Spinner,\r\n} from 'reactstrap';\r\nimport ErrorModal from './AdditionalDataModal';\r\nimport LoadingModal from './LoadingModal'\r\nimport './App.css';\r\nimport { connect } from 'react-redux'\r\n// import Loader from './Loader'\r\n\r\n\r\nclass Loading extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         status: false,\r\n         errorModalOpenFlag: false,\r\n         errorModalTitle: '',\r\n         errorModalBody: '',\r\n         loadingItems: {},\r\n         loadingStatus: false,\r\n      }\r\n      // this.addLoadItem = this.addLoadItem.bind(this);\r\n      // this.getLoadingItems = this.getLoadingItems.bind(this);\r\n      // this.loadingState = this.loadingState.bind(this);\r\n      // this.calculateLoadingState = this.calculateLoadingState.bind(this);\r\n   }\r\n\r\n   // static addLoadItem(key, value) {\r\n   //    var pair = { [key]: value }\r\n   //    this.setState((prevState) => {\r\n   //       return { loadingItems: { ...prevState.loadingItems, ...pair},loadingStatus: this.calculateLoadingState() }\r\n   //    })\r\n   //    // this.setState({ loadingItems: { ...this.loadingItems, ...pair }});\r\n   //    // this.loadingStatus = this.calculateLoadingState();\r\n   // }\r\n\r\n   // static getLoadingItems() {\r\n   //    return Object.values(this.state.loadingItems)\r\n   // }\r\n\r\n   // static loadingState() {\r\n   //    return this.state.loadingStatus;\r\n   // }\r\n\r\n   // static calculateLoadingState() {\r\n   //    let openStatus = []\r\n   //    let loadValues = Object.values(this.loadingItems)\r\n   //    loadValues.map(loadInfo => openStatus.push(loadInfo.condition, loadInfo.error !== null))\r\n   //    openStatus = openStatus.every(x => x === false);\r\n   //    return openStatus\r\n   // }\r\n\r\n   // shouldComponentUpdate(prevProps) {\r\n   //    console.log(prevProps.status)\r\n   //    console.log(this.props.status)\r\n   //    if (prevProps.status !== this.props.status) {\r\n   //       return true;\r\n   //    }\r\n   //    return false;\r\n   // }\r\n\r\n   // componentDidUpdate(prevProps) {\r\n   //    if (prevProps.status !== this.props.status) {\r\n   //       this.setState({ status: this.props.status });\r\n   //    }\r\n   // }\r\n\r\n   // componentWillReceiveProps({ status }) {\r\n   //    this.setState({ ...this.state, status: Loader.loadingState() })\r\n   // }\r\n\r\n   loadingText(friendlyName, condition, error) {\r\n      let status = <Spinner color=\"primary\" size=\"sm\" />\r\n      if (error !== null) {\r\n         status = <a href=\"#0\" key=\"ERROR\" onClick={() => this.showErrorInfo(error.toString(), <code>{error.stack.toString()}</code>)}>Error</a>\r\n      }\r\n      else if (condition === false) {\r\n         status = 'done'\r\n      }\r\n\r\n      return (condition === false && error === null) ? null : <div key={friendlyName}>Loading {friendlyName}... {status}</div>\r\n\r\n   }\r\n\r\n   showErrorInfo(title, body) {\r\n      this.setState({ errorModalTitle: title, errorModalBody: body, errorModalOpenFlag: !this.state.errorModalOpenFlag});\r\n   }\r\n\r\n   errorModalOpenToggle = () => {\r\n      this.setState({ errorModalOpenFlag: !this.state.errorModalOpenFlag });\r\n   };\r\n\r\n\r\n   render() {\r\n      const {body, status} = this.props;\r\n      // console.log(status);\r\n      return (\r\n         <>\r\n         <ErrorModal\r\n            openStatus={this.state.errorModalOpenFlag}\r\n            title={this.state.errorModalTitle}\r\n            body={this.state.errorModalBody}\r\n            toggle={this.errorModalOpenToggle}\r\n            size={'lg'}\r\n         />\r\n         \r\n         <LoadingModal\r\n            openStatus={!status}\r\n            title={<div>Loading Components</div>}\r\n            body={body.map(loadInfo => this.loadingText(loadInfo.friendlyName, loadInfo.condition, loadInfo.error))}\r\n         />\r\n         </>\r\n      )\r\n   }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   settings: state.settings,\r\n   keywords: state.keywords,\r\n   orgs: state.orgs,\r\n   collaborators: state.collaborators,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Loading)","/*\r\n * Pagination component from @cornflourblue on github\r\n * https://github.com/cornflourblue/react-pagination-example\r\n *\r\n * MIT License\r\n * \r\n * Copyright (c) 2017 Jason Watmore\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n * \r\n * The above copyright notice and this permission notice shall be included in \r\n * all copies or substantial portions of the Software.\r\n * \r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\r\n\r\nconst propTypes = {\r\n   items: PropTypes.array.isRequired,\r\n   onChangePage: PropTypes.func.isRequired,\r\n   initialPage: PropTypes.number,\r\n   pageSize: PropTypes.number\r\n}\r\n\r\nconst defaultProps = {\r\n   initialPage: 1,\r\n   pageSize: 30\r\n}\r\n\r\nclass PaginationWrapper extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { pager: {} };\r\n   }\r\n\r\n   componentWillMount() {\r\n      // set page if items array isn't empty\r\n      if (this.props.items && this.props.items.length) {\r\n         this.setPage(this.props.initialPage);\r\n      }\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState) {\r\n      // reset page if items array has changed\r\n      if (this.props.items !== prevProps.items) {\r\n         this.setPage(this.props.initialPage);\r\n      }\r\n   }\r\n\r\n   setPage(page) {\r\n      var { items, pageSize } = this.props;\r\n      var pager = this.state.pager;\r\n\r\n      if (page < 1 || page > pager.totalPages) {\r\n         return;\r\n      }\r\n\r\n      // get new pager object for specified page\r\n      pager = this.getPager(items.length, page, pageSize);\r\n\r\n      // get new page of items from items array\r\n      var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\r\n\r\n      // update state\r\n      this.setState({ pager: pager });\r\n\r\n      // call change page function in parent component\r\n      this.props.onChangePage(pageOfItems);\r\n   }\r\n\r\n   getPager(totalItems, currentPage, pageSize) {\r\n      // default to first page\r\n      currentPage = currentPage || 1;\r\n\r\n      // default page size is 10\r\n      pageSize = pageSize || 10;\r\n\r\n      // calculate total pages\r\n      var totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n      var startPage, endPage;\r\n      if (totalPages <= 10) {\r\n         // less than 10 total pages so show all\r\n         startPage = 1;\r\n         endPage = totalPages;\r\n      } else {\r\n         // more than 10 total pages so calculate start and end pages\r\n         if (currentPage <= 6) {\r\n            startPage = 1;\r\n            endPage = 10;\r\n         } else if (currentPage + 4 >= totalPages) {\r\n            startPage = totalPages - 9;\r\n            endPage = totalPages;\r\n         } else {\r\n            startPage = currentPage - 5;\r\n            endPage = currentPage + 4;\r\n         }\r\n      }\r\n\r\n      // calculate start and end item indexes\r\n      var startIndex = (currentPage - 1) * pageSize;\r\n      var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n      // create an array of pages to ng-repeat in the pager control\r\n      var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\r\n\r\n      // return object with all pager properties required by the view\r\n      return {\r\n         totalItems: totalItems,\r\n         currentPage: currentPage,\r\n         pageSize: pageSize,\r\n         totalPages: totalPages,\r\n         startPage: startPage,\r\n         endPage: endPage,\r\n         startIndex: startIndex,\r\n         endIndex: endIndex,\r\n         pages: pages\r\n      };\r\n   }\r\n\r\n   render() {\r\n      var pager = this.state.pager;\r\n\r\n      if (!pager.pages || pager.pages.length <= 1) {\r\n         // don't display pager if there is only 1 page\r\n         return null;\r\n      }\r\n\r\n      return (\r\n         <Pagination aria-label=\"pagination\">\r\n\r\n            <PaginationItem disabled={pager.currentPage === 1 ? true : false}>\r\n               <PaginationLink first href=\"#0\" onClick={() => this.setPage(1)}/>\r\n            </PaginationItem>\r\n\r\n            <PaginationItem disabled={pager.currentPage === 1 ? true : false}>\r\n               <PaginationLink previous href=\"#0\" onClick={() => this.setPage(pager.currentPage - 1)} />\r\n            </PaginationItem>\r\n\r\n            {pager.pages.map((page, index) =>\r\n               <PaginationItem key={index} active={pager.currentPage === page ? true : false}>\r\n                  <PaginationLink href=\"#0\" onClick={() => this.setPage(page)}>{page}</PaginationLink>\r\n               </PaginationItem>\r\n            )}\r\n\r\n            <PaginationItem disabled={pager.currentPage === pager.totalPages ? true : false}>\r\n               <PaginationLink next href=\"#0\" onClick={() => this.setPage(pager.currentPage + 1)} />\r\n            </PaginationItem>\r\n\r\n            <PaginationItem disabled={pager.currentPage === pager.totalPages ? true : false}>\r\n               <PaginationLink last href=\"#0\" onClick={() => this.setPage(pager.totalPages)} />\r\n            </PaginationItem>\r\n\r\n         </Pagination>\r\n\r\n      );\r\n   }\r\n}\r\n\r\nPaginationWrapper.propTypes = propTypes;\r\nPaginationWrapper.defaultProps = defaultProps;\r\nexport default PaginationWrapper;","\r\nimport axios from \"axios\";\r\n\r\nexport const Actions = {\r\n   FETCH_KEYWORDS_BEGIN: 'FETCH_KEYWORDS_BEGIN',\r\n   FETCH_KEYWORDS_SUCCESS: 'FETCH_KEYWORDS_SUCCESS',\r\n   FETCH_KEYWORDS_FAILURE: 'FETCH_KEYWORDS_FAILURE'\r\n}\r\n\r\nexport const fetchKeywordsBegin = () => ({\r\n   type: Actions.FETCH_KEYWORDS_BEGIN\r\n});\r\n\r\nexport const fetchKeywordsSuccess = (keywords) => ({\r\n   type: Actions.FETCH_KEYWORDS_SUCCESS,\r\n   payload: { keywords }\r\n})\r\n\r\nexport const fetchKeywordsFailure = (error) => ({\r\n   type: Actions.FETCH_KEYWORDS_FAILURE,\r\n   payload: { error }\r\n})\r\n\r\nexport function fetchKeywords() {\r\n   let keywords = [];\r\n   return dispatch => {\r\n      dispatch(fetchKeywordsBegin());\r\n      return axios.get('api/v1/keywords/?format=json')\r\n         .then(response => {\r\n            response.data.map(keyword => {\r\n               keywords[keyword.id] = keyword;\r\n               return keyword;\r\n            });\r\n            dispatch(fetchKeywordsSuccess(keywords));\r\n         })\r\n         .catch(error => dispatch(fetchKeywordsFailure(error))\r\n      );\r\n   }\r\n}","\r\nimport axios from \"axios\";\r\n\r\nexport const Actions = {\r\n   FETCH_ORGANIZATIONS_BEGIN: 'FETCH_ORGANIZATIONS_BEGIN',\r\n   FETCH_ORGANIZATIONS_SUCCESS: 'FETCH_ORGANIZATIONS_SUCCESS',\r\n   FETCH_ORGANIZATIONS_FAILURE: 'FETCH_ORGANIZATIONS_FAILURE'\r\n}\r\n\r\nexport const fetchOrganizationsBegin = () => ({\r\n   type: Actions.FETCH_ORGANIZATIONS_BEGIN\r\n});\r\n\r\nexport const fetchOrganizationsSuccess = (organizations) => ({\r\n   type: Actions.FETCH_ORGANIZATIONS_SUCCESS,\r\n   payload: { organizations }\r\n})\r\n\r\nexport const fetchOrganizationsFailure = (error) => ({\r\n   type: Actions.FETCH_ORGANIZATIONS_FAILURE,\r\n   payload: { error }\r\n})\r\n\r\nexport function fetchOrganizations() {\r\n   let organizations = [];\r\n   return dispatch => {\r\n      dispatch(fetchOrganizationsBegin());\r\n      return axios.get('api/v1/orgs/?format=json')\r\n         .then(response => {\r\n            response.data.map(organization => {\r\n               organizations[organization.id] = organization;\r\n               return organization;\r\n            });\r\n            dispatch(fetchOrganizationsSuccess(organizations));\r\n         })\r\n         .catch(error => dispatch(fetchOrganizationsFailure(error))\r\n         );\r\n   }\r\n}","export function toTitleCase(str) {\r\n   return str.replace(\r\n      /\\w\\S*/g,\r\n      function (txt) {\r\n         return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n      }\r\n   );\r\n}\r\n\r\nexport const NBSP = '\\u00A0'","import React, { Component } from 'react';\r\nimport {\r\n   Badge,\r\n   ListGroupItem,\r\n   ListGroup,\r\n} from 'reactstrap';\r\n\r\nimport BaseModal from './AdditionalDataModal';\r\nimport { connect } from 'react-redux'\r\nimport './App.css';\r\n\r\nimport { toTitleCase, NBSP } from './helper'\r\n\r\nfunction getKeywordType(shortKeywordType) {\r\n   if (shortKeywordType === \"TK\") {\r\n      return { name: \"Topical\", color: \"primary\" }\r\n   }\r\n   if (shortKeywordType === \"AK\") {\r\n      return { name: \"Activity\", color: \"secondary\" }\r\n   }\r\n}\r\n\r\nfunction getKeywordSortOrder(shortKeywordSortOrder) {\r\n   if (shortKeywordSortOrder === \"HS\") {\r\n      return { name: \"High Level\", color: \"success\" }\r\n   }\r\n   if (shortKeywordSortOrder === \"MS\") {\r\n      return { name: \"Medium Level\", color: \"warning\" }\r\n   }\r\n   if (shortKeywordSortOrder === \"LS\") {\r\n      return { name: \"Low Level\", color: \"danger\" }\r\n   }\r\n}\r\n\r\nclass Keywords extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         showKeywordOverviewModal: false,\r\n         keywordOverviewModalTitle: 'User Keywords',\r\n         keywordOverviewModalBody: [],\r\n\r\n         showKeywordDetailModal: false,\r\n         keywordDetailModalTitle: 'User Keywords',\r\n         keywordDetailModalBody: [],\r\n      };\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.setState({ keywordOverviewModalBody: this.buildKeywordOverviewModalBody() })\r\n      this.buildDisplayText();\r\n   }\r\n\r\n   buildKeywordOverviewModalBody = () => {\r\n      let modalBody = [];\r\n      const keywordIDs = this.props.items;\r\n      keywordIDs.map(\r\n         keywordID => (\r\n            modalBody.push(\r\n            <ListGroupItem\r\n               key={keywordID} \r\n               tag=\"a\" \r\n               onClick={() => this.showKeywordExtendedData(keywordID)} \r\n               href=\"#0\" \r\n               action\r\n            >\r\n               {toTitleCase(this.props.keywords[keywordID].keywordName)}\r\n            </ListGroupItem>)))\r\n      modalBody = <ListGroup>{modalBody}</ListGroup>\r\n      return modalBody;\r\n   }\r\n\r\n   buildDisplayText = () => {\r\n      let displayText = ''\r\n      const keywordIDs = this.props.items;\r\n\r\n      keywordIDs.map(keywordID => (\r\n         displayText += toTitleCase(\r\n            this.props.keywords[keywordID].keywordName) + \", \"));\r\n      displayText = displayText.substring(0, displayText.length - 2)\r\n      if (displayText.length > this.props.displayLength)\r\n         displayText = displayText.substring(0, this.props.displayLength) + \"...\"\r\n      if (displayText.length > 0)\r\n         displayText = \r\n         <a \r\n            href=\"#0\"\r\n            key={keywordIDs} \r\n            onClick={\r\n               () => this.setState(\r\n                  {\r\n                     showKeywordOverviewModal: !this.state.showKeywordOverviewModal\r\n                  })\r\n               }\r\n         >\r\n            {displayText}\r\n         </a>\r\n      else\r\n         displayText = \"No Keywords\"\r\n      return displayText;\r\n   }\r\n\r\n   showKeywordExtendedData(id) {\r\n      let keywordInfo = this.props.keywords[id];\r\n\r\n      let title = \r\n         <div>\r\n            More Information on <b>{keywordInfo.keywordName.toLowerCase()}</b> keyword\r\n         </div>\r\n      let body = (\r\n         <div>\r\n            <Badge \r\n               color={getKeywordType(keywordInfo.keywordType).color}>\r\n               {getKeywordType(keywordInfo.keywordType).name}\r\n            </Badge>\r\n            {NBSP}\r\n            <Badge \r\n               color={getKeywordSortOrder(keywordInfo.sortOrder).color}>\r\n               {getKeywordSortOrder(keywordInfo.sortOrder).name}\r\n            </Badge>\r\n            <br />\r\n         <span>{keywordInfo.keywordDescription !== null ? keywordInfo.keywordDescription : \"No description provided.\"}</span>\r\n      </div>);\r\n      this.setState({ keywordDetailModalTitle: title, keywordDetailModalBody: body, showKeywordDetailModal: !this.state.showKeywordDetailModal });\r\n   }\r\n\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n         {this.buildDisplayText()}\r\n         <BaseModal\r\n            openStatus={this.state.showKeywordOverviewModal}\r\n            title={this.state.keywordOverviewModalTitle}\r\n            body={this.state.keywordOverviewModalBody}\r\n            toggle={() => this.setState(\r\n               {\r\n                  showKeywordOverviewModal: !this.state.showKeywordOverviewModal\r\n               })}\r\n            size='lg'\r\n         />\r\n         <BaseModal\r\n            openStatus={this.state.showKeywordDetailModal}\r\n            title={this.state.keywordDetailModalTitle}\r\n            body={this.state.keywordDetailModalBody}\r\n            toggle={() => this.setState(\r\n               {\r\n                  showKeywordDetailModal: !this.state.showKeywordDetailModal\r\n               })}\r\n            size='lg'\r\n         />\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   keywords: state.keywords.items,\r\n   keywordsLoading: state.keywords.loading,\r\n   keywordError: state.keywords.error,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Keywords);","import React, { Component } from 'react';\r\nimport {\r\n   Button,\r\n   Badge,\r\n   ListGroupItem,\r\n   ListGroup,\r\n} from 'reactstrap';\r\n\r\nimport BaseModal from './AdditionalDataModal';\r\nimport { connect } from 'react-redux'\r\nimport './App.css';\r\n\r\nimport { NBSP } from './helper'\r\n\r\nfunction getOrgType(shortOrgType) {\r\n   if (shortOrgType === \"IO\") {\r\n      return { name: \"Institution\", color: \"primary\" }\r\n   }\r\n   if (shortOrgType === \"CY\") {\r\n      return { name: \"City\", color: \"secondary\" }\r\n   }\r\n   if (shortOrgType === \"CO\") {\r\n      return { name: \"County\", color: \"success\" }\r\n   }\r\n   if (shortOrgType === \"NG\") {\r\n      return { name: \"NGO\", color: \"warning\" }\r\n   }\r\n   if (shortOrgType === \"RA\") {\r\n      return { name: \"Regional Agency\", color: \"info\" }\r\n   }\r\n}\r\n\r\nclass Organizations extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         showOrganizationOverviewModal: false,\r\n         organizationOverviewModalTitle: 'User Organizations',\r\n         organizationOverviewModalBody: [],\r\n\r\n         showOrganizationDetailModal: false,\r\n         organizationDetailModalTitle: 'User Organizations',\r\n         organizationDetailModalBody: [],\r\n      };\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.setState({ organizationOverviewModalBody: this.buildOrganizationOverviewModalBody() })\r\n      // this.buildDisplayText();\r\n   }\r\n\r\n   buildOrganizationOverviewModalBody = () => {\r\n      let modalBody = [];\r\n      const organizationIDs = this.props.items;\r\n      organizationIDs.map(\r\n         organizationID => (\r\n            modalBody.push(\r\n               <ListGroupItem\r\n                  key={organizationID}\r\n                  tag=\"a\"\r\n                  onClick={() => this.showOrgExtendedData(organizationID)}\r\n                  href=\"#0\"\r\n                  action\r\n               >\r\n                  {this.props.orgs[organizationID].orgNameUnique}\r\n               </ListGroupItem>)))\r\n      modalBody = <ListGroup>{modalBody}</ListGroup>\r\n      return modalBody;\r\n   }\r\n\r\n   buildDisplayText = () => {\r\n      let displayText = ''\r\n      const organizationIDs = this.props.items;\r\n      // console.log(this.props.orgs)\r\n\r\n      organizationIDs.map(organizationID => (\r\n         displayText += this.props.orgs[organizationID].orgNameUnique + \", \"));\r\n      displayText = displayText.substring(0, displayText.length - 2)\r\n      if (displayText.length > this.props.displayLength)\r\n         displayText = displayText.substring(0, this.props.displayLength) + \"...\"\r\n      if (displayText.length > 0)\r\n         displayText =\r\n            <a\r\n               href=\"#0\"\r\n               key={organizationIDs}\r\n               onClick={\r\n                  () => this.setState(\r\n                     {\r\n                        showOrganizationOverviewModal: !this.state.showOrganizationOverviewModal\r\n                     })\r\n               }\r\n            >\r\n               {displayText}\r\n            </a>\r\n      else\r\n         displayText = \"No Organizations\"\r\n      return displayText;\r\n   }\r\n\r\n   showOrgExtendedData(orgID) {\r\n      let orgInfo = this.props.orgs[orgID];\r\n      let title = \r\n         <div>\r\n            {this.props.orgs[orgID].orgNameUnique}\r\n            {NBSP}\r\n            <Badge color={getOrgType(orgInfo.orgType).color}>\r\n            {getOrgType(orgInfo.orgType).name}\r\n            </Badge>\r\n         </div>\r\n\r\n      let body = orgInfo.website !== null ? (\r\n         <Button outline color=\"primary\" size=\"sm\" href={orgInfo.website} target=\"_blank\" rel=\"noopener noreferrer\">Visit Website</Button>\r\n      ) : \"No website provided\";\r\n      this.setState({ organizationDetailModalTitle: title, organizationDetailModalBody: body, showOrganizationDetailModal: !this.state.showOrganizationDetailModal });\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            {this.buildDisplayText()}\r\n            <BaseModal\r\n               openStatus={this.state.showOrganizationOverviewModal}\r\n               title={this.state.organizationOverviewModalTitle}\r\n               body={this.state.organizationOverviewModalBody}\r\n               toggle={() => this.setState(\r\n                  {\r\n                     showOrganizationOverviewModal: !this.state.showOrganizationOverviewModal\r\n                  })}\r\n               size='lg'\r\n            />\r\n            <BaseModal\r\n               openStatus={this.state.showOrganizationDetailModal}\r\n               title={this.state.organizationDetailModalTitle}\r\n               body={this.state.organizationDetailModalBody}\r\n               toggle={() => this.setState(\r\n                  {\r\n                     showOrganizationDetailModal: !this.state.showOrganizationDetailModal\r\n                  })}\r\n               size='lg'\r\n            />\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   orgs: state.orgs.items,\r\n   orgsLoading: state.orgs.loading,\r\n   orgError: state.orgs.error,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Organizations);","import React, { Component } from 'react';\r\nimport {\r\n   Button,\r\n   Badge,\r\n} from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faInfo } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport UserDetailModal from './AdditionalDataModal';\r\nimport './App.css';\r\n\r\nimport { NBSP } from './helper'\r\n\r\nlibrary.add(faInfo);\r\n\r\n\r\nfunction getUserTypes(shortUserType) {\r\n   switch (shortUserType) {\r\n      case \"US\":\r\n         return { name: \"University Faculty/Staff\", color: \"primary\" };\r\n      case \"CS\":\r\n         return { name: \"City Staff\", color: \"secondary\" };\r\n      case \"CO\":\r\n         return { name: \"County Staff\", color: \"success\" }\r\n      case \"NS\":\r\n         return { name: \"NGO Staff\", color: \"danger\" }\r\n      case \"RS\":\r\n         return { name: \"Regional Staff\", color: \"warning\" }\r\n      default:\r\n         return { name: \"Error\", color: \"dark\" }\r\n   }\r\n}\r\n\r\nclass UserDetail extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         showUserDetails: false,\r\n         userDetailModalTitle: '',\r\n         userDetailModalBody: '',\r\n      }\r\n   }\r\n\r\n   showUserDetailModal = () => {\r\n      let user = this.props.user\r\n      let title = <div>About <b>{user.firstName} {user.lastName}</b></div>;\r\n      let body = <div>\r\n         <Badge color={getUserTypes(user.userType).color}>{getUserTypes(user.userType).name}</Badge><br />\r\n         <b>Email: </b><a href={\"mailto:\"+user.emailAddress}>{user.emailAddress}</a><br />\r\n         {user.website ? <div><b>Website: </b>{NBSP}<a href={user.website} target=\"_blank\" rel=\"noopener noreferrer\">{user.website}</a></div> : \"\"}\r\n         {user.jobTitle ? <div><b>Job Title: </b>{NBSP}{user.jobTitle}</div> : \"\"}\r\n         {user.description ? <div><b>About: </b>{NBSP}{user.description.split(\"\\n\").map((i, key) => {\r\n            return <div key={key}>{i}< br /></div>;\r\n         })}</div> : \"\"}\r\n      </div>\r\n      this.setState({userDetailModalTitle: title, userDetailModalBody: body, showUserDetails: true})\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <Button onClick={() => this.showUserDetailModal()}><FontAwesomeIcon icon=\"info\" />{NBSP}More Information</Button>\r\n            <UserDetailModal\r\n               openStatus={this.state.showUserDetails}\r\n               title={this.state.userDetailModalTitle}\r\n               body={this.state.userDetailModalBody}\r\n               toggle={() => this.setState({ showUserDetails: !this.state.showUserDetails})}\r\n               size={'lg'}\r\n            />\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default UserDetail","import React, { Component } from 'react';\r\nimport {\r\n    Button, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon, Input, UncontrolledPopover, PopoverHeader, PopoverBody\r\n} from 'reactstrap';\r\nimport './Modal.css';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nvar base64 = require('base-64');\r\n\r\n\r\nexport default class CopyQueryToClipboard extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          copyCode: false,\r\n          copyURL: false,\r\n      }\r\n   }\r\n   /* Passed in:\r\n      props:\r\n         - title\r\n         - body\r\n    */\r\n\r\n   render() {\r\n      const { openStatus, toggle, size, query } = this.props;\r\n       const protocol = window.location.protocol;\r\n       const host = window.location.host;\r\n       const encodedQuery = base64.encode(query)\r\n       const URL = protocol.concat(\"//\",host,\"/\",encodedQuery);\r\n      return (\r\n         <Modal isOpen={openStatus} toggle={toggle} centered size={size}>\r\n            <ModalHeader toggle={toggle}>Copy Query to Clipboard</ModalHeader>\r\n            <ModalBody>\r\n               Saving or sharing a query is easy! You can copy the code below to\r\n               your clipboard and paste it in on this page later, or you can copy\r\n               the sharable URL.< br />\r\n               <b>Copy code to clipboard</b>\r\n\r\n               <InputGroup>\r\n                  <Input disabled placeholder={encodedQuery}/>\r\n                  <InputGroupAddon addonType=\"append\">\r\n\r\n                          <CopyToClipboard text={encodedQuery}\r\n                        onCopy={() => this.setState({ copyCode: true })}>\r\n                              <Button id=\"copyCodeToClipboard\" color=\"success\">Copy to clipboard</Button>\r\n                     </CopyToClipboard>\r\n                        <UncontrolledPopover trigger=\"focus\" placement=\"bottom\" target=\"copyCodeToClipboard\">\r\n                        <PopoverHeader>Copied Code to Clipboard</PopoverHeader>\r\n                        <PopoverBody>You can share or save this code to return to this query later!<br /><kbd>Ctrl</kbd> + <kbd>V</kbd> can retrieve the code from your clipboard.</PopoverBody>\r\n                    </UncontrolledPopover>\r\n                  </InputGroupAddon>\r\n               </InputGroup>\r\n                <br />\r\n                <b>Want to Copy a URL instead?</b>\r\n\r\n                <InputGroup>\r\n                      <Input disabled placeholder={URL} />\r\n                    <InputGroupAddon addonType=\"append\">\r\n\r\n                          <CopyToClipboard text={URL}\r\n                            onCopy={() => this.setState({ copyURL: true })}>\r\n                              <Button id=\"copyURLToClipboard\" color=\"success\">Copy to clipboard</Button>\r\n                        </CopyToClipboard>\r\n                        <UncontrolledPopover trigger=\"focus\" placement=\"bottom\" target=\"copyURLToClipboard\">\r\n                            <PopoverHeader>Copied URL to Clipboard</PopoverHeader>\r\n                            <PopoverBody>You can share or save this URL to return to this query later!<br /><kbd>Ctrl</kbd> + <kbd>V</kbd> can retrieve the code from your clipboard.</PopoverBody>\r\n                        </UncontrolledPopover>\r\n                    </InputGroupAddon>\r\n                </InputGroup>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" onClick={toggle}>Close</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      );\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport AsyncSelect from 'react-select/async';\r\nimport axios from \"axios\";\r\nimport {\r\n   Col, Row, Form,\r\n   FormGroup, Label,\r\n   Button, FormText, Dropdown, DropdownToggle, DropdownMenu, DropdownItem\r\n} from 'reactstrap';\r\nimport '../Modal.css';\r\nimport CopyToClipBoardModal from '../copyQueryToClipboard'\r\nimport { NBSP } from '../helper';\r\nimport { buildQueryString } from './searchForUniversity'\r\n\r\nasync function getKeywords(type, sortOrder) {\r\n   try {\r\n      return await axios.get('api/v1/keywords/?format=json&keywordType=' + type + '&sortOrder=' + sortOrder)\r\n   } catch (error) {\r\n      console.error(error)\r\n   }\r\n}\r\n\r\nasync function parseKeywordData(keywordType) {\r\n   const keywordLow = await getKeywords(keywordType, 'LS');\r\n   const keywordMedium = await getKeywords(keywordType, 'MS');\r\n   const keywordHigh = await getKeywords(keywordType, 'HS');\r\n\r\n   if (keywordLow.data && keywordMedium.data && keywordHigh.data) {\r\n      let keywordLowNormalized = keywordLow.data.map(keyword => ({\r\n         label: keyword.keywordName,\r\n         value: keyword.id\r\n      }));\r\n      let keywordMediumNormalized = keywordMedium.data.map(keyword => ({\r\n         label: keyword.keywordName,\r\n         value: keyword.id\r\n      }));\r\n      let keywordHighNormalized = keywordHigh.data.map(keyword => ({\r\n         label: keyword.keywordName,\r\n         value: keyword.id\r\n      }));\r\n      let keywordOptionData =\r\n         [\r\n            {\r\n               label: 'High Level Keywords',\r\n               options: keywordHighNormalized,\r\n            },\r\n            {\r\n               label: 'Medium Level Keywords',\r\n               options: keywordMediumNormalized,\r\n            },\r\n            {\r\n               label: 'Low Level Keywords',\r\n               options: keywordLowNormalized,\r\n            },\r\n         ]\r\n      return keywordOptionData;\r\n   }\r\n}\r\n\r\n\r\nexport default class memberSearchModal extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         queryData: this.props.selectedQuery,\r\n         validate: {\r\n            emailState: '',\r\n         },\r\n         selectedOption: null,\r\n         modal: false,\r\n         dropdownOpen: false,\r\n\r\n         copyToClipBoardToggle: false,\r\n      }\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.isEmpty = this.isEmpty.bind(this);\r\n   }\r\n\r\n   componentDidMount() {\r\n      // console.log(this.state.queryData)\r\n   }\r\n\r\n\r\n   isEmpty = () => {\r\n      let empty = true;\r\n      if (this.state.queryData.activityKeywords.length !== 0) {\r\n         empty = false;\r\n      }\r\n      if (this.state.queryData.topicalKeywords.length !== 0) {\r\n         empty = false;\r\n      }\r\n      if (this.state.queryData.selectedUniversities.length !== 0) {\r\n         empty = false;\r\n      }\r\n      return empty;\r\n   }\r\n\r\n   getUnivertisyTypes = () => {\r\n      const newRequest = axios.get('/api/v1/orgs/?format=json&orgType=IO')\r\n\r\n      if (newRequest) {\r\n         return newRequest.then(response => {\r\n            return response.data.map(keyword => ({\r\n               label: keyword.orgNameUnique,\r\n               value: keyword.id\r\n            }))\r\n         })\r\n      }\r\n   }\r\n\r\n   handleChange = (e) => {\r\n      let { name, value } = e.target;\r\n      if (e.target.type === \"checkbox\") {\r\n         value = e.target.checked;\r\n      }\r\n      console.log(name);\r\n      console.log(value);\r\n      const queryData = { ...this.state.queryData, [name]: value === null ? [] : value };\r\n      this.setState({ queryData });\r\n   };\r\n\r\n   handleSubmit(syntheticEvent) {\r\n      syntheticEvent.preventDefault();\r\n      this.props.submitHandler(this.state.queryData);\r\n\r\n   }\r\n\r\n   \r\n\r\n   render() {\r\n\r\n      return (\r\n         <Form onSubmit={this.handleSubmit}>\r\n            <Col>\r\n               <FormGroup>\r\n                  <Label>University Selection</Label>\r\n                  <AsyncSelect\r\n                     ref=\"universitySelection\"\r\n                     name=\"universitySelection\"\r\n                     cacheOptions\r\n                     defaultOptions\r\n                     \r\n                     value={this.state.queryData.selectedUniversities}\r\n                     loadOptions={this.getUnivertisyTypes}\r\n                     onChange={(val) => this.handleChange({ target: { name: 'selectedUniversities', value: val}})}\r\n                     isMulti={true}\r\n                     isSearchable={false}\r\n                     autoBlur={false}\r\n                     closeOnSelect={false}\r\n                     closeMenuOnSelect={false}\r\n                  />\r\n               </FormGroup>\r\n\r\n               <FormGroup>\r\n                  <Label>Activity Keywords Selection</Label>\r\n                  <AsyncSelect\r\n                     ref=\"activityKeywords\"\r\n                     cacheOptions\r\n                     defaultOptions\r\n                     value={this.state.queryData.activityKeywords}\r\n                     loadOptions={() => parseKeywordData('AK')}\r\n                     onChange={(val) => this.handleChange({ target: { name: 'activityKeywords', value: val } })}\r\n                     isMulti={true}\r\n                     isSearchable={false}\r\n                     autoBlur={false}\r\n                     closeOnSelect={false}\r\n                     closeMenuOnSelect={false}\r\n                  />\r\n                  <FormText>You can leave this blank to select all activity keywords.</FormText>\r\n               </FormGroup>\r\n\r\n               <FormGroup>\r\n                  <Label>Topical Keywords Selection</Label>\r\n                  <AsyncSelect\r\n                     ref=\"topicalKeywordSelection\"\r\n                     cacheOptions\r\n                     defaultOptions\r\n                     value={this.state.queryData.topicalKeywords}\r\n                     loadOptions={() => parseKeywordData('TK')}\r\n                     onChange={(val) => this.handleChange({ target: { name: 'topicalKeywords', value: val } })}\r\n                     isMulti={true}\r\n                     isSearchable={false}\r\n                     autoBlur={false}\r\n                     closeOnSelect={false}\r\n                     closeMenuOnSelect={false}\r\n                  />\r\n                  <FormText>You can leave this blank to select all topical keywords.</FormText>\r\n               </FormGroup>\r\n               <Row>\r\n                  <div>\r\n                     <Button color=\"success\">Run Query</Button>\r\n                  </div>\r\n                  {NBSP}\r\n                  <div>\r\n                     <Dropdown isOpen={this.state.dropdownOpen} toggle={() => this.setState(prevState => ({dropdownOpen: !prevState.dropdownOpen}))}>\r\n                        <DropdownToggle caret>\r\n                           More Actions\r\n                        </DropdownToggle>\r\n                        <DropdownMenu>\r\n                           <DropdownItem disabled>Export Search</DropdownItem>\r\n                           <DropdownItem divider />\r\n                           <DropdownItem disabled={this.isEmpty(this.state.queryData)} onClick={() => this.setState({copyToClipBoardToggle: !this.state.copyToClipBoardToggle})}>Save Query</DropdownItem>\r\n                           <DropdownItem>Paste Query</DropdownItem>\r\n                        </DropdownMenu>\r\n                     </Dropdown>\r\n                     <CopyToClipBoardModal\r\n                        openStatus={this.state.copyToClipBoardToggle}\r\n                        query={buildQueryString(this.state.queryData)}\r\n                        toggle={() => this.setState(\r\n                           {\r\n                              copyToClipBoardToggle: !this.state.copyToClipBoardToggle\r\n                           })}\r\n                        size='lg'\r\n                     />\r\n                  </div>\r\n               </Row>\r\n            </Col>\r\n         </Form>\r\n      );\r\n   }\r\n}","export const Actions = {\r\n   TOGGLE_DEV_MODE: 'TOGGLE_DEV_MODE',\r\n   TOGGLE_NAV_BAR: 'TOGGLE_NAV_BAR',\r\n\r\n   TOGGLE_SEARCH_FOR_COLLABORATOR: 'TOGGLE_SEARCH_FOR_COLLABORATOR',\r\n}\r\n\r\nexport const toggleDevMode = () => ({\r\n   type: Actions.TOGGLE_DEV_MODE\r\n});\r\n\r\nexport const toggleNavBar = () => ({\r\n   type: Actions.TOGGLE_NAV_BAR\r\n});\r\n\r\nexport const toggleSearchForCollaborator = () => ({\r\n   type: Actions.TOGGLE_SEARCH_FOR_COLLABORATOR\r\n})","\r\nimport axios from \"axios\";\r\n\r\nexport const Actions = {\r\n   FETCH_COLLABORATORS_BEGIN: 'FETCH_COLLABORATORS_BEGIN',\r\n   FETCH_COLLABORATORS_SUCCESS: 'FETCH_COLLABORATORS_SUCCESS',\r\n   FETCH_COLLABORATORS_FAILURE: 'FETCH_COLLABORATORS_FAILURE',\r\n   SET_QUERY_STATEMENT: 'SET_QUERY_STATEMENT',\r\n   GET_URL: 'GET_URL'\r\n}\r\n\r\nexport const fetchCollaboratorsBegin = () => ({\r\n   type: Actions.FETCH_COLLABORATORS_BEGIN\r\n});\r\n\r\nexport const fetchCollaboratorsSuccess = (collaborators) => ({\r\n   type: Actions.FETCH_COLLABORATORS_SUCCESS,\r\n   payload: { collaborators }\r\n})\r\n\r\nexport const fetchCollaboratorsFailure = (error) => ({\r\n   type: Actions.FETCH_COLLABORATORS_FAILURE,\r\n   payload: { error }\r\n})\r\n\r\nexport const getURL = (URL) => ({\r\n   type: Actions.GET_URL,\r\n   payload: { URL }\r\n})\r\n\r\n// export function fetchCollaborators(url) {\r\n//    return dispatch => {\r\n//       dispatch(fetchCollaboratorsBegin());\r\n//       return axios.get(url)\r\n//          .then(response => dispatch(fetchCollaboratorsSuccess(response.data)))\r\n//          .catch(error => dispatch(fetchCollaboratorsFailure(error)));\r\n//    }\r\n// }\r\n\r\nexport const fetchCollaborators = (url) => {\r\n   return dispatch => {\r\n      dispatch(fetchCollaboratorsBegin());\r\n\r\n      axios.get(url)\r\n      .then (res => {dispatch(fetchCollaboratorsSuccess(res.data));})\r\n      .catch(err => {dispatch(fetchCollaboratorsFailure(err));});\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Jumbotron,\r\n} from 'reactstrap';\r\n\r\nimport SearchForCollaboratorForm from './searchForUniversityForm';\r\nimport { connect } from 'react-redux'\r\nimport { toggleSearchForCollaborator } from '../actions/menuActions'\r\nimport { fetchCollaborators } from '../actions/searchForCollaboratorActions'\r\nimport { withRouter } from \"react-router\";\r\nimport '../App.css';\r\n// import Loader from './Loading'\r\nimport { bindActionCreators } from 'redux';\r\n\r\nconst queryString = require('query-string');\r\n\r\n\r\nexport function buildURL(item) {\r\n   let org = item.selectedUniversities;\r\n   let activityKeywords = item.activityKeywords;\r\n   let topicalKeywords = item.topicalKeywords;\r\n   var url = \"/api/v1/users/?format=json\";\r\n   if (org) {\r\n      for (let i = 0; i < org.length; i++) {\r\n         url += '&organization=' + org[i].value;\r\n      }\r\n   }\r\n   if (activityKeywords) {\r\n      for (let i = 0; i < activityKeywords.length; i++) {\r\n         url += '&keywords=' + activityKeywords[i].value;\r\n      }\r\n   }\r\n   if (topicalKeywords) {\r\n      for (let i = 0; i < topicalKeywords.length; i++) {\r\n         url += '&keywords=' + topicalKeywords[i].value;\r\n      }\r\n   }\r\n   return url;\r\n\r\n}\r\n\r\nexport function buildQueryString(item) {\r\n   let org = item.selectedUniversities;\r\n   let activityKeywords = item.activityKeywords;\r\n   let topicalKeywords = item.topicalKeywords;\r\n   var params = \"\"\r\n   if (org) {\r\n      for (let i = 0; i < org.length; i++) {\r\n         params += 'org=' + org[i].value + '&';\r\n      }\r\n   }\r\n   if (activityKeywords) {\r\n      for (let i = 0; i < activityKeywords.length; i++) {\r\n         params += 'keyA=' + activityKeywords[i].value + '&';\r\n      }\r\n   }\r\n   if (topicalKeywords) {\r\n      for (let i = 0; i < topicalKeywords.length; i++) {\r\n         params += 'keyT=' + topicalKeywords[i].value + '&';\r\n      }\r\n   }\r\n   params = params.substring(0, params.length - 1)\r\n   return params;\r\n}\r\n\r\nclass SearchForCollaborator extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         'selectedQueryStatements': {\r\n            activityKeywords: [],\r\n\r\n            topicalKeywords: [],\r\n\r\n            selectedUniversities: [],\r\n         },\r\n         readParams : false\r\n      };\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.readParams = this.readParams.bind(this);\r\n\r\n   }\r\n\r\n\r\n   componentDidMount() {\r\n      this.readParams()\r\n   }\r\n\r\n   readParams() {\r\n      let orgsA = [];\r\n      let aKey = [];\r\n      let tKey = [];\r\n      console.log(this.props)\r\n      const parsed = queryString.parse(this.props.location.search);\r\n      if (parsed.keyA) {\r\n         let keyA = parsed.keyA;\r\n         if (!(Array.isArray(parsed.keyA))) {\r\n            keyA = [parsed.keyA]\r\n         }\r\n         keyA.map(keyID => aKey.push({ label: this.props.keywords.items[keyID].keywordName, value: keyID }))\r\n      }\r\n      if (parsed.keyT) {\r\n         let keyT = parsed.keyT;\r\n         if (!(Array.isArray(parsed.keyT))) {\r\n            keyT = [parsed.keyT]\r\n         }\r\n         keyT.map(keyID => tKey.push({ label: this.props.keywords.items[keyID].keywordName, value: keyID }))\r\n      }\r\n      if (parsed.org) {\r\n         let orgL = parsed.org;\r\n         if (!(Array.isArray(orgL))) {\r\n            orgL = [parsed.org]\r\n         }\r\n         orgL.map(orgID => orgsA.push({ label: this.props.orgs.items[orgID].orgNameUnique, value: orgID }))\r\n      }\r\n      let selectedQueryStatements = {\r\n         activityKeywords: aKey,\r\n         topicalKeywords: tKey,\r\n         selectedUniversities: orgsA\r\n      }\r\n      // console.log(selectedQueryStatements)\r\n      this.setState({ selectedQueryStatements: selectedQueryStatements})\r\n      this.props.fetchCollaborators(buildURL(selectedQueryStatements));\r\n      this.setState({readParams: true})\r\n   }\r\n\r\n   handleSubmit = (item) => {\r\n      // console.log(item)\r\n      this.setState({ selectedQueryStatements: item });\r\n      this.props.history.push(`?${buildQueryString(item)}`);\r\n      this.props.fetchCollaborators(buildURL(item));\r\n   }\r\n\r\n   render() {\r\n      // console.log(\"Collaborators Loading: \" + this.props.collaborators.loading)\r\n      // Loader.addLoadItem('users', { friendlyName: 'Users', condition: this.props.collaborators.loading, error: this.props.collaborators.error })\r\n      // Loader.calculateLoadingState()\r\n      return (\r\n         <>\r\n            <Jumbotron fluid>\r\n               <Container fluid>\r\n                  <h1 className=\"display-3\">Looking for a Collaborator?</h1>\r\n                  <p className=\"lead\">Use the form below to query potential collaborators.</p>\r\n                  <hr className=\"my-2\" />\r\n                  {this.state.readParams ? <SearchForCollaboratorForm \r\n                     selectedQuery={this.state.selectedQueryStatements}\r\n                     submitHandler={this.handleSubmit}/>: null}\r\n               </Container>\r\n            </Jumbotron>\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   nav: state.nav,\r\n   orgs: state.orgs,\r\n   keywords: state.keywords,\r\n   collaborators: state.collaborators,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   toggleSearchForCollaborator,\r\n   fetchCollaborators,\r\n};\r\n\r\n// function mapDispatchToProps(dispatch) {\r\n//    return bindActionCreators({ toggleSearchForCollaborator, fetchCollaborators}, dispatch)\r\n// }\r\n\r\nSearchForCollaborator = withRouter(SearchForCollaborator);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForCollaborator);","export default class Loader {\r\n   static loadingItems = {};\r\n   static loadingStatus = false;\r\n\r\n   static addLoadItem(key, value) {\r\n      var pair = {[key]: value}\r\n      this.loadingItems = {...this.loadingItems, ...pair}\r\n      // this.loadingStatus = this.calculateLoadingState();\r\n   }\r\n\r\n   static getLoadingItems() {\r\n      return Object.values(this.loadingItems)\r\n   }\r\n\r\n   static loadingState() {\r\n      return this.loadingStatus;\r\n   }\r\n\r\n   static calculateLoadingState(loader) {\r\n      let openStatus = [];\r\n      let loadValues = loader;\r\n      loadValues.map(loadInfo => openStatus.push(loadInfo.condition, loadInfo.error !== null))\r\n      openStatus = openStatus.every(x => x === false);\r\n      return openStatus\r\n   }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Table,\r\n   Spinner,\r\n} from 'reactstrap';\r\nimport PaginationWrapper from './Pagination'\r\nimport { connect } from 'react-redux'\r\nimport {fetchKeywords} from './actions/keywordActions'\r\nimport {fetchOrganizations} from './actions/organizationActions'\r\nimport Keyword from './Keywords'\r\nimport Organizations from './Organizations'\r\nimport UserDetail from './User'\r\nimport SearchForCollaborator from './universityCollaborators/searchForUniversity'\r\nimport Loader from './loader';\r\nimport Loading from './Loading'\r\nimport './App.css';\r\n\r\nclass TableView extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         pageItems: [],\r\n         pageSize: 30,\r\n      };\r\n      this.onChangePage = this.onChangePage.bind(this);\r\n   }\r\n  \r\n   componentDidMount() {\r\n      this.props.fetchKeywords();\r\n      this.props.fetchOrganizations();\r\n   }\r\n\r\n   onChangePage(pageOfItems) {\r\n      this.setState({ pageItems: pageOfItems })\r\n   }\r\n\r\n   renderDisplayUserItems = () => {\r\n      const items = this.state.pageItems;\r\n      let renderItems = \"\"\r\n      renderItems = items.map(item => (\r\n         <tr key={item.id}>\r\n            <th scope=\"row\">{item.firstName} {item.lastName}</th>\r\n            <td>{!this.props.orgsLoading || this.props.orgs === [] ? <Organizations items={item.organization} displayLength={20} /> : <Spinner color=\"primary\" />}</td>\r\n            <td><a href={'mailto:' + item.emailAddress}>{item.emailAddress}</a></td>\r\n            <td>{!this.props.keywordsLoading || this.props.keywords === [] ? <Keyword items={item.keywords} displayLength={75}/> : <Spinner color=\"primary\" />}</td>\r\n            <td><UserDetail user={item}/></td>\r\n         </tr>\r\n      ));\r\n      return renderItems;\r\n   };\r\n\r\n   render() {\r\n      let loader = [\r\n         { friendlyName: 'Keywords', condition: this.props.keywordsLoading, error: this.props.keywordError },\r\n         { friendlyName: 'Organizations', condition: this.props.orgsLoading, error: this.props.orgError },\r\n         { friendlyName: 'Users', condition: this.props.collaboratorsLoading, error: this.props.collaboratorsError },\r\n      ]\r\n      let loadStatus = Loader.calculateLoadingState(loader);      \r\n      return (\r\n         <>\r\n            <Loading body={loader} status={loadStatus} />\r\n            {(!this.props.keywordsLoading || this.props.keywords === []) && (!this.props.orgsLoading || this.props.orgs === []) ? <SearchForCollaborator /> : <Spinner color=\"primary\" /> }\r\n         <Container fluid>\r\n            <Table hover responsive>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Name</th>\r\n                     <th>Organization</th>\r\n                     <th>Email Address</th>\r\n                     <th>Keywords</th>\r\n                     <th>More Information</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {this.renderDisplayUserItems()}\r\n               </tbody>\r\n            </Table>\r\n            <PaginationWrapper pageSize={this.state.pageSize} items={this.props.collaborators} onChangePage={this.onChangePage} />\r\n         </Container>\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   keywords: state.keywords.items,\r\n   keywordsLoading: state.keywords.loading,\r\n   keywordError: state.keywords.error,\r\n\r\n   orgs: state.orgs.items,\r\n   orgsLoading: state.orgs.loading,\r\n   orgError: state.orgs.error,\r\n\r\n   collaborators: state.collaborators.items,\r\n   collaboratorsLoading: state.collaborators.loading,\r\n   collaboratorsError: state.collaborators.error,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   fetchKeywords,\r\n   fetchOrganizations\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableView);","import React, { Component } from 'react';\r\nimport {\r\n   Button,\r\n   Collapse,\r\n   Navbar,\r\n   NavbarToggler,\r\n   NavbarBrand,\r\n   Nav,\r\n   NavItem,\r\n   NavLink,\r\n   } from 'reactstrap';\r\nimport './App.css';\r\nimport { connect } from 'react-redux';\r\nimport { toggleNavBar, toggleDevMode, toggleSearchForCollaborator } from './actions/menuActions'\r\nimport SearchForCollaborator from './universityCollaborators/searchForUniversity'\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\n\r\nclass Navigation extends Component {\r\n\r\n   render() {\r\n      const {nav, settings} = this.props;\r\n      return (\r\n\r\n         <Navbar color=\"light\" light expand=\"md\">\r\n            <NavbarBrand tag={RRNavLink} exact to=\"/\">{settings.siteHeading}</NavbarBrand>\r\n            <NavbarToggler onClick={() => this.props.toggleNavBar()} />\r\n            <Collapse isOpen={nav.navOpen} navbar>\r\n               <Nav className=\"ml-auto\" navbar>\r\n                  <NavItem>\r\n                     <NavLink tag={RRNavLink} exact to=\"/collaborator\" activeClassName=\"active\">Search for a Collaborator</NavLink>\r\n                     {/* <SearchForCollaborator /> */}\r\n                  </NavItem>\r\n\r\n                  {settings.commitBranch === \"dev\" && nav.devModeOpen === false ? (\r\n                     <NavItem>\r\n                        <Button color=\"warning\" onClick={() => this.props.toggleDevMode()}>Open  development information</Button>\r\n                     </NavItem>\r\n                  ) : null}\r\n                  <NavItem>\r\n                  </NavItem>\r\n               </Nav>\r\n            </Collapse>\r\n         </Navbar>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   nav: state.nav,\r\n   settings: state.settings,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   toggleNavBar,\r\n   toggleDevMode,\r\n   toggleSearchForCollaborator\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation)","import React, { Component } from 'react';\r\nimport {\r\n   Alert,\r\n} from 'reactstrap';\r\nimport './App.css';\r\nimport { connect } from 'react-redux';\r\nimport {toggleDevMode} from './actions/menuActions'\r\n\r\nclass DebugMessage extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n         navIsOpen: false,\r\n         devModeOpen: true,\r\n      };\r\n   }\r\n\r\n   render() {\r\n      const { nav, settings } = this.props;\r\n      return (\r\n         <>\r\n         {settings.commitBranch === \"dev\" ? (\r\n               <Alert color=\"light\" isOpen={nav.devModeOpen} toggle={() => this.props.toggleDevMode()}>\r\n                  <h4 className=\"alert-heading\">Development Mode</h4>\r\n                  <p>\r\n                     The 4C database query utility is currently being <b>developed</b>. To view the repository, please visit: <a href=\"https://github.com/dgaiero/c4-website\">https://github.com/dgaiero/c4-website</a>\r\n                  </p>\r\n                  <p>\r\n                     Directory information contained on this website may be falsified while the site is under development.\r\n                  </p>\r\n                  <hr />\r\n                  <p className=\"mb-0\">\r\n                     The current running commit has a message of: <em>{settings.commitMessage}</em>< br />\r\n                     When providing support or feedback, please provide the following version information:< br />\r\n                     <code>{settings.commitBranch}/{settings.commitHash}</code>< br />\r\n                     <a href={'https://github.com/dgaiero/c4-website/tree/' + settings.commitHash} target=\"_blank\" rel=\"noopener noreferrer\">Open in Remote</a>\r\n                  </p>\r\n               </Alert>\r\n            ) : null}\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   nav: state.nav,\r\n   settings: state.settings,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   toggleDevMode\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DebugMessage);","import axios from 'axios';\r\n\r\nexport const Actions = {\r\n   FETCH_SETTINGS_BEGIN: 'FETCH_SETTINGS_BEGIN',\r\n   FETCH_SETTINGS_SUCCESS: 'FETCH_SETTINGS_SUCCESS',\r\n   FETCH_SETTINGS_FAILURE: 'FETCH_SETTINGS_FAILURE',\r\n}\r\n\r\nexport const fetchSettingsBegin = () => ({\r\n   type: Actions.FETCH_SETTINGS_BEGIN\r\n});\r\n\r\nexport const fetchSettingsSuccess = (settings) => ({\r\n   \r\n   type: Actions.FETCH_SETTINGS_SUCCESS,\r\n   payload: {settings}\r\n})\r\n\r\nexport const fetchSettingsFailure = (error) => ({\r\n   type: Actions.FETCH_SETTINGS_FAILURE,\r\n   payload: { error }\r\n})\r\n\r\nexport function fetchSettings() {\r\n   // console.log(\"FETCHED\")\r\n   return dispatch => {\r\n      dispatch(fetchSettingsBegin());\r\n      return axios.get('api/v1/frontendParameters/1/?format=json')\r\n         .then(response => {dispatch(fetchSettingsSuccess(response.data))})\r\n         .catch(error => dispatch(fetchSettingsFailure(error)));\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Button,\r\n   Jumbotron,\r\n} from 'reactstrap';\r\nimport './App.css';\r\nimport './welcomeJumbotron.css'\r\nimport { connect } from 'react-redux';\r\n\r\nclass WelcomeJumbotron extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n         navIsOpen: false,\r\n         devModeOpen: true,\r\n      };\r\n   }\r\n   render() {\r\n      const { settings } = this.props;\r\n      return (\r\n\r\n         <Jumbotron className=\"welcome\" fluid>\r\n            <Container fluid>\r\n               <h1 className=\"display-3\">{settings.frontHeading}</h1>\r\n               <p className=\"lead\">{settings.frontMessage}</p>\r\n               <hr className=\"my-2\" />\r\n               <p>{settings.frontMessageSubText}</p>\r\n               <p className=\"lead\">\r\n                  <Button href={'mailto:' + settings.additionEmailAddress} color=\"secondary\">Request Addition to Database</Button>\r\n               </p>\r\n            </Container>\r\n         </Jumbotron>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   settings: state.settings,\r\n})\r\n\r\nexport default connect(mapStateToProps)(WelcomeJumbotron)","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Button,\r\n   Jumbotron,\r\n   Row,\r\n   Col,\r\n   Card,\r\n   CardImg,\r\n   CardDeck,\r\n   CardImgOverlay,\r\n   CardHeader,\r\n   CardFooter,\r\n   CardBody,\r\n   CardTitle,\r\n   CardText,\r\n} from 'reactstrap';\r\nimport './App.css';\r\nimport './indexCards.css'\r\nimport { connect } from 'react-redux';\r\nimport WelcomeJumbotron from './WelcomeJumbotron';\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst UnderConstructionCard = () => {\r\n   return (\r\n         <Card className=\"cardHideOverflow\" >\r\n            <div style={{ border: '1px solid rgb(33, 37, 41)', overflow: 'hidden', borderRadius: '.25rem', 'z-index': '300', 'height': '100%', 'position': 'relative' }}>\r\n                <span className=\"newFeaturesBanner\"><b>New Features Coming Soon!</b></span>\r\n                <div className=\"underConstructionCardImage\">\r\n                <CardBody>\r\n                    <h5 className='cardTitle'>Under Construction</h5>\r\n                    <CardText>New features will be coming soon!</CardText>\r\n                </CardBody>\r\n                <CardFooter><Button color=\"secondary\" disabled>Button Coming Soon</Button></CardFooter>\r\n                </div>\r\n            </div>\r\n         </Card>\r\n   )\r\n}\r\n\r\nconst LookingForCollaboratorCard = () => {\r\n   return (\r\n         <Card className=\"cardHideOverflow\" >\r\n            <div style={{ border: '1px solid rgb(33, 37, 41)', overflow: 'hidden', borderRadius: '.25rem' }}>\r\n                <div className=\"lookingForCollaboratorCardImage\">\r\n                <CardBody>\r\n                    <h5 className='cardTitle'>Looking for a University Collaborator?</h5>\r\n                    <CardText>Interested in finding a university to work on a project with?</CardText>\r\n\r\n                </CardBody>\r\n                <CardFooter><Button color=\"secondary\" tag={RRNavLink} exact to=\"/collaborator\">Search For a University Collaborator</Button></CardFooter>\r\n                </div>\r\n            </div>\r\n         </Card>\r\n   )\r\n}\r\n\r\nclass FrontPageCards extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n         navIsOpen: false,\r\n         devModeOpen: true,\r\n      };\r\n   }\r\n   render() {\r\n      return (\r\n         <>\r\n         <WelcomeJumbotron />\r\n            <Container>\r\n               <div style={{ marginBottom: '32px' }}>\r\n                  <CardDeck className=\"\">\r\n                     <LookingForCollaboratorCard />\r\n                     <UnderConstructionCard />\r\n                     <UnderConstructionCard />\r\n                  </CardDeck>\r\n               </div>\r\n            </Container>\r\n        </>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   settings: state.settings,\r\n})\r\n\r\nexport default connect(mapStateToProps)(FrontPageCards)","import React from 'react'\r\nvar base64 = require('base-64');\r\n\r\n// export const ParseSaveQuery = ({ match }) => {\r\n//    return (\r\n//    <div>\r\n//       <h1>{match}</h1>\r\n//    </div>\r\n//    )\r\n//    }\r\n\r\nexport const ParseSaveQuery = ({ match, history }) => {\r\n   if (!match.params.id) {\r\n      history.replace({ pathname: '/collaborator' });\r\n   }\r\n   let query = match.params.id;\r\n   let decoded_query = base64.decode(query);\r\n   return (<h1>Found: {decoded_query}</h1>);\r\n}","import React, { Component } from 'react';\r\n\r\nconst logo = (\r\n      <symbol id=\"icon-4c-icon\" viewBox=\"0 0 32 32\">\r\n         <title>4c-icon</title>\r\n         <path d=\"M12.694 2.354c-0.126 0.013-0.509 0.059-0.853 0.099-2.698 0.311-5.481 1.646-7.564 3.623-3.425 3.253-4.919 8.020-3.98 12.688 0.714 3.504 2.863 6.664 5.898 8.661 1.659 1.091 3.603 1.818 5.567 2.089 0.965 0.139 2.902 0.139 3.835 0.007 4.575-0.661 8.456-3.517 10.426-7.669 0.185-0.403 0.423-0.959 0.529-1.243 0.099-0.291 0.212-0.529 0.251-0.542s0.278-0.066 0.536-0.126c0.251-0.059 0.754-0.245 1.124-0.417 1.018-0.483 1.494-0.463 3.021 0.132 0.423 0.159 0.436 0.165 0.469 0.040 0.020-0.066 0.013-0.139-0.020-0.159-0.132-0.079-3.405-1.355-3.484-1.355-0.046 0-0.298 0.106-0.549 0.231-0.853 0.43-1.342 0.529-2.612 0.522-1.283 0-1.911-0.099-3.802-0.588-5.322-1.375-7.134-1.732-9.706-1.898-3.074-0.198-5.488 0.39-7.2 1.765-0.886 0.714-1.474 1.468-2.076 2.678l-0.311 0.628-0.079-0.198c-0.139-0.344 0.079-2.069 0.43-3.445 0.78-3.048 2.519-5.567 4.992-7.213 1.474-0.985 3.445-1.699 5.355-1.937 0.721-0.086 2.585-0.086 3.306 0 2.856 0.35 5.679 1.574 8.066 3.478 0.727 0.588 2.036 1.898 2.579 2.598l0.43 0.549 0.020-0.278c0.026-0.344-0.145-1.574-0.324-2.281-0.344-1.395-0.979-2.889-1.726-4.099-1.468-2.354-3.808-4.311-6.433-5.369-1.593-0.641-3.021-0.932-4.793-0.972-0.602-0.020-1.197-0.013-1.322 0z\"></path>\r\n         <path d=\"M13.091 12.833c-2.327 0.205-4.403 0.879-6.063 1.97-0.337 0.218-0.615 0.41-0.615 0.423s0.291-0.119 0.648-0.291c2.916-1.448 7.094-1.699 12.013-0.714 1.382 0.271 3.055 0.714 4.516 1.19 1.064 0.35 1.759 0.608 4.231 1.547l0.417 0.165-0.205-0.284c-0.112-0.152-0.291-0.39-0.383-0.522-0.198-0.271-0.879-0.621-2.512-1.283-4.152-1.686-8.608-2.499-12.046-2.202z\"></path>\r\n      </symbol>\r\n   )\r\n   \r\nexport default logo","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Button,\r\n   Jumbotron,\r\n} from 'reactstrap';\r\nimport './App.css';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass NotFound extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n         navIsOpen: false,\r\n         devModeOpen: true,\r\n      };\r\n   }\r\n   render() {\r\n      const { pathname } = this.props.location;\r\n      return (\r\n\r\n         <Jumbotron fluid>\r\n            <Container fluid>\r\n               <h1 className=\"display-3\">404</h1>\r\n               <p className=\"lead\">Page not found</p>\r\n               <hr className=\"my-2\" />\r\n               <p>The requested URL was not found on this server</p>\r\n               <p className=\"lead\">\r\n                  The path <code>{pathname}</code> could not be found on this server.\r\n               </p>\r\n            </Container>\r\n         </Jumbotron>\r\n      );\r\n   }\r\n}\r\n\r\nexport default NotFound","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Fade,\r\n} from 'reactstrap';\r\n\r\nimport Loading from './Loading'\r\nimport './App.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport TableView from './TableView'\r\nimport Navigation from './Navigation'\r\nimport DebugMessage from './DebugMessage'\r\nimport { fetchSettings }from './actions/settingsActions'\r\nimport { fetchKeywords }from './actions/keywordActions'\r\nimport { fetchOrganizations }from './actions/organizationActions'\r\nimport { fetchCollaborators } from './actions/searchForCollaboratorActions'\r\nimport FrontPageCards from './indexPage';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { ParseSaveQuery } from './universityCollaborators/parseSaveQuery'\r\nimport { withRouter } from \"react-router\";\r\nimport StickyFooter from 'react-sticky-footer';\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport Loader from './loader';\r\nimport logo from './logo'\r\n\r\nimport NotFound from './404'\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = \"https://api.centralcoastclimate.org\"\r\n// axios.defaults.baseURL = \"http://192.168.86.218:8000\"\r\n\r\nclass RootContainer extends Component {\r\n\r\n   componentDidMount() {\r\n      this.props.fetchSettings();\r\n      // this.props.fetchCollaborators('/api/v1/users/?format=json');\r\n   }\r\n\r\n   // calculateLoadingState(loader) {\r\n   //    let openStatus = []\r\n   //    loader.map(loadInfo => openStatus.push(loadInfo.condition, loadInfo.error !== null))\r\n   //    openStatus = openStatus.every(x => x === false);\r\n   //    return openStatus\r\n   // }\r\n\r\n   render() {\r\n      // Loader.addLoadItem('settings', { friendlyName: 'Settings', condition: this.props.settings.loading, error: this.props.settings.error });\r\n\r\n      // Loader.addLoadItem('users', { friendlyName: 'Users', condition: this.props.collaborators.loading, error: this.props.collaborators.error })\r\n      // Loader.calculateLoadingState();\r\n      // console.log(\"test\")\r\n      let loader = [\r\n         { friendlyName: 'Settings', condition: this.props.settings.loading, error: this.props.settings.error },\r\n      ]\r\n      let loadStatus = Loader.calculateLoadingState(loader);\r\n      return (\r\n         <main className=\"App content\">\r\n            {/* {Loader.calculateLoadingState()} */}\r\n            <Loading body={loader} status={loadStatus} />\r\n            {logo}\r\n                  <DebugMessage />\r\n                  <Navigation />\r\n                  <Switch>\r\n                     <Route path=\"/\" exact component={FrontPageCards} />\r\n                     {/* <FrontPageCards /> */}\r\n                     <Route path=\"/collaborator/save/:id?\" component={ParseSaveQuery} />\r\n                     <Route path=\"/collaborator/\" exact component={TableView} />\r\n                     <Route component={NotFound} status={404}/>\r\n                  </Switch>\r\n                  {/* <TableView /> */}\r\n         </main>\r\n      );\r\n   }\r\n}\r\n\r\n{/* <TransitionGroup>\r\n   <CSSTransition\r\n      key={location.key}\r\n      timeout={{ enter: 300, exit: 300 }}\r\n   >\r\n\r\n   </CSSTransition>\r\n</TransitionGroup> */}\r\n\r\nconst mapStateToProps = state => ({\r\n   settings: state.settings,\r\n   keywords: state.keywords,\r\n   orgs: state.orgs,\r\n   collaborators: state.collaborators\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   fetchSettings,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RootContainer)","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport RootContainer from './RootContainer'; \r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nconst App = ({ store }) => (\r\n         <Provider store={store}>\r\n      <Router>\r\n               <Route path=\"/:filter?\" component={RootContainer} />\r\n               {/* <Route path=\"/\" render={() => (<h1>404</h1>)} /> */}\r\n               {/* <RootContainer /> */}\r\n            </Router>\r\n         </Provider>\r\n      );\r\n\r\n\r\nApp.propTypes = {\r\n   store: PropTypes.object.isRequired\r\n}\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n} from 'reactstrap';\r\n\r\nimport './App.css';\r\nimport { NBSP } from './helper';\r\nimport './footer.css'\r\n\r\nclass Footer extends Component {\r\n   render() {\r\n      return (\r\n         <footer className=\"footer mt-auto py-3\" style={{ backgroundColor: '#F8F9FA' }}>\r\n            <Container fluid className=\"clearfix\">\r\n               <span className=\"text-muted float-left\">Copyright {'\\u00A9'} 2019 Central Coast Climate Collaborative </span>\r\n               {/* <div className=\"float-right\"> */}\r\n                     {NBSP}\r\n               <div className=\"float-right\">\r\n               <p className=\"c4-icon text-muted\"></p>\r\n               {NBSP}\r\n               <a href=\"https://www.centralcoastclimate.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Visit main website</a>             \r\n               </div>\r\n               {/* </div> */}\r\n            </Container>\r\n         </footer>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Footer","import { Actions } from '../actions/settingsActions'\r\n\r\nconst initialState = {\r\n   siteHeading: 'Loading...',\r\n   frontHeading: 'Loading...',\r\n   frontMessage: 'Loading...',\r\n   frontMessageSubText: 'Loading...',\r\n   additionEmailAddress: 'Loading...',\r\n   commitBranch: 'master',\r\n   commitHash: 'Loading...',\r\n   commitMessage: 'Loading...',\r\n   loading: true,\r\n   error: null,\r\n}\r\n\r\nexport default function settingsReducer(state = initialState, action) {\r\n   // console.log(action)\r\n   switch(action.type) {\r\n      case Actions.FETCH_SETTINGS_BEGIN:\r\n         // console.log(\"BEGIN\")\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            error: null,\r\n         }\r\n      case Actions.FETCH_SETTINGS_SUCCESS:\r\n         // console.log('SUCCESS')\r\n         // console.log(action.payload)\r\n         return {\r\n            ...state,\r\n            ...action.payload.settings,\r\n            loading: false,\r\n         }\r\n      case Actions.FETCH_SETTINGS_FAILURE:\r\n         // console.log(\"FAILURE\")\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload.error,\r\n            items: [],\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import {Actions} from '../actions/keywordActions'\r\n\r\nconst initialState = {\r\n   items: [],\r\n   loading: true,\r\n   error: null\r\n}\r\n\r\nexport default function keywordsReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case Actions.FETCH_KEYWORDS_BEGIN:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            error: null,\r\n         }\r\n      case Actions.FETCH_KEYWORDS_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            items: action.payload.keywords,\r\n         }\r\n      case Actions.FETCH_KEYWORDS_FAILURE:\r\n         // console.log(action.payload.error);\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload.error,\r\n            items: [],\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import {Actions} from '../actions/organizationActions'\r\n\r\nconst initialState = {\r\n   items: [],\r\n   loading: true,\r\n   error: null\r\n}\r\n\r\nexport default function organizationsReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case Actions.FETCH_ORGANIZATIONS_BEGIN:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            error: null,\r\n         }\r\n      case Actions.FETCH_ORGANIZATIONS_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            items: action.payload.organizations,\r\n         }\r\n      case Actions.FETCH_ORGANIZATIONS_FAILURE:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload.error,\r\n            items: [],\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import {Actions} from '../actions/menuActions'\r\n\r\nconst initialState = {\r\n   searchForCollaborator: false,\r\n   devModeOpen: false,\r\n   navOpen: false,\r\n}\r\n\r\nexport default function menuReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case Actions.TOGGLE_SEARCH_FOR_COLLABORATOR:\r\n         return {\r\n            ...state,\r\n            searchForCollaborator: !state.searchForCollaborator,\r\n         }\r\n      case Actions.TOGGLE_DEV_MODE:\r\n         return {\r\n            ...state,\r\n            devModeOpen: !state.devModeOpen\r\n         };\r\n      case Actions.TOGGLE_NAV_BAR:\r\n         return {\r\n            ...state,\r\n            navOpen: !state.navOpen\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import { Actions } from '../actions/searchForCollaboratorActions'\r\n\r\nconst initialState = {\r\n   items: [],\r\n   loading: true,\r\n   error: null,\r\n   url: '',\r\n}\r\n\r\nexport default function collaboratorsReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case Actions.FETCH_COLLABORATORS_BEGIN:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            error: null,\r\n         }\r\n      case Actions.FETCH_COLLABORATORS_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            items: action.payload.collaborators,\r\n         }\r\n      case Actions.FETCH_COLLABORATORS_FAILURE:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload.error,\r\n            items: [],\r\n         }\r\n      case Actions.GET_URL:\r\n         return {\r\n            ...state,\r\n            url: action.payload.url,\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import {combineReducers} from 'redux'\r\n\r\nimport settings from './settingsReducer'\r\nimport keywords from './keywordReducer'\r\nimport orgs from './organizationReducer'\r\nimport nav from './menuReducer'\r\nimport collaborators from './searchForCollaboratorReducer'\r\n\r\n\r\nexport default combineReducers({\r\n   settings,\r\n   keywords,\r\n   orgs,\r\n   nav,\r\n   collaborators,\r\n\r\n});","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n   window.location.hostname === 'localhost' ||\n   // [::1] is the IPv6 localhost address.\n   window.location.hostname === '[::1]' ||\n   // 127.0.0.1/8 is considered localhost for IPv4.\n   window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n   )\n);\n\nexport default function register() {\n   if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n         // Our service worker won't work if PUBLIC_URL is on a different origin\n         // from what our page is served on. This might happen if a CDN is used to\n         // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n         return;\n      }\n\n      window.addEventListener('load', () => {\n         const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n         if (isLocalhost) {\n            // This is running on localhost. Lets check if a service worker still exists or not.\n            checkValidServiceWorker(swUrl);\n\n            // Add some additional logging to localhost, pointing developers to the\n            // service worker/PWA documentation.\n            navigator.serviceWorker.ready.then(() => {\n               console.log(\n                  'This web app is being served cache-first by a service ' +\n                  'worker. To learn more, visit https://goo.gl/SC7cgQ'\n               );\n            });\n         } else {\n            // Is not local host. Just register service worker\n            registerValidSW(swUrl);\n         }\n      });\n   }\n}\n\nfunction registerValidSW(swUrl) {\n   navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n         registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n               if (installingWorker.state === 'installed') {\n                  if (navigator.serviceWorker.controller) {\n                     // At this point, the old content will have been purged and\n                     // the fresh content will have been added to the cache.\n                     // It's the perfect time to display a \"New content is\n                     // available; please refresh.\" message in your web app.\n                     console.log('New content is available; please refresh.');\n                  } else {\n                     // At this point, everything has been precached.\n                     // It's the perfect time to display a\n                     // \"Content is cached for offline use.\" message.\n                     console.log('Content is cached for offline use.');\n                  }\n               }\n            };\n         };\n      })\n      .catch(error => {\n         console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n   // Check if the service worker can be found. If it can't reload the page.\n   fetch(swUrl)\n      .then(response => {\n         // Ensure service worker exists, and that we really are getting a JS file.\n         if (\n            response.status === 404 ||\n            response.headers.get('content-type').indexOf('javascript') === -1\n         ) {\n            // No service worker found. Probably a different app. Reload the page.\n            navigator.serviceWorker.ready.then(registration => {\n               registration.unregister().then(() => {\n                  window.location.reload();\n               });\n            });\n         } else {\n            // Service worker found. Proceed as normal.\n            registerValidSW(swUrl);\n         }\n      })\n      .catch(() => {\n         console.log(\n            'No internet connection found. App is running in offline mode.'\n         );\n      });\n}\n\nexport function unregister() {\n   if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n         registration.unregister();\n      });\n   }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport Footer from './Footer'\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './reducers/rootReducer'\nimport thunk from 'redux-thunk'; \n\nimport unregisterServiceWorker from './registerServiceWorker';\n\nconst createStoreWithMiddleware = applyMiddleware(thunk)(createStore);\nconst store = createStoreWithMiddleware(rootReducer);\n\nReactDOM.render(\n   [<App store={store} key={1} />, <Footer key=\"2\" />], document.getElementById('root'));\nunregisterServiceWorker();"],"sourceRoot":""}