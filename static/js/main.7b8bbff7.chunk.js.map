{"version":3,"sources":["AdditionalDataModal.js","LoadingModal.js","helper.js","Loading.js","Pagination.js","actions/keywordActions.js","actions/organizationActions.js","Keywords.js","Organizations.js","User.js","copyQueryToClipboard.js","PasteQueryFromKeyboard.js","universityCollaborators/searchForUniversityForm.js","actions/menuActions.js","actions/searchForUnivCollaboratorActions.js","universityCollaborators/searchForUniversity.js","loader.js","TableView.js","Navigation.js","DebugMessage.js","actions/settingsActions.js","WelcomeJumbotron.js","indexPage.js","universityCollaborators/parseSaveQuery.js","404.js","RootContainer.js","App.js","AppInfo.js","Footer.js","reducers/settingsReducer.js","reducers/keywordReducer.js","reducers/organizationReducer.js","reducers/menuReducer.js","reducers/searchForUnivCollaboratorReducer.js","reducers/rootReducer.js","registerServiceWorker.js","index.js"],"names":["AdditionalDataModal","_this$props","this","props","openStatus","toggle","size","title","body","react_default","a","createElement","Modal","isOpen","centered","ModalHeader","ModalBody","ModalFooter","Button","color","onClick","Component","memberSearchModal","toTitleCase","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","isEmpty","queryData","empty","activityKeywords","length","topicalKeywords","selectedUniversities","NBSP","Loading","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","errorModalOpenToggle","setState","errorModalOpenFlag","state","status","errorModalTitle","errorModalBody","loadingItems","loadingStatus","error","bodyText","entries","response","data","map","_ref","_ref2","slicedToArray","key","value","push","toString","_unused","friendlyName","condition","_this2","Spinner","href","showErrorInfo","buildErrorMessage","_this3","Fragment","AdditionalDataModal_AdditionalDataModal","LoadingModal_memberSearchModal","loadInfo","loadingText","connect","settings","keywords","orgs","collaborators","PaginationWrapper","pager","items","setPage","initialPage","prevProps","prevState","page","pageSize","totalPages","getPager","pageOfItems","slice","startIndex","endIndex","onChangePage","totalItems","currentPage","startPage","endPage","Math","ceil","min","pages","toConsumableArray","Array","keys","i","Pagination","aria-label","PaginationItem","disabled","PaginationLink","first","previous","index","active","next","last","React","defaultProps","Actions","FETCH_KEYWORDS_BEGIN","FETCH_KEYWORDS_SUCCESS","FETCH_KEYWORDS_FAILURE","fetchKeywordsBegin","type","fetchKeywordsSuccess","payload","fetchKeywordsFailure","FETCH_ORGANIZATIONS_BEGIN","FETCH_ORGANIZATIONS_SUCCESS","FETCH_ORGANIZATIONS_FAILURE","fetchOrganizationsBegin","fetchOrganizationsSuccess","organizations","fetchOrganizationsFailure","getKeywordType","shortKeywordType","name","getKeywordSortOrder","shortKeywordSortOrder","Keywords","buildKeywordOverviewModalBody","modalBody","keywordID","ListGroupItem","tag","showKeywordExtendedData","action","keywordName","ListGroup","buildDisplayText","displayText","keywordIDs","substring","displayLength","showKeywordOverviewModal","keywordOverviewModalTitle","keywordOverviewModalBody","showKeywordDetailModal","keywordDetailModalTitle","keywordDetailModalBody","id","keywordInfo","Badge","keywordType","sortOrder","keywordDescription","keywordsLoading","loading","keywordError","getOrgType","shortOrgType","Organizations","buildOrganizationOverviewModalBody","organizationID","showOrgExtendedData","orgNameUnique","organizationIDs","showOrganizationOverviewModal","organizationOverviewModalTitle","organizationOverviewModalBody","showOrganizationDetailModal","organizationDetailModalTitle","organizationDetailModalBody","orgID","orgInfo","orgType","website","outline","target","rel","orgsLoading","orgError","getUserTypes","shortUserType","library","add","faInfo","UserDetail","showUserDetailModal","user","firstName","lastName","userType","obfuscate_default","email","emailAddress","jobTitle","description","split","userDetailModalTitle","userDetailModalBody","showUserDetails","index_es","icon","base64","require","CopyQueryToClipboard","copyCode","copyURL","query","endpoint","protocol","window","location","host","encodedQuery","encode","URL","concat","InputGroup","Input","placeholder","InputGroupAddon","addonType","lib","text","onCopy","UncontrolledPopover","trigger","placement","PopoverHeader","PopoverBody","runQuery","newLocation","history","bind","assertThisInitialized","handleChange","event","onChange","autofocus","getKeywords","_callee","regenerator_default","wrap","_context","prev","axios","get","abrupt","sent","t0","console","stop","parseKeywordData","_callee2","keywordLow","keywordMedium","keywordHigh","keywordLowNormalized","keywordMediumNormalized","keywordHighNormalized","keywordOptionData","_context2","keyword","label","options","getUnivertisyTypes","newRequest","then","e","_e$target","checked","objectSpread","defineProperty","selectedQuery","validate","emailState","selectedOption","modal","dropdownOpen","copyToClipBoardToggle","pasteFromClipBoardToggle","handleSubmit","syntheticEvent","preventDefault","submitHandler","Form","onSubmit","Col","FormGroup","Label","react_select_browser_esm","ref","cacheOptions","defaultOptions","loadOptions","val","isMulti","isSearchable","autoBlur","closeOnSelect","closeMenuOnSelect","FormText","Row","UncontrolledAlert","style","display","Dropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","divider","copyQueryToClipboard_CopyQueryToClipboard","buildQueryString","PasteQueryFromKeyboard_CopyQueryToClipboard","withRouter","TOGGLE_DEV_MODE","TOGGLE_NAV_BAR","TOGGLE_SEARCH_FOR_COLLABORATOR","toggleDevMode","toggleSearchForCollaborator","FETCH_COLLABORATORS_BEGIN","FETCH_COLLABORATORS_SUCCESS","FETCH_COLLABORATORS_FAILURE","SET_QUERY_STATEMENT","SET_URL","setQueryStatement","queryString","buildURL","item","org","url","params","SearchForCollaborator","selectedQueryStatements","fetchCollaborators","readParams","initialLoad","orgsA","aKey","tKey","parsed","parse","search","keyA","isArray","keyID","keyT","orgL","Jumbotron","fluid","Container","className","searchForUniversityForm_memberSearchModal","mapDispatchToProps","dispatch","res","catch","err","setURL","nav","Loader","pair","values","loader","every","x","TableView","renderDisplayUserItems","pageItems","scope","src_Organizations","organization","src_Keywords","User","fetchKeywords","fetchOrganizations","collaboratorsLoading","collaboratorsError","loadStatus","calculateLoadingState","src_Loading","searchForUniversity","Table","hover","responsive","src_Pagination","Navigation","Navbar","light","expand","NavbarBrand","RRNavLink","exact","to","siteHeading","NavbarToggler","toggleNavBar","Collapse","navOpen","navbar","Nav","NavItem","NavLink","activeClassName","DebugMessage","navIsOpen","devModeOpen","commitBranch","Alert","commitMessage","commitHash","FETCH_SETTINGS_BEGIN","FETCH_SETTINGS_SUCCESS","FETCH_SETTINGS_FAILURE","fetchSettingsBegin","fetchSettingsSuccess","fetchSettingsFailure","WelcomeJumbotron","frontHeading","frontMessage","frontMessageSubText","additionEmailAddress","UnderConstructionCard","Card","border","overflow","borderRadius","zIndex","height","position","CardBody","CardText","CardFooter","LookingForCollaboratorCard","FrontPageCards","src_WelcomeJumbotron","marginBottom","CardDeck","indexPage_LookingForCollaboratorCard","indexPage_UnderConstructionCard","ParseSaveQuery","seconds","tick","timer","setInterval","clearInterval","match","pathname","decoded_query","decode","react_router","NotFound","defaults","baseURL","RootContainer","fetchSettings","src_DebugMessage","src_Navigation","path","component","App","store","es","react_router_dom","AppInfo","tab1Content","hash","tab2Content","licenseError","loadLicense","license","content","tab3Content","moduleLicenseError","loadModuleLicense","moduleLicense","tab4Content","CardColumns","CardImg","top","width","src","alt","loadVersionHash","commitError","activeTab","getCommitHash","getLicense","getModuleLicenses","sha","_this4","tab","_this5","pills","classnames","TabContent","TabPane","tabId","faInfoCircle","Footer","showAppInfoModal","backgroundColor","src_AppInfo","initialState","searchForCollaborator","combineReducers","arguments","undefined","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","applyMiddleware","thunk","createStore","createStoreWithMiddleware","rootReducer","ReactDOM","render","src_App_0","src_Footer","document","getElementById","process","origin","addEventListener","fetch","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","unregisterServiceWorker"],"mappings":"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","file":"static/js/main.7b8bbff7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n   Button, Modal, ModalHeader, ModalBody, ModalFooter,\r\n} from 'reactstrap';\r\nimport './Modal.css';\r\n\r\nexport default class AdditionalDataModal extends Component {\r\n   \r\n   /* Passed in:\r\n      props:\r\n         - title\r\n         - body\r\n    */\r\n\r\n   render() {\r\n      const { openStatus, toggle, size, title, body } = this.props;\r\n      return (\r\n         <Modal isOpen={openStatus} toggle={toggle} centered size={size}>\r\n            <ModalHeader toggle={toggle}>{title}</ModalHeader>\r\n            <ModalBody>\r\n               {body}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" onClick={toggle}>Close</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      );\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n   Modal, ModalHeader, ModalBody,\r\n} from 'reactstrap';\r\nimport './Modal.css';\r\n\r\nexport default class memberSearchModal extends Component {\r\n   \r\n   /* Passed in:\r\n      props:\r\n         - title\r\n         - body\r\n    */\r\n\r\n   render() {\r\n      const { openStatus, size } = this.props;\r\n      return (\r\n         <Modal isOpen={openStatus} centered size={size}>\r\n            <ModalHeader>{this.props.title}</ModalHeader>\r\n            <ModalBody>\r\n               {this.props.body}\r\n            </ModalBody>\r\n         </Modal>\r\n      );\r\n   }\r\n}","export function toTitleCase(str) {\r\n   return str.replace(\r\n      /\\w\\S*/g,\r\n      function (txt) {\r\n         return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n      }\r\n   );\r\n}\r\n\r\n\r\nexport const isEmpty = (queryData) => {\r\n   let empty = true;\r\n   if (queryData.activityKeywords.length !== 0) {\r\n      empty = false;\r\n   }\r\n   if (queryData.topicalKeywords.length !== 0) {\r\n      empty = false;\r\n   }\r\n   if (queryData.selectedUniversities.length !== 0) {\r\n      empty = false;\r\n   }\r\n   return empty;\r\n}\r\n\r\nexport const NBSP = '\\u00A0'","import React, { Component } from 'react';\r\nimport {\r\n   Spinner,\r\n} from 'reactstrap';\r\nimport ErrorModal from './AdditionalDataModal';\r\nimport LoadingModal from './LoadingModal'\r\nimport './App.css';\r\nimport { connect } from 'react-redux'\r\nimport { toTitleCase } from './helper'\r\n\r\n\r\nclass Loading extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         status: false,\r\n         errorModalOpenFlag: false,\r\n         errorModalTitle: '',\r\n         errorModalBody: '',\r\n         loadingItems: {},\r\n         loadingStatus: false,\r\n      }\r\n   }\r\n\r\n   buildErrorMessage(error) {\r\n      let bodyText = []\r\n      try {\r\n         const errorJSON = Object.entries(error.response.data)\r\n         errorJSON.map((([key, value]) => {\r\n            bodyText.push(<span key={key}><b>{toTitleCase(key)}</b>: {value.toString()}</span>)\r\n         }))\r\n      }\r\n      catch {\r\n         bodyText.push(<span key='UDEFERR'><b>Detail</b>: Undefined Error</span>)\r\n      }\r\n      return (bodyText)\r\n   }\r\n\r\n   loadingText(friendlyName, condition, error) {\r\n      let status = <Spinner color=\"primary\" size=\"sm\" />\r\n      if (error !== null) {\r\n         status = <a href=\"#0\" key=\"ERROR\" onClick={() => this.showErrorInfo(error.toString(), this.buildErrorMessage(error))}>Error</a>\r\n      }\r\n      else if (condition === false) {\r\n         status = 'done'\r\n      }\r\n\r\n      return (condition === false && error === null) ? null : <div key={friendlyName}>Loading {friendlyName}... {status}</div>\r\n\r\n   }\r\n\r\n   showErrorInfo(title, body) {\r\n      this.setState({ errorModalTitle: title, errorModalBody: body, errorModalOpenFlag: !this.state.errorModalOpenFlag });\r\n   }\r\n\r\n   errorModalOpenToggle = () => {\r\n      this.setState({ errorModalOpenFlag: !this.state.errorModalOpenFlag });\r\n   };\r\n\r\n\r\n   render() {\r\n      const { body, status } = this.props;\r\n      return (\r\n         <>\r\n            <ErrorModal\r\n               openStatus={this.state.errorModalOpenFlag}\r\n               title={this.state.errorModalTitle}\r\n               body={this.state.errorModalBody}\r\n               toggle={this.errorModalOpenToggle}\r\n               size={'lg'}\r\n            />\r\n            <LoadingModal\r\n               openStatus={!status}\r\n               title={<div>Loading Components</div>}\r\n               body={body.map(loadInfo => this.loadingText(loadInfo.friendlyName, loadInfo.condition, loadInfo.error))}\r\n            />\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   settings: state.settings,\r\n   keywords: state.keywords,\r\n   orgs: state.orgs,\r\n   collaborators: state.collaborators,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Loading)","/*\r\n * Pagination component from @cornflourblue on github\r\n * https://github.com/cornflourblue/react-pagination-example\r\n *\r\n * MIT License\r\n * \r\n * Copyright (c) 2017 Jason Watmore\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n * \r\n * The above copyright notice and this permission notice shall be included in \r\n * all copies or substantial portions of the Software.\r\n * \r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\r\n\r\nconst propTypes = {\r\n   items: PropTypes.array.isRequired,\r\n   onChangePage: PropTypes.func.isRequired,\r\n   initialPage: PropTypes.number,\r\n   pageSize: PropTypes.number\r\n}\r\n\r\nconst defaultProps = {\r\n   initialPage: 1,\r\n   pageSize: 30\r\n}\r\n\r\nclass PaginationWrapper extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { pager: {} };\r\n   }\r\n\r\n   componentDidMount() {\r\n      // set page if items array isn't empty\r\n      if (this.props.items && this.props.items.length) {\r\n         this.setPage(this.props.initialPage);\r\n      }\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState) {\r\n      // reset page if items array has changed\r\n      if (this.props.items !== prevProps.items) {\r\n         this.setPage(this.props.initialPage);\r\n      }\r\n   }\r\n\r\n   setPage(page) {\r\n      var { items, pageSize } = this.props;\r\n      var pager = this.state.pager;\r\n\r\n      if (page < 1 || page > pager.totalPages) {\r\n         return;\r\n      }\r\n\r\n      // get new pager object for specified page\r\n      pager = this.getPager(items.length, page, pageSize);\r\n\r\n      // get new page of items from items array\r\n      var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\r\n\r\n      // update state\r\n      this.setState({ pager: pager });\r\n\r\n      // call change page function in parent component\r\n      this.props.onChangePage(pageOfItems);\r\n   }\r\n\r\n   getPager(totalItems, currentPage, pageSize) {\r\n      // default to first page\r\n      currentPage = currentPage || 1;\r\n\r\n      // default page size is 10\r\n      pageSize = pageSize || 10;\r\n\r\n      // calculate total pages\r\n      var totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n      var startPage, endPage;\r\n      if (totalPages <= 10) {\r\n         // less than 10 total pages so show all\r\n         startPage = 1;\r\n         endPage = totalPages;\r\n      } else {\r\n         // more than 10 total pages so calculate start and end pages\r\n         if (currentPage <= 6) {\r\n            startPage = 1;\r\n            endPage = 10;\r\n         } else if (currentPage + 4 >= totalPages) {\r\n            startPage = totalPages - 9;\r\n            endPage = totalPages;\r\n         } else {\r\n            startPage = currentPage - 5;\r\n            endPage = currentPage + 4;\r\n         }\r\n      }\r\n\r\n      // calculate start and end item indexes\r\n      var startIndex = (currentPage - 1) * pageSize;\r\n      var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n      // create an array of pages to ng-repeat in the pager control\r\n      var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\r\n\r\n      // return object with all pager properties required by the view\r\n      return {\r\n         totalItems: totalItems,\r\n         currentPage: currentPage,\r\n         pageSize: pageSize,\r\n         totalPages: totalPages,\r\n         startPage: startPage,\r\n         endPage: endPage,\r\n         startIndex: startIndex,\r\n         endIndex: endIndex,\r\n         pages: pages\r\n      };\r\n   }\r\n\r\n   render() {\r\n      var pager = this.state.pager;\r\n\r\n      if (!pager.pages || pager.pages.length <= 1) {\r\n         // don't display pager if there is only 1 page\r\n         return null;\r\n      }\r\n\r\n      return (\r\n         <Pagination aria-label=\"pagination\">\r\n\r\n            <PaginationItem disabled={pager.currentPage === 1 ? true : false}>\r\n               <PaginationLink first href=\"#0\" onClick={() => this.setPage(1)}/>\r\n            </PaginationItem>\r\n\r\n            <PaginationItem disabled={pager.currentPage === 1 ? true : false}>\r\n               <PaginationLink previous href=\"#0\" onClick={() => this.setPage(pager.currentPage - 1)} />\r\n            </PaginationItem>\r\n\r\n            {pager.pages.map((page, index) =>\r\n               <PaginationItem key={index} active={pager.currentPage === page ? true : false}>\r\n                  <PaginationLink href=\"#0\" onClick={() => this.setPage(page)}>{page}</PaginationLink>\r\n               </PaginationItem>\r\n            )}\r\n\r\n            <PaginationItem disabled={pager.currentPage === pager.totalPages ? true : false}>\r\n               <PaginationLink next href=\"#0\" onClick={() => this.setPage(pager.currentPage + 1)} />\r\n            </PaginationItem>\r\n\r\n            <PaginationItem disabled={pager.currentPage === pager.totalPages ? true : false}>\r\n               <PaginationLink last href=\"#0\" onClick={() => this.setPage(pager.totalPages)} />\r\n            </PaginationItem>\r\n\r\n         </Pagination>\r\n\r\n      );\r\n   }\r\n}\r\n\r\nPaginationWrapper.propTypes = propTypes;\r\nPaginationWrapper.defaultProps = defaultProps;\r\nexport default PaginationWrapper;","\r\nimport axios from \"axios\";\r\n\r\nexport const Actions = {\r\n   FETCH_KEYWORDS_BEGIN: 'FETCH_KEYWORDS_BEGIN',\r\n   FETCH_KEYWORDS_SUCCESS: 'FETCH_KEYWORDS_SUCCESS',\r\n   FETCH_KEYWORDS_FAILURE: 'FETCH_KEYWORDS_FAILURE'\r\n}\r\n\r\nexport const fetchKeywordsBegin = () => ({\r\n   type: Actions.FETCH_KEYWORDS_BEGIN\r\n});\r\n\r\nexport const fetchKeywordsSuccess = (keywords) => ({\r\n   type: Actions.FETCH_KEYWORDS_SUCCESS,\r\n   payload: { keywords }\r\n})\r\n\r\nexport const fetchKeywordsFailure = (error) => ({\r\n   type: Actions.FETCH_KEYWORDS_FAILURE,\r\n   payload: { error }\r\n})\r\n\r\nexport function fetchKeywords() {\r\n   let keywords = [];\r\n   return dispatch => {\r\n      dispatch(fetchKeywordsBegin());\r\n      return axios.get('api/v1/keywords/?format=json')\r\n         .then(response => {\r\n            response.data.map(keyword => {\r\n               keywords[keyword.id] = keyword;\r\n               return keyword;\r\n            });\r\n            dispatch(fetchKeywordsSuccess(keywords));\r\n         })\r\n         .catch(error => dispatch(fetchKeywordsFailure(error))\r\n      );\r\n   }\r\n}","\r\nimport axios from \"axios\";\r\n\r\nexport const Actions = {\r\n   FETCH_ORGANIZATIONS_BEGIN: 'FETCH_ORGANIZATIONS_BEGIN',\r\n   FETCH_ORGANIZATIONS_SUCCESS: 'FETCH_ORGANIZATIONS_SUCCESS',\r\n   FETCH_ORGANIZATIONS_FAILURE: 'FETCH_ORGANIZATIONS_FAILURE'\r\n}\r\n\r\nexport const fetchOrganizationsBegin = () => ({\r\n   type: Actions.FETCH_ORGANIZATIONS_BEGIN\r\n});\r\n\r\nexport const fetchOrganizationsSuccess = (organizations) => ({\r\n   type: Actions.FETCH_ORGANIZATIONS_SUCCESS,\r\n   payload: { organizations }\r\n})\r\n\r\nexport const fetchOrganizationsFailure = (error) => ({\r\n   type: Actions.FETCH_ORGANIZATIONS_FAILURE,\r\n   payload: { error }\r\n})\r\n\r\nexport function fetchOrganizations() {\r\n   let organizations = [];\r\n   return dispatch => {\r\n      dispatch(fetchOrganizationsBegin());\r\n      return axios.get('api/v1/orgs/?format=json')\r\n         .then(response => {\r\n            response.data.map(organization => {\r\n               organizations[organization.id] = organization;\r\n               return organization;\r\n            });\r\n            dispatch(fetchOrganizationsSuccess(organizations));\r\n         })\r\n         .catch(error => dispatch(fetchOrganizationsFailure(error))\r\n         );\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n   Badge,\r\n   ListGroupItem,\r\n   ListGroup,\r\n} from 'reactstrap';\r\n\r\nimport BaseModal from './AdditionalDataModal';\r\nimport { connect } from 'react-redux'\r\nimport './App.css';\r\n\r\nimport { toTitleCase, NBSP } from './helper'\r\n\r\nfunction getKeywordType(shortKeywordType) {\r\n   if (shortKeywordType === \"TK\") {\r\n      return { name: \"Topical\", color: \"primary\" }\r\n   }\r\n   if (shortKeywordType === \"AK\") {\r\n      return { name: \"Activity\", color: \"secondary\" }\r\n   }\r\n}\r\n\r\nfunction getKeywordSortOrder(shortKeywordSortOrder) {\r\n   if (shortKeywordSortOrder === \"HS\") {\r\n      return { name: \"High Level\", color: \"success\" }\r\n   }\r\n   if (shortKeywordSortOrder === \"MS\") {\r\n      return { name: \"Medium Level\", color: \"warning\" }\r\n   }\r\n   if (shortKeywordSortOrder === \"LS\") {\r\n      return { name: \"Low Level\", color: \"danger\" }\r\n   }\r\n}\r\n\r\nclass Keywords extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         showKeywordOverviewModal: false,\r\n         keywordOverviewModalTitle: 'User Keywords',\r\n         keywordOverviewModalBody: [],\r\n\r\n         showKeywordDetailModal: false,\r\n         keywordDetailModalTitle: 'User Keywords',\r\n         keywordDetailModalBody: [],\r\n      };\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.setState({ keywordOverviewModalBody: this.buildKeywordOverviewModalBody() })\r\n      this.buildDisplayText();\r\n   }\r\n\r\n   buildKeywordOverviewModalBody = () => {\r\n      let modalBody = [];\r\n      const keywordIDs = this.props.items;\r\n      keywordIDs.map(\r\n         keywordID => (\r\n            modalBody.push(\r\n            <ListGroupItem\r\n               key={keywordID} \r\n               tag=\"a\" \r\n               onClick={() => this.showKeywordExtendedData(keywordID)} \r\n               href=\"#0\" \r\n               action\r\n            >\r\n               {toTitleCase(this.props.keywords[keywordID].keywordName)}\r\n            </ListGroupItem>)))\r\n      modalBody = <ListGroup>{modalBody}</ListGroup>\r\n      return modalBody;\r\n   }\r\n\r\n   buildDisplayText = () => {\r\n      let displayText = ''\r\n      const keywordIDs = this.props.items;\r\n\r\n      keywordIDs.map(keywordID => (\r\n         displayText += toTitleCase(\r\n            this.props.keywords[keywordID].keywordName) + \", \"));\r\n      displayText = displayText.substring(0, displayText.length - 2)\r\n      if (displayText.length > this.props.displayLength)\r\n         displayText = displayText.substring(0, this.props.displayLength) + \"...\"\r\n      if (displayText.length > 0)\r\n         displayText = \r\n         <a \r\n            href=\"#0\"\r\n            key={keywordIDs} \r\n            onClick={\r\n               () => this.setState(\r\n                  {\r\n                     showKeywordOverviewModal: !this.state.showKeywordOverviewModal\r\n                  })\r\n               }\r\n         >\r\n            {displayText}\r\n         </a>\r\n      else\r\n         displayText = \"No Keywords\"\r\n      return displayText;\r\n   }\r\n\r\n   showKeywordExtendedData(id) {\r\n      let keywordInfo = this.props.keywords[id];\r\n\r\n      let title = \r\n         <div>\r\n            More Information on <b>{keywordInfo.keywordName.toLowerCase()}</b> keyword\r\n         </div>\r\n      let body = (\r\n         <div>\r\n            <Badge \r\n               color={getKeywordType(keywordInfo.keywordType).color}>\r\n               {getKeywordType(keywordInfo.keywordType).name}\r\n            </Badge>\r\n            {NBSP}\r\n            <Badge \r\n               color={getKeywordSortOrder(keywordInfo.sortOrder).color}>\r\n               {getKeywordSortOrder(keywordInfo.sortOrder).name}\r\n            </Badge>\r\n            <br />\r\n         <span>{keywordInfo.keywordDescription !== null ? keywordInfo.keywordDescription : \"No description provided.\"}</span>\r\n      </div>);\r\n      this.setState({ keywordDetailModalTitle: title, keywordDetailModalBody: body, showKeywordDetailModal: !this.state.showKeywordDetailModal });\r\n   }\r\n\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n         {this.buildDisplayText()}\r\n         <BaseModal\r\n            openStatus={this.state.showKeywordOverviewModal}\r\n            title={this.state.keywordOverviewModalTitle}\r\n            body={this.state.keywordOverviewModalBody}\r\n            toggle={() => this.setState(\r\n               {\r\n                  showKeywordOverviewModal: !this.state.showKeywordOverviewModal\r\n               })}\r\n            size='lg'\r\n         />\r\n         <BaseModal\r\n            openStatus={this.state.showKeywordDetailModal}\r\n            title={this.state.keywordDetailModalTitle}\r\n            body={this.state.keywordDetailModalBody}\r\n            toggle={() => this.setState(\r\n               {\r\n                  showKeywordDetailModal: !this.state.showKeywordDetailModal\r\n               })}\r\n            size='lg'\r\n         />\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   keywords: state.keywords.items,\r\n   keywordsLoading: state.keywords.loading,\r\n   keywordError: state.keywords.error,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Keywords);","import React, { Component } from 'react';\r\nimport {\r\n   Button,\r\n   Badge,\r\n   ListGroupItem,\r\n   ListGroup,\r\n} from 'reactstrap';\r\n\r\nimport BaseModal from './AdditionalDataModal';\r\nimport { connect } from 'react-redux'\r\nimport './App.css';\r\n\r\nimport { NBSP } from './helper'\r\n\r\nfunction getOrgType(shortOrgType) {\r\n   if (shortOrgType === \"IO\") {\r\n      return { name: \"Institution\", color: \"primary\" }\r\n   }\r\n   if (shortOrgType === \"CY\") {\r\n      return { name: \"City\", color: \"secondary\" }\r\n   }\r\n   if (shortOrgType === \"CO\") {\r\n      return { name: \"County\", color: \"success\" }\r\n   }\r\n   if (shortOrgType === \"NG\") {\r\n      return { name: \"NGO\", color: \"warning\" }\r\n   }\r\n   if (shortOrgType === \"RA\") {\r\n      return { name: \"Regional Agency\", color: \"info\" }\r\n   }\r\n}\r\n\r\nclass Organizations extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         showOrganizationOverviewModal: false,\r\n         organizationOverviewModalTitle: 'User Organizations',\r\n         organizationOverviewModalBody: [],\r\n\r\n         showOrganizationDetailModal: false,\r\n         organizationDetailModalTitle: 'User Organizations',\r\n         organizationDetailModalBody: [],\r\n      };\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.setState({ organizationOverviewModalBody: this.buildOrganizationOverviewModalBody() })\r\n      // this.buildDisplayText();\r\n   }\r\n\r\n   buildOrganizationOverviewModalBody = () => {\r\n      let modalBody = [];\r\n      const organizationIDs = this.props.items;\r\n      organizationIDs.map(\r\n         organizationID => (\r\n            modalBody.push(\r\n               <ListGroupItem\r\n                  key={organizationID}\r\n                  tag=\"a\"\r\n                  onClick={() => this.showOrgExtendedData(organizationID)}\r\n                  href=\"#0\"\r\n                  action\r\n               >\r\n                  {this.props.orgs[organizationID].orgNameUnique}\r\n               </ListGroupItem>)))\r\n      modalBody = <ListGroup>{modalBody}</ListGroup>\r\n      return modalBody;\r\n   }\r\n\r\n   buildDisplayText = () => {\r\n      let displayText = ''\r\n      const organizationIDs = this.props.items;\r\n\r\n      organizationIDs.map(organizationID => (\r\n         displayText += this.props.orgs[organizationID].orgNameUnique + \", \"));\r\n      displayText = displayText.substring(0, displayText.length - 2)\r\n      if (displayText.length > this.props.displayLength)\r\n         displayText = displayText.substring(0, this.props.displayLength) + \"...\"\r\n      if (displayText.length > 0)\r\n         displayText =\r\n            <a\r\n               href=\"#0\"\r\n               key={organizationIDs}\r\n               onClick={\r\n                  () => this.setState(\r\n                     {\r\n                        showOrganizationOverviewModal: !this.state.showOrganizationOverviewModal\r\n                     })\r\n               }\r\n            >\r\n               {displayText}\r\n            </a>\r\n      else\r\n         displayText = \"No Organizations\"\r\n      return displayText;\r\n   }\r\n\r\n   showOrgExtendedData(orgID) {\r\n      let orgInfo = this.props.orgs[orgID];\r\n      let title = \r\n         <div>\r\n            {this.props.orgs[orgID].orgNameUnique}\r\n            {NBSP}\r\n            <Badge color={getOrgType(orgInfo.orgType).color}>\r\n            {getOrgType(orgInfo.orgType).name}\r\n            </Badge>\r\n         </div>\r\n\r\n      let body = orgInfo.website !== null ? (\r\n         <Button outline color=\"primary\" size=\"sm\" href={orgInfo.website} target=\"_blank\" rel=\"noopener noreferrer\">Visit Website</Button>\r\n      ) : \"No website provided\";\r\n      this.setState({ organizationDetailModalTitle: title, organizationDetailModalBody: body, showOrganizationDetailModal: !this.state.showOrganizationDetailModal });\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            {this.buildDisplayText()}\r\n            <BaseModal\r\n               openStatus={this.state.showOrganizationOverviewModal}\r\n               title={this.state.organizationOverviewModalTitle}\r\n               body={this.state.organizationOverviewModalBody}\r\n               toggle={() => this.setState(\r\n                  {\r\n                     showOrganizationOverviewModal: !this.state.showOrganizationOverviewModal\r\n                  })}\r\n               size='lg'\r\n            />\r\n            <BaseModal\r\n               openStatus={this.state.showOrganizationDetailModal}\r\n               title={this.state.organizationDetailModalTitle}\r\n               body={this.state.organizationDetailModalBody}\r\n               toggle={() => this.setState(\r\n                  {\r\n                     showOrganizationDetailModal: !this.state.showOrganizationDetailModal\r\n                  })}\r\n               size='lg'\r\n            />\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   orgs: state.orgs.items,\r\n   orgsLoading: state.orgs.loading,\r\n   orgError: state.orgs.error,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Organizations);","import React, { Component } from 'react';\r\nimport {\r\n   Button,\r\n   Badge,\r\n} from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faInfo } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport UserDetailModal from './AdditionalDataModal';\r\nimport Obfuscate from 'react-obfuscate'\r\nimport './App.css';\r\n\r\nimport { NBSP } from './helper'\r\n\r\nlibrary.add(faInfo);\r\n\r\n\r\nfunction getUserTypes(shortUserType) {\r\n   switch (shortUserType) {\r\n      case \"US\":\r\n         return { name: \"University Faculty/Staff\", color: \"primary\" };\r\n      case \"CS\":\r\n         return { name: \"City Staff\", color: \"secondary\" };\r\n      case \"CO\":\r\n         return { name: \"County Staff\", color: \"success\" }\r\n      case \"NS\":\r\n         return { name: \"NGO Staff\", color: \"danger\" }\r\n      case \"RS\":\r\n         return { name: \"Regional Staff\", color: \"warning\" }\r\n      default:\r\n         return { name: \"Error\", color: \"dark\" }\r\n   }\r\n}\r\n\r\nclass UserDetail extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         showUserDetails: false,\r\n         userDetailModalTitle: '',\r\n         userDetailModalBody: '',\r\n      }\r\n   }\r\n\r\n   showUserDetailModal = () => {\r\n      let user = this.props.user\r\n      let title = <div>About <b>{user.firstName} {user.lastName}</b></div>;\r\n      let body = <div>\r\n         <Badge color={getUserTypes(user.userType).color}>{getUserTypes(user.userType).name}</Badge><br />\r\n         <b>Email: </b><Obfuscate email={user.emailAddress} /><br />\r\n         {user.website ? <div><b>Website: </b>{NBSP}<a href={user.website} target=\"_blank\" rel=\"noopener noreferrer\">{user.website}</a></div> : \"\"}\r\n         {user.jobTitle ? <div><b>Job Title: </b>{NBSP}{user.jobTitle}</div> : \"\"}\r\n         {user.description ? <div><b>About: </b>{NBSP}{user.description.split(\"\\n\").map((i, key) => {\r\n            return <div key={key}>{i}< br /></div>;\r\n         })}</div> : \"\"}\r\n      </div>\r\n      this.setState({userDetailModalTitle: title, userDetailModalBody: body, showUserDetails: true})\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <Button onClick={() => this.showUserDetailModal()}><FontAwesomeIcon icon=\"info\" />{NBSP}</Button>\r\n            <UserDetailModal\r\n               openStatus={this.state.showUserDetails}\r\n               title={this.state.userDetailModalTitle}\r\n               body={this.state.userDetailModalBody}\r\n               toggle={() => this.setState({ showUserDetails: !this.state.showUserDetails})}\r\n               size={'lg'}\r\n            />\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default UserDetail","import React, { Component } from 'react';\r\nimport {\r\n   Button,\r\n   Modal,\r\n   ModalHeader,\r\n   ModalBody,\r\n   ModalFooter,\r\n   InputGroup,\r\n   InputGroupAddon,\r\n   Input,\r\n   UncontrolledPopover,\r\n   PopoverHeader,\r\n   PopoverBody\r\n} from 'reactstrap';\r\nimport './Modal.css';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nvar base64 = require('base-64');\r\n\r\n\r\nexport default class CopyQueryToClipboard extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         copyCode: false,\r\n         copyURL: false,\r\n      }\r\n   }\r\n   /* Passed in:\r\n      props:\r\n         - title\r\n         - body\r\n    */\r\n\r\n   render() {\r\n      const { openStatus, toggle, size, query, endpoint } = this.props;\r\n      const protocol = window.location.protocol;\r\n      const host = window.location.host;\r\n      const encodedQuery = base64.encode(query)\r\n      const URL = protocol.concat(\"//\", host, \"/\", endpoint, \"/save/\", encodedQuery);\r\n      return (\r\n         <Modal isOpen={openStatus} toggle={toggle} centered size={size}>\r\n            <ModalHeader toggle={toggle}>Copy Query to Clipboard</ModalHeader>\r\n            <ModalBody>\r\n               Saving or sharing a query is easy! You can copy the code below to\r\n               your clipboard and paste it in on this page later, or you can copy\r\n               the sharable URL.< br />\r\n               <b>Copy code to clipboard</b>\r\n\r\n               <InputGroup>\r\n                  <Input disabled placeholder={encodedQuery} />\r\n                  <InputGroupAddon addonType=\"append\">\r\n\r\n                     <CopyToClipboard text={encodedQuery}\r\n                        onCopy={() => this.setState({ copyCode: true })}>\r\n                        <Button id=\"copyCodeToClipboard\" color=\"success\">Copy to clipboard</Button>\r\n                     </CopyToClipboard>\r\n                     <UncontrolledPopover trigger=\"focus\" placement=\"right\" target=\"copyCodeToClipboard\">\r\n                        <PopoverHeader>Copied Code to Clipboard</PopoverHeader>\r\n                        <PopoverBody>You can share or save this code to return to this query later!<br /><kbd>Ctrl</kbd> + <kbd>V</kbd> can retrieve the code from your clipboard.</PopoverBody>\r\n                     </UncontrolledPopover>\r\n                  </InputGroupAddon>\r\n               </InputGroup>\r\n               <br />\r\n               <b>Want to Copy a URL instead?</b>\r\n\r\n               <InputGroup>\r\n                  <Input disabled placeholder={URL} />\r\n                  <InputGroupAddon addonType=\"append\">\r\n\r\n                     <CopyToClipboard text={URL}\r\n                        onCopy={() => this.setState({ copyURL: true })}>\r\n                        <Button id=\"copyURLToClipboard\" color=\"success\">Copy to clipboard</Button>\r\n                     </CopyToClipboard>\r\n                     <UncontrolledPopover trigger=\"focus\" placement=\"bottom\" target=\"copyURLToClipboard\">\r\n                        <PopoverHeader>Copied URL to Clipboard</PopoverHeader>\r\n                        <PopoverBody>You can share or save this URL to return to this query later!<br /><kbd>Ctrl</kbd> + <kbd>V</kbd> can retrieve the code from your clipboard.</PopoverBody>\r\n                     </UncontrolledPopover>\r\n                  </InputGroupAddon>\r\n               </InputGroup>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" onClick={toggle}>Close</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      );\r\n   }\r\n}","import React, { Component } from 'react';\nimport {\n   Button, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon, Input\n} from 'reactstrap';\nimport './Modal.css';\n\n\nexport default class CopyQueryToClipboard extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         value: '',\n      }\n      this.runQuery = this.runQuery.bind(this)\n      this.handleChange = this.handleChange.bind(this)\n   }\n   /* Passed in:\n      props:\n         - title\n         - body\n    */\n\n   runQuery = () => {\n\n      let newLocation = '/collaborator/save/' + this.state.value\n      this.props.history.push(newLocation)\n   }\n\n   handleChange(event) {\n   this.setState({ value: event.target.value });\n   }\n\n   render() {\n      const { openStatus, toggle, size, endpoint } = this.props;\n      return (\n         <Modal isOpen={openStatus} toggle={toggle} centered size={size}>\n            <ModalHeader toggle={toggle}>Paste Query from Clipboard</ModalHeader>\n            <ModalBody>\n               If you have a code, paste it below to convert it into a query.< br />\n               <b>Paste Code From Clipboard</b>\n\n               <InputGroup>\n                  <Input value={this.state.value} onChange={this.handleChange} autofocus=\"true\"/>\n                  <InputGroupAddon addonType=\"append\">\n                     <Button color=\"success\" onClick={() => this.runQuery()}>Run Query</Button>\n                  </InputGroupAddon>\n               </InputGroup>\n            </ModalBody>\n            <ModalFooter>\n               <Button color=\"primary\" onClick={toggle}>Close</Button>\n            </ModalFooter>\n         </Modal>\n      );\n   }\n}","import React, { Component } from 'react';\r\nimport AsyncSelect from 'react-select/async';\r\nimport axios from \"axios\";\r\nimport {\r\n   Col, Row, Form,\r\n   FormGroup, Label,\r\n   Button, FormText, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, UncontrolledAlert\r\n} from 'reactstrap';\r\nimport '../Modal.css';\r\nimport CopyToClipBoardModal from '../copyQueryToClipboard'\r\nimport PasteFromCipboardModal from '../PasteQueryFromKeyboard'\r\nimport { withRouter } from \"react-router\";\r\nimport { NBSP, isEmpty } from '../helper';\r\nimport { buildQueryString } from './searchForUniversity'\r\n\r\nasync function getKeywords(type, sortOrder) {\r\n   try {\r\n      return await axios.get('api/v1/keywords/?format=json&keywordType=' + type + '&sortOrder=' + sortOrder)\r\n   } catch (error) {\r\n      console.error(error)\r\n   }\r\n}\r\n\r\nasync function parseKeywordData(keywordType) {\r\n   const keywordLow = await getKeywords(keywordType, 'LS');\r\n   const keywordMedium = await getKeywords(keywordType, 'MS');\r\n   const keywordHigh = await getKeywords(keywordType, 'HS');\r\n\r\n   if (keywordLow.data && keywordMedium.data && keywordHigh.data) {\r\n      let keywordLowNormalized = keywordLow.data.map(keyword => ({\r\n         label: keyword.keywordName,\r\n         value: keyword.id\r\n      }));\r\n      let keywordMediumNormalized = keywordMedium.data.map(keyword => ({\r\n         label: keyword.keywordName,\r\n         value: keyword.id\r\n      }));\r\n      let keywordHighNormalized = keywordHigh.data.map(keyword => ({\r\n         label: keyword.keywordName,\r\n         value: keyword.id\r\n      }));\r\n      let keywordOptionData =\r\n         [\r\n            {\r\n               label: 'High Level Keywords',\r\n               options: keywordHighNormalized,\r\n            },\r\n            {\r\n               label: 'Medium Level Keywords',\r\n               options: keywordMediumNormalized,\r\n            },\r\n            {\r\n               label: 'Low Level Keywords',\r\n               options: keywordLowNormalized,\r\n            },\r\n         ]\r\n      return keywordOptionData;\r\n   }\r\n}\r\n\r\n\r\nexport default class memberSearchModal extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         queryData: this.props.selectedQuery,\r\n         validate: {\r\n            emailState: '',\r\n         },\r\n         selectedOption: null,\r\n         modal: false,\r\n         dropdownOpen: false,\r\n\r\n         copyToClipBoardToggle: false,\r\n         pasteFromClipBoardToggle: false,\r\n      }\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n   }\r\n\r\n   getUnivertisyTypes = () => {\r\n      const newRequest = axios.get('/api/v1/orgs/?format=json&orgType=IO')\r\n\r\n      if (newRequest) {\r\n         return newRequest.then(response => {\r\n            return response.data.map(keyword => ({\r\n               label: keyword.orgNameUnique,\r\n               value: keyword.id\r\n            }))\r\n         })\r\n      }\r\n   }\r\n\r\n   handleChange = (e) => {\r\n      let { name, value } = e.target;\r\n      if (e.target.type === \"checkbox\") {\r\n         value = e.target.checked;\r\n      }\r\n      const queryData = { ...this.state.queryData, [name]: value === null ? [] : value };\r\n      this.setState({ queryData });\r\n   };\r\n\r\n   handleSubmit(syntheticEvent) {\r\n      syntheticEvent.preventDefault();\r\n      this.props.submitHandler(this.state.queryData);\r\n\r\n   }\r\n\r\n\r\n\r\n   render() {\r\n\r\n      return (\r\n         <Form onSubmit={this.handleSubmit}>\r\n            <Col>\r\n               <FormGroup>\r\n                  <Label>University Selection</Label>\r\n                  <AsyncSelect\r\n                     ref=\"universitySelection\"\r\n                     name=\"universitySelection\"\r\n                     cacheOptions\r\n                     defaultOptions\r\n\r\n                     value={this.state.queryData.selectedUniversities}\r\n                     loadOptions={this.getUnivertisyTypes}\r\n                     onChange={(val) => this.handleChange({ target: { name: 'selectedUniversities', value: val } })}\r\n                     isMulti={true}\r\n                     isSearchable={false}\r\n                     autoBlur={false}\r\n                     closeOnSelect={false}\r\n                     closeMenuOnSelect={false}\r\n                  />\r\n               </FormGroup>\r\n\r\n               <FormGroup>\r\n                  <Label>Activity Keywords Selection</Label>\r\n                  <AsyncSelect\r\n                     ref=\"activityKeywords\"\r\n                     cacheOptions\r\n                     defaultOptions\r\n                     value={this.state.queryData.activityKeywords}\r\n                     loadOptions={() => parseKeywordData('AK')}\r\n                     onChange={(val) => this.handleChange({ target: { name: 'activityKeywords', value: val } })}\r\n                     isMulti={true}\r\n                     isSearchable={false}\r\n                     autoBlur={false}\r\n                     closeOnSelect={false}\r\n                     closeMenuOnSelect={false}\r\n                  />\r\n                  <FormText>You can leave this blank to select all activity keywords.</FormText>\r\n               </FormGroup>\r\n\r\n               <FormGroup>\r\n                  <Label>Topical Keywords Selection</Label>\r\n                  <AsyncSelect\r\n                     ref=\"topicalKeywordSelection\"\r\n                     cacheOptions\r\n                     defaultOptions\r\n                     value={this.state.queryData.topicalKeywords}\r\n                     loadOptions={() => parseKeywordData('TK')}\r\n                     onChange={(val) => this.handleChange({ target: { name: 'topicalKeywords', value: val } })}\r\n                     isMulti={true}\r\n                     isSearchable={false}\r\n                     autoBlur={false}\r\n                     closeOnSelect={false}\r\n                     closeMenuOnSelect={false}\r\n                  />\r\n                  <FormText>You can leave this blank to select all topical keywords.</FormText>\r\n               </FormGroup>\r\n               <Row>\r\n                  {isEmpty(this.state.queryData) ?\r\n                  <UncontrolledAlert color=\"info\">\r\n                     <b>FYI:</b> You need to select some parameters to run or save a query!\r\n                  </UncontrolledAlert> : null}\r\n               </Row>\r\n               <Row>\r\n                  <div>\r\n                     <div id=\"runQueryButton\" style={{ display: 'inline-block' }}>\r\n                     <Button color=\"success\"><span>Run Query</span></Button>\r\n                     </div>\r\n                  </div>\r\n                  {NBSP}\r\n                  <div>\r\n                     <Dropdown isOpen={this.state.dropdownOpen} toggle={() => this.setState(prevState => ({ dropdownOpen: !prevState.dropdownOpen }))}>\r\n                        <DropdownToggle caret>\r\n                           More Actions\r\n                        </DropdownToggle>\r\n                        <DropdownMenu>\r\n                           <DropdownItem disabled>Export Search (coming soon)</DropdownItem>\r\n                           <DropdownItem divider />\r\n                           <DropdownItem disabled={isEmpty(this.state.queryData)} onClick={() => this.setState({ copyToClipBoardToggle: !this.state.copyToClipBoardToggle })}>Save Query</DropdownItem>\r\n                           <DropdownItem onClick={() => this.setState({ pasteFromClipBoardToggle: !this.state.pasteFromClipBoardToggle })}>Paste Query</DropdownItem>\r\n                        </DropdownMenu>\r\n                     </Dropdown>\r\n                     <CopyToClipBoardModal\r\n                        openStatus={this.state.copyToClipBoardToggle}\r\n                        query={buildQueryString(this.state.queryData)}\r\n                        endpoint=\"collaborator\"\r\n                        toggle={() => this.setState(\r\n                           {\r\n                              copyToClipBoardToggle: !this.state.copyToClipBoardToggle\r\n                           })}\r\n                        size='lg'\r\n                     />\r\n                     <PasteFromCipboardModal\r\n                        openStatus={this.state.pasteFromClipBoardToggle}\r\n                        endpoint=\"collaborator\"\r\n                        history={this.props.history}\r\n                        toggle={() => this.setState(\r\n                           {\r\n                              pasteFromClipBoardToggle: !this.state.pasteFromClipBoardToggle\r\n                           })}\r\n                        size='lg'\r\n                     />\r\n                     \r\n                  </div>\r\n               </Row>\r\n            </Col>\r\n         </Form>\r\n      );\r\n   }\r\n}\r\n\r\nmemberSearchModal = withRouter(memberSearchModal);","export const Actions = {\r\n   TOGGLE_DEV_MODE: 'TOGGLE_DEV_MODE',\r\n   TOGGLE_NAV_BAR: 'TOGGLE_NAV_BAR',\r\n\r\n   TOGGLE_SEARCH_FOR_COLLABORATOR: 'TOGGLE_SEARCH_FOR_COLLABORATOR',\r\n}\r\n\r\nexport const toggleDevMode = () => ({\r\n   type: Actions.TOGGLE_DEV_MODE\r\n});\r\n\r\nexport const toggleNavBar = () => ({\r\n   type: Actions.TOGGLE_NAV_BAR\r\n});\r\n\r\nexport const toggleSearchForCollaborator = () => ({\r\n   type: Actions.TOGGLE_SEARCH_FOR_COLLABORATOR\r\n})","\r\nimport axios from \"axios\";\r\n\r\nexport const Actions = {\r\n   FETCH_COLLABORATORS_BEGIN: 'FETCH_COLLABORATORS_BEGIN',\r\n   FETCH_COLLABORATORS_SUCCESS: 'FETCH_COLLABORATORS_SUCCESS',\r\n   FETCH_COLLABORATORS_FAILURE: 'FETCH_COLLABORATORS_FAILURE',\r\n   SET_QUERY_STATEMENT: 'SET_QUERY_STATEMENT',\r\n   SET_URL: 'SET_URL'\r\n}\r\n\r\nexport const fetchCollaboratorsBegin = () => ({\r\n   type: Actions.FETCH_COLLABORATORS_BEGIN\r\n});\r\n\r\nexport const fetchCollaboratorsSuccess = (collaborators) => ({\r\n   type: Actions.FETCH_COLLABORATORS_SUCCESS,\r\n   payload: { collaborators }\r\n})\r\n\r\nexport const fetchCollaboratorsFailure = (error) => ({\r\n   type: Actions.FETCH_COLLABORATORS_FAILURE,\r\n   payload: { error }\r\n})\r\n\r\nexport const setURL = (URL) => ({\r\n   type: Actions.SET_URL,\r\n   payload: { URL }\r\n})\r\n\r\nexport const setQueryStatement = (query) => ({\r\n   type: Actions.SET_QUERY_STATEMENT,\r\n   payload: { query }\r\n})\r\n\r\nexport const fetchCollaborators = (url) => {\r\n   return dispatch => {\r\n      dispatch(fetchCollaboratorsBegin());\r\n\r\n      axios.get(url)\r\n      .then (res => {dispatch(fetchCollaboratorsSuccess(res.data));})\r\n         .catch(err => { dispatch(fetchCollaboratorsFailure(err));});\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Jumbotron,\r\n} from 'reactstrap';\r\n\r\nimport SearchForCollaboratorForm from './searchForUniversityForm';\r\nimport { connect } from 'react-redux'\r\nimport { toggleSearchForCollaborator } from '../actions/menuActions'\r\nimport { fetchCollaborators, setURL, setQueryStatement } from '../actions/searchForUnivCollaboratorActions'\r\nimport { withRouter } from \"react-router\";\r\nimport { isEmpty } from '../helper'\r\nimport '../App.css';\r\n\r\nconst queryString = require('query-string');\r\n\r\n\r\nexport function buildURL(item) {\r\n   let org = item.selectedUniversities;\r\n   let activityKeywords = item.activityKeywords;\r\n   let topicalKeywords = item.topicalKeywords;\r\n   var url = \"/api/v1/users/?format=json\";\r\n   if (org) {\r\n      for (let i = 0; i < org.length; i++) {\r\n         url += '&organization=' + org[i].value;\r\n      }\r\n   }\r\n   if (activityKeywords) {\r\n      for (let i = 0; i < activityKeywords.length; i++) {\r\n         url += '&keywords=' + activityKeywords[i].value;\r\n      }\r\n   }\r\n   if (topicalKeywords) {\r\n      for (let i = 0; i < topicalKeywords.length; i++) {\r\n         url += '&keywords=' + topicalKeywords[i].value;\r\n      }\r\n   }\r\n   return url;\r\n\r\n}\r\n\r\nexport function buildQueryString(item) {\r\n   let org = item.selectedUniversities;\r\n   let activityKeywords = item.activityKeywords;\r\n   let topicalKeywords = item.topicalKeywords;\r\n   var params = \"\"\r\n   if (org) {\r\n      for (let i = 0; i < org.length; i++) {\r\n         params += 'org=' + org[i].value + '&';\r\n      }\r\n   }\r\n   if (activityKeywords) {\r\n      for (let i = 0; i < activityKeywords.length; i++) {\r\n         params += 'keyA=' + activityKeywords[i].value + '&';\r\n      }\r\n   }\r\n   if (topicalKeywords) {\r\n      for (let i = 0; i < topicalKeywords.length; i++) {\r\n         params += 'keyT=' + topicalKeywords[i].value + '&';\r\n      }\r\n   }\r\n   params = params.substring(0, params.length - 1)\r\n   return params;\r\n}\r\n\r\nclass SearchForCollaborator extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         'selectedQueryStatements': {\r\n            activityKeywords: [],\r\n\r\n            topicalKeywords: [],\r\n\r\n            selectedUniversities: [],\r\n         },\r\n         readParams : false,\r\n         initialLoad: false\r\n      };\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.readParams = this.readParams.bind(this);\r\n   }\r\n\r\n\r\n   componentDidMount() {\r\n      if (isEmpty(this.props.collaborators.selectedQueryStatements)) {\r\n         this.readParams()\r\n         \r\n      }\r\n      else {\r\n         this.props.fetchCollaborators(buildURL(this.props.collaborators.selectedQueryStatements));\r\n         this.props.history.push(`?${buildQueryString(this.props.collaborators.selectedQueryStatements)}`);\r\n         this.setState({ readParams: true })\r\n      }\r\n   }\r\n\r\n   readParams() {\r\n      let orgsA = [];\r\n      let aKey = [];\r\n      let tKey = [];\r\n      const parsed = queryString.parse(this.props.location.search);\r\n      if (parsed.keyA) {\r\n         let keyA = parsed.keyA;\r\n         if (!(Array.isArray(parsed.keyA))) {\r\n            keyA = [parsed.keyA]\r\n         }\r\n         keyA.map(keyID => aKey.push({ label: this.props.keywords.items[keyID].keywordName, value: keyID }))\r\n      }\r\n      if (parsed.keyT) {\r\n         let keyT = parsed.keyT;\r\n         if (!(Array.isArray(parsed.keyT))) {\r\n            keyT = [parsed.keyT]\r\n         }\r\n         keyT.map(keyID => tKey.push({ label: this.props.keywords.items[keyID].keywordName, value: keyID }))\r\n      }\r\n      if (parsed.org) {\r\n         let orgL = parsed.org;\r\n         if (!(Array.isArray(orgL))) {\r\n            orgL = [parsed.org]\r\n         }\r\n         orgL.map(orgID => orgsA.push({ label: this.props.orgs.items[orgID].orgNameUnique, value: orgID }))\r\n      }\r\n      let selectedQueryStatements = {\r\n         activityKeywords: aKey,\r\n         topicalKeywords: tKey,\r\n         selectedUniversities: orgsA\r\n      }\r\n      this.props.setQueryStatement(selectedQueryStatements)\r\n      this.props.fetchCollaborators(buildURL(selectedQueryStatements));\r\n      this.setState({readParams: true})\r\n   }\r\n\r\n   handleSubmit = (item) => {\r\n      if (this.props.collaborators.selectedQueryStatements === item) {\r\n         return\r\n      }\r\n      this.props.setQueryStatement(item);\r\n      this.props.history.push(`?${buildQueryString(item)}`);\r\n      this.props.fetchCollaborators(buildURL(item));\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <Jumbotron fluid>\r\n               <Container fluid>\r\n                  <h1 className=\"display-3\">Looking for a Collaborator?</h1>\r\n                  <p className=\"lead\">Use the form below to query potential collaborators.</p>\r\n                  <hr className=\"my-2\" />\r\n                  {this.state.readParams ? \r\n                  <SearchForCollaboratorForm \r\n                     selectedQuery={this.props.collaborators.selectedQueryStatements}\r\n                     submitHandler={this.handleSubmit}\r\n                     history={this.props.history}/>: null}\r\n               </Container>\r\n            </Jumbotron>\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   nav: state.nav,\r\n   orgs: state.orgs,\r\n   keywords: state.keywords,\r\n   collaborators: state.collaborators,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   toggleSearchForCollaborator,\r\n   fetchCollaborators,\r\n   setURL,\r\n   setQueryStatement,\r\n};\r\n\r\n// function mapDispatchToProps(dispatch) {\r\n//    return bindActionCreators({ toggleSearchForCollaborator, fetchCollaborators}, dispatch)\r\n// }\r\n\r\nSearchForCollaborator = withRouter(SearchForCollaborator);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForCollaborator);","export default class Loader {\r\n   static loadingItems = {};\r\n   static loadingStatus = false;\r\n\r\n   static addLoadItem(key, value) {\r\n      var pair = {[key]: value}\r\n      this.loadingItems = {...this.loadingItems, ...pair}\r\n      // this.loadingStatus = this.calculateLoadingState();\r\n   }\r\n\r\n   static getLoadingItems() {\r\n      return Object.values(this.loadingItems)\r\n   }\r\n\r\n   static loadingState() {\r\n      return this.loadingStatus;\r\n   }\r\n\r\n   static calculateLoadingState(loader) {\r\n      let openStatus = [];\r\n      let loadValues = loader;\r\n      loadValues.map(loadInfo => openStatus.push(loadInfo.condition, loadInfo.error !== null))\r\n      openStatus = openStatus.every(x => x === false);\r\n      return openStatus\r\n   }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Table,\r\n   Spinner,\r\n} from 'reactstrap';\r\nimport PaginationWrapper from './Pagination'\r\nimport { connect } from 'react-redux'\r\nimport {fetchKeywords} from './actions/keywordActions'\r\nimport {fetchOrganizations} from './actions/organizationActions'\r\nimport Keyword from './Keywords'\r\nimport Organizations from './Organizations'\r\nimport UserDetail from './User'\r\nimport SearchForCollaborator from './universityCollaborators/searchForUniversity'\r\nimport Loader from './loader';\r\nimport Loading from './Loading'\r\nimport './App.css';\r\nimport Obfuscate from 'react-obfuscate'\r\n\r\nclass TableView extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         pageItems: [],\r\n         pageSize: 30,\r\n      };\r\n      this.onChangePage = this.onChangePage.bind(this);\r\n   }\r\n  \r\n   componentDidMount() {\r\n      this.props.fetchKeywords();\r\n      this.props.fetchOrganizations();\r\n   }\r\n\r\n   onChangePage(pageOfItems) {\r\n      this.setState({ pageItems: pageOfItems })\r\n   }\r\n\r\n   renderDisplayUserItems = () => {\r\n      const items = this.state.pageItems;\r\n      let renderItems = \"\"\r\n      renderItems = items.map(item => (\r\n         <tr key={item.id}>\r\n            <th scope=\"row\">{item.firstName} {item.lastName}</th>\r\n            <td>{!this.props.orgsLoading || this.props.orgs === [] ? <Organizations items={item.organization} displayLength={20} /> : <Spinner color=\"primary\" />}</td>\r\n            <td><Obfuscate email={item.emailAddress} /></td>\r\n            <td>{!this.props.keywordsLoading || this.props.keywords === [] ? <Keyword items={item.keywords} displayLength={75}/> : <Spinner color=\"primary\" />}</td>\r\n            <td><UserDetail user={item}/></td>\r\n         </tr>\r\n      ));\r\n      return renderItems;\r\n   };\r\n\r\n   render() {\r\n      let loader = [\r\n         { friendlyName: 'Keywords', condition: this.props.keywordsLoading, error: this.props.keywordError },\r\n         { friendlyName: 'Organizations', condition: this.props.orgsLoading, error: this.props.orgError },\r\n         { friendlyName: 'Users', condition: this.props.collaboratorsLoading, error: this.props.collaboratorsError },\r\n      ]\r\n      let loadStatus = Loader.calculateLoadingState(loader);      \r\n      return (\r\n         <>\r\n            <Loading body={loader} status={loadStatus} />\r\n            {(!this.props.keywordsLoading || this.props.keywords === []) && (!this.props.orgsLoading || this.props.orgs === []) ? <SearchForCollaborator /> : <Spinner color=\"primary\" /> }\r\n         <Container fluid>\r\n            <Table hover responsive>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Name</th>\r\n                     <th>Organization</th>\r\n                     <th>Email Address</th>\r\n                     <th>Keywords</th>\r\n                     <th>More Information</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {this.renderDisplayUserItems()}\r\n               </tbody>\r\n            </Table>\r\n            <PaginationWrapper pageSize={this.state.pageSize} items={this.props.collaborators} onChangePage={this.onChangePage} />\r\n         </Container>\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   keywords: state.keywords.items,\r\n   keywordsLoading: state.keywords.loading,\r\n   keywordError: state.keywords.error,\r\n\r\n   orgs: state.orgs.items,\r\n   orgsLoading: state.orgs.loading,\r\n   orgError: state.orgs.error,\r\n\r\n   collaborators: state.collaborators.items,\r\n   collaboratorsLoading: state.collaborators.loading,\r\n   collaboratorsError: state.collaborators.error,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   fetchKeywords,\r\n   fetchOrganizations\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableView);","import React, { Component } from 'react';\r\nimport {\r\n   Collapse,\r\n   Navbar,\r\n   NavbarToggler,\r\n   NavbarBrand,\r\n   Nav,\r\n   NavItem,\r\n   NavLink,\r\n   } from 'reactstrap';\r\nimport './App.css';\r\nimport { connect } from 'react-redux';\r\nimport { toggleNavBar, toggleDevMode, toggleSearchForCollaborator } from './actions/menuActions'\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\n\r\nclass Navigation extends Component {\r\n\r\n   render() {\r\n      const {nav, settings} = this.props;\r\n      return (\r\n\r\n         <Navbar color=\"light\" light expand=\"md\">\r\n            <NavbarBrand tag={RRNavLink} exact to=\"/\">{settings.siteHeading}</NavbarBrand>\r\n            <NavbarToggler onClick={() => this.props.toggleNavBar()} />\r\n            <Collapse isOpen={nav.navOpen} navbar>\r\n               <Nav className=\"ml-auto\" navbar>\r\n                  <NavItem>\r\n                     <NavLink tag={RRNavLink} exact to=\"/collaborator\" activeClassName=\"active\">Search for a University Collaborator</NavLink>\r\n                     {/* <SearchForCollaborator /> */}\r\n                  </NavItem>\r\n                  <NavItem>\r\n                  </NavItem>\r\n               </Nav>\r\n            </Collapse>\r\n         </Navbar>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   nav: state.nav,\r\n   settings: state.settings,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   toggleNavBar,\r\n   toggleDevMode,\r\n   toggleSearchForCollaborator\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation)","import React, { Component } from 'react';\r\nimport {\r\n   Alert,\r\n} from 'reactstrap';\r\nimport './App.css';\r\nimport { connect } from 'react-redux';\r\nimport {toggleDevMode} from './actions/menuActions'\r\n\r\nclass DebugMessage extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n         navIsOpen: false,\r\n         devModeOpen: true,\r\n      };\r\n   }\r\n\r\n   render() {\r\n      const { nav, settings } = this.props;\r\n      return (\r\n         <>\r\n         {settings.commitBranch === \"dev\" ? (\r\n               <Alert color=\"light\" isOpen={nav.devModeOpen} toggle={() => this.props.toggleDevMode()}>\r\n                  <h4 className=\"alert-heading\">Development Mode</h4>\r\n                  <p>\r\n                     The 4C database query utility is currently being <b>developed</b>. To view the repository, please visit: <a href=\"https://github.com/dgaiero/c4-website\">https://github.com/dgaiero/c4-website</a>\r\n                  </p>\r\n                  <p>\r\n                     Directory information contained on this website may be falsified while the site is under development.\r\n                  </p>\r\n                  <hr />\r\n                  <p className=\"mb-0\">\r\n                     The current running commit has a message of: <em>{settings.commitMessage}</em>< br />\r\n                     When providing support or feedback, please provide the following version information:< br />\r\n                     <code>{settings.commitBranch}/{settings.commitHash}</code>< br />\r\n                     <a href={'https://github.com/dgaiero/c4-website/tree/' + settings.commitHash} target=\"_blank\" rel=\"noopener noreferrer\">Open in Remote</a>\r\n                  </p>\r\n               </Alert>\r\n            ) : null}\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   nav: state.nav,\r\n   settings: state.settings,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   toggleDevMode\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DebugMessage);","import axios from 'axios';\r\n\r\nexport const Actions = {\r\n   FETCH_SETTINGS_BEGIN: 'FETCH_SETTINGS_BEGIN',\r\n   FETCH_SETTINGS_SUCCESS: 'FETCH_SETTINGS_SUCCESS',\r\n   FETCH_SETTINGS_FAILURE: 'FETCH_SETTINGS_FAILURE',\r\n}\r\n\r\nexport const fetchSettingsBegin = () => ({\r\n   type: Actions.FETCH_SETTINGS_BEGIN\r\n});\r\n\r\nexport const fetchSettingsSuccess = (settings) => ({\r\n   \r\n   type: Actions.FETCH_SETTINGS_SUCCESS,\r\n   payload: {settings}\r\n})\r\n\r\nexport const fetchSettingsFailure = (error) => ({\r\n   type: Actions.FETCH_SETTINGS_FAILURE,\r\n   payload: { error }\r\n})\r\n\r\nexport function fetchSettings() {\r\n   return dispatch => {\r\n      dispatch(fetchSettingsBegin());\r\n      return axios.get('api/v1/frontendParameters/1/?format=json')\r\n         .then(response => {dispatch(fetchSettingsSuccess(response.data))})\r\n         .catch(error => dispatch(fetchSettingsFailure(error)));\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Button,\r\n   Jumbotron,\r\n} from 'reactstrap';\r\nimport './App.css';\r\nimport './welcomeJumbotron.css'\r\nimport { connect } from 'react-redux';\r\n\r\nclass WelcomeJumbotron extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n         navIsOpen: false,\r\n         devModeOpen: true,\r\n      };\r\n   }\r\n   render() {\r\n      const { settings } = this.props;\r\n      return (\r\n\r\n         <Jumbotron className=\"welcome\" fluid>\r\n            <Container fluid>\r\n               <h1 className=\"display-3\">{settings.frontHeading}</h1>\r\n               <p className=\"lead\">{settings.frontMessage}</p>\r\n               <hr className=\"my-2\" />\r\n               <p>{settings.frontMessageSubText}</p>\r\n               <p className=\"lead\">\r\n                  <Button href={'mailto:' + settings.additionEmailAddress} color=\"secondary\">Request Addition to Database</Button>\r\n               </p>\r\n            </Container>\r\n         </Jumbotron>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   settings: state.settings,\r\n})\r\n\r\nexport default connect(mapStateToProps)(WelcomeJumbotron)","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Button,\r\n   Card,\r\n   CardDeck,\r\n   CardFooter,\r\n   CardBody,\r\n   CardText,\r\n} from 'reactstrap';\r\nimport './App.css';\r\nimport './indexCards.css'\r\nimport { connect } from 'react-redux';\r\nimport WelcomeJumbotron from './WelcomeJumbotron';\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst UnderConstructionCard = () => {\r\n   return (\r\n      <Card className=\"cardHideOverflow card-no-border\" >\r\n            <div style={{ border: '1px solid rgb(33, 37, 41)', overflow: 'hidden', borderRadius: '.25rem', 'zIndex': '300', 'height': '100%', 'position': 'relative' }}>\r\n                <span className=\"newFeaturesBanner\"><b>New Features Coming Soon!</b></span>\r\n                <div className=\"underConstructionCardImage\">\r\n                <CardBody>\r\n                    <h5 className='cardTitle'>Under Construction</h5>\r\n                    <CardText>New features will be coming soon!</CardText>\r\n                </CardBody>\r\n                <CardFooter><Button color=\"secondary\" disabled>Button Coming Soon</Button></CardFooter>\r\n                </div>\r\n            </div>\r\n         </Card>\r\n   )\r\n}\r\n\r\nconst LookingForCollaboratorCard = () => {\r\n   return (\r\n      <Card className=\"cardHideOverflow card-no-border\" >\r\n            <div style={{ border: '1px solid rgb(33, 37, 41)', overflow: 'hidden', borderRadius: '.25rem' }}>\r\n                <div className=\"lookingForCollaboratorCardImage\">\r\n                <CardBody>\r\n                    <h5 className='cardTitle'>Looking for a University Collaborator?</h5>\r\n                    <CardText>Interested in finding a university to work on a project with?</CardText>\r\n\r\n                </CardBody>\r\n                <CardFooter><Button color=\"secondary\" tag={RRNavLink} exact to=\"/collaborator\">Search For a University Collaborator</Button></CardFooter>\r\n                </div>\r\n            </div>\r\n         </Card>\r\n   )\r\n}\r\n\r\nclass FrontPageCards extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n         navIsOpen: false,\r\n         devModeOpen: true,\r\n      };\r\n   }\r\n   render() {\r\n      return (\r\n         <>\r\n         <WelcomeJumbotron />\r\n            <Container>\r\n               <div style={{ marginBottom: '32px' }}>\r\n                  <CardDeck className=\"\">\r\n                     <LookingForCollaboratorCard />\r\n                     <UnderConstructionCard />\r\n                     <UnderConstructionCard />\r\n                  </CardDeck>\r\n               </div>\r\n            </Container>\r\n        </>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   settings: state.settings,\r\n})\r\n\r\n// FrontPageCards = withRouter(FrontPageCards)\r\n\r\nexport default connect(mapStateToProps)(FrontPageCards)","import React, { Component } from 'react';\r\nimport {\r\n   Jumbotron,\r\n   Button\r\n} from 'reactstrap';\r\nimport { NavLink as RRNavLink, Redirect } from 'react-router-dom';\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from 'react-redux'\r\n\r\nimport { setQueryStatement } from '../actions/searchForUnivCollaboratorActions'\r\nvar base64 = require('base-64');\r\n\r\nclass ParseSaveQuery extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { seconds: 5 }\r\n      this.tick = this.tick.bind(this)\r\n      this.props.setQueryStatement({\r\n         activityKeywords: [],\r\n\r\n         topicalKeywords: [],\r\n\r\n         selectedUniversities: [],\r\n      })\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.timer = setInterval(this.tick, 1000);\r\n   }\r\n\r\n   tick() {\r\n      if (this.state.seconds > 0) {\r\n         this.setState({ seconds: this.state.seconds - 1 })\r\n      } else {\r\n         clearInterval(this.timer);\r\n      }\r\n   }\r\n\r\n   render() {\r\n      const { match, history } = this.props;\r\n      if (!match.params.id) {\r\n         history.replace({ pathname: '/collaborator' });\r\n      }\r\n      let query = match.params.id;\r\n      let decoded_query;\r\n      try {\r\n      decoded_query = base64.decode(query);\r\n      }\r\n      catch {\r\n         return (\r\n            <Jumbotron>\r\n               <h1 className=\"display-3\">No Match Found!</h1>\r\n               <p className=\"lead\">A match could not be found for the code <code>{query}</code></p>\r\n               <hr className=\"my-2\" />\r\n               <p>You will be redirected to the homepage in {this.state.seconds} seconds</p>\r\n               {this.state.seconds === 0 ? <Redirect to='/' /> : null}\r\n               <p className=\"lead\">\r\n                  <Button tag={RRNavLink} exact to=\"/\" color=\"primary\">Go Home</Button>\r\n               </p>\r\n            </Jumbotron>\r\n         )\r\n      }\r\n      // history.push('/collaborator?' + decoded_query)\r\n      // this.setQueryURL();\r\n      \r\n      return (\r\n         <Jumbotron>\r\n            <h1 className=\"display-3\">Match Found!</h1>\r\n            <p className=\"lead\">A match could be found for the code <code>{query}</code></p>\r\n            {/* <hr className=\"my-2\" /> */}\r\n            <hr className=\"my-2\" />\r\n            <p>You will be redirected to <code>{'/collaborator?' + decoded_query}</code> in {this.state.seconds} seconds</p>\r\n            {/* {this.state.seconds === 0 ? <Redirect to={'/collaborator?' + decoded_query} /> : null} */}\r\n            <Redirect to={'/collaborator?'+decoded_query}/>\r\n         </Jumbotron>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   collaborators: state.collaborators,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   setQueryStatement,\r\n};\r\n\r\n// function mapDispatchToProps(dispatch) {\r\n//    return bindActionCreators({ toggleSearchForCollaborator, fetchCollaborators}, dispatch)\r\n// }\r\n\r\n// SearchForCollaborator = withRouter(SearchForCollaborator);\r\n\r\nParseSaveQuery = withRouter(ParseSaveQuery);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ParseSaveQuery);","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Button,\r\n   Jumbotron,\r\n} from 'reactstrap';\r\nimport './App.css';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass NotFound extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n         navIsOpen: false,\r\n         devModeOpen: true,\r\n      };\r\n   }\r\n   render() {\r\n      const { pathname } = this.props.location;\r\n      return (\r\n\r\n         <Jumbotron fluid>\r\n            <Container fluid>\r\n               <h1 className=\"display-3\">404</h1>\r\n               <p className=\"lead\">Page not found</p>\r\n               <hr className=\"my-2\" />\r\n               <p>The requested URL was not found on this server</p>\r\n               <p className=\"lead\">\r\n                  The path <code>{pathname}</code> could not be found in this application.\r\n               </p>\r\n            </Container>\r\n         </Jumbotron>\r\n      );\r\n   }\r\n}\r\n\r\nexport default NotFound","import React, { Component } from 'react';\r\nimport Loading from './Loading'\r\nimport './App.css';\r\nimport { connect } from 'react-redux';\r\nimport TableView from './TableView'\r\nimport Navigation from './Navigation'\r\nimport DebugMessage from './DebugMessage'\r\nimport { fetchSettings }from './actions/settingsActions'\r\nimport FrontPageCards from './indexPage';\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport ParseSaveQuery from './universityCollaborators/parseSaveQuery'\r\nimport Loader from './loader';\r\nimport NotFound from './404'\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = \"https://api.centralcoastclimate.org\"\r\n// axios.defaults.baseURL = \"http://192.168.86.218:8000\"\r\n\r\nclass RootContainer extends Component {\r\n\r\n   componentDidMount() {\r\n      this.props.fetchSettings();\r\n   }\r\n\r\n   render() {\r\n      let loader = [\r\n         { friendlyName: 'Settings', condition: this.props.settings.loading, error: this.props.settings.error },\r\n      ]\r\n      let loadStatus = Loader.calculateLoadingState(loader);\r\n      return (\r\n         <main className=\"App content\">\r\n            <Loading body={loader} status={loadStatus} />\r\n                  <DebugMessage />\r\n                  <Navigation />\r\n                  <Switch>\r\n                     <Route path=\"/\" exact component={FrontPageCards} />\r\n                     <Route path=\"/collaborator/save/:id?\" component={ParseSaveQuery} />\r\n                     <Route path=\"/collaborator/\" exact component={TableView} />\r\n                     <Route component={NotFound} status={404}/>\r\n                  </Switch>\r\n         </main>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   settings: state.settings,\r\n   keywords: state.keywords,\r\n   orgs: state.orgs,\r\n   collaborators: state.collaborators\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   fetchSettings,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RootContainer)","import React from 'react';\r\nimport './App.css';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport RootContainer from './RootContainer';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nconst App = ({ store }) => (\r\n   <Provider store={store}>\r\n      <Router>\r\n         <Route path=\"/:filter?\" component={RootContainer} />\r\n      </Router>\r\n   </Provider>\r\n);\r\n\r\n\r\nApp.propTypes = {\r\n   store: PropTypes.object.isRequired\r\n}\r\n\r\nexport default App;","// https://api.github.com/repos/dgaiero/c4-website/commits/gh-pages\n\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport {\n   Alert,\n   Button,\n   Nav,\n   NavItem,\n   NavLink,\n   Modal,\n   ModalHeader,\n   ModalFooter,\n   ModalBody, TabContent, TabPane, Card, CardText, CardDeck, CardBody, CardFooter, CardColumns, CardImg,\n   Spinner\n} from 'reactstrap';\nimport './App.css';\nimport './appInfo.css';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport Obfuscate from \"react-obfuscate\";\nvar base64 = require('base-64');\n\nclass AppInfo extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         hash: 'Loading',\n         loadVersionHash: true,\n         commitError: null,\n\n         license: 'Loading',\n         loadLicense: true,\n         licenseError: null,\n\n         moduleLicense: 'Loading',\n         loadModuleLicense: true,\n         moduleLicenseError: null,\n\n         activeTab: '1'\n      };\n      this.getCommitHash = this.getCommitHash.bind(this);\n      this.getLicense = this.getLicense.bind(this);\n      this.getModuleLicenses = this.getModuleLicenses.bind(this);\n      this.toggle = this.toggle.bind(this);\n   }\n\n   componentDidMount() {\n      this.getCommitHash();\n      this.getLicense();\n      this.getModuleLicenses();\n   }\n\n   getCommitHash() {\n      axios.get('https://api.github.com/repos/dgaiero/c4-website/commits/gh-pages')\n         .then(res => {\n            this.setState({ hash: res.data.sha, loadVersionHash: false });\n         })\n         .catch(err => this.setState({ commitError: err.response }))\n   }\n\n   getLicense() {\n      axios.get('https://api.github.com/repos/dgaiero/c4-website/license')\n         .then(res => {\n            this.setState({ license: res.data, loadLicense: false });\n         })\n         .catch(err => this.setState({ licenseError: err.response }))\n   }\n\n   getModuleLicenses() {\n      axios.get('https://raw.githubusercontent.com/dgaiero/c4-website/dev/webserver/c4Lookup/c4frontend/oLICENSE')\n         .then(res => {\n            this.setState({ moduleLicense: res.data, loadModuleLicense: false });\n         })\n         .catch(err => this.setState({ moduleLicenseError: err.response }))\n   }\n\n   toggle(tab) {\n      if (this.state.activeTab !== tab) {\n         this.setState({\n            activeTab: tab\n         });\n      }\n   }\n\n   tab1Content = () => {\n      return (\n         <>\n            <Alert color=\"dark\">\n               <h4 className=\"alert-heading\">Application Frontend and Backend Versions</h4>\n               <p>\n                  This application is broken up into a frontend service\n                  (this website) and a backend API service.\n                  Each service has its own version information.\n                              </p>\n               <hr />\n               <p className=\"mb-0\">\n                  When providing feedback or if you have a question or\n                  issue with this website, please make sure to refer to\n                                 <b> both</b> version tags.\n                              </p>\n            </Alert>\n\n            <div style={{ marginBottom: '16px' }}>\n               <CardDeck>\n                  <Card>\n                     <CardBody>\n                        <h5 className='cardTitle'>Backend API</h5>\n                        <CardText>\n                           <b>Branch: </b>{this.props.settings.commitBranch}< br />\n                           <b>Commit Hash: </b><code>{this.props.settings.commitHash}</code><br />\n                        </CardText>\n\n                     </CardBody>\n                     <CardFooter><a href={'https://github.com/dgaiero/c4-website/tree/' + this.props.settings.commitHash} target=\"_blank\" rel=\"noopener noreferrer\">Open in Remote</a></CardFooter>\n                  </Card>\n                  <Card>\n                     <CardBody>\n                        <h5 className='cardTitle'>Frontend Service</h5>\n                        <b>Commit Hash: </b><code>{this.state.hash}</code><br />\n\n                     </CardBody>\n                     <CardFooter><a href={'https://github.com/dgaiero/c4-website/tree/' + this.state.hash} target=\"_blank\" rel=\"noopener noreferrer\">Open in Remote</a></CardFooter>\n                  </Card>\n               </CardDeck>\n            </div>\n            Designed and developed by Dominic Gaiero (<Obfuscate email=\"4cwebsite@dgaiero.me\" />)\n         </>\n      )\n   }\n\n   tab2Content = () => {\n      return (\n         <>\n         {this.state.licenseError !== null ? \"An error occured fetching the license\" :\n            !this.state.loadLicense ? \n            <>\n               <b>This application is licensed under the {this.state.license.license.name}</b>\n               <pre className=\"license form-control\">{base64.decode(this.state.license.content)}</pre>\n            </>\n         : <Spinner color=\"primary\" />\n         }\n         </>\n      )\n   }\n\n   tab3Content = () => {\n      return (\n         <>\n            {this.state.moduleLicenseError !== null ? \"An error occured fetching the license\" :\n               !this.state.loadModuleLicense ?\n                  <>\n                     <b>The following is all of the licenses of software used in this application</b>\n                     <pre className=\"license form-control\">{this.state.moduleLicense}</pre>\n                  </>\n                  : <Spinner color=\"primary\" />\n            }\n         </>\n      )\n   }\n\n   tab4Content = () => {\n      return (\n         <>\n            <CardColumns>\n               <Card>\n                  <CardImg top width=\"100%\" src=\"https://images.unsplash.com/photo-1478486982180-2de2fafa19f9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80\" alt=\"Construction Image\" />\n                  <CardBody>\n                     <CardText><span>Photo by <a href=\"https://unsplash.com/@thatsmrbio?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Matthew Hamilton</a> on <a href=\"/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></CardText>\n                  </CardBody>\n               </Card>\n               <Card>\n                  <CardImg top width=\"100%\" src=\"https://images.unsplash.com/photo-1552664730-d307ca884978?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjE3MzYxfQ&auto=format&fit=crop&w=500&q=80\" alt=\"Collaboration Image\" />\n                  <CardBody>\n                     <CardText><span>Photo by <a href=\"https://unsplash.com/@youxventures?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">You X Ventures</a> on <a href=\"/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></CardText>\n                  </CardBody>\n               </Card>\n               <Card>\n                  <CardImg top width=\"100%\" src=\"https://images.unsplash.com/photo-1491772135384-20292e4b5ea1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80\" alt=\"Waves Image\" />\n                  <CardBody>\n                     <CardText><span>Photo by <a href=\"https://unsplash.com/@johnonolan?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">John O'Nolan</a> on <a href=\"/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></CardText>\n                  </CardBody>\n               </Card>\n            </CardColumns>\n         </>\n      )\n   }\n\n   render() {\n      const { openStatus, toggle, settings } = this.props;\n      return (\n         <>\n            {/* <span className = \"text-muted\">{this.state.hash}</span> */}\n            <Modal isOpen={openStatus} toggle={toggle} size=\"lg\">\n               <ModalHeader toggle={toggle}>Application Information</ModalHeader>\n               <ModalBody>\n                  <div>\n                     <Nav pills>\n                        <NavItem>\n                           <NavLink\n                              href=\"#0\"\n                              className={classnames({ active: this.state.activeTab === '1' })}\n                              onClick={() => { this.toggle('1'); }}>\n                              About Application\n                           </NavLink>\n                        </NavItem>\n                        <NavItem>\n                           <NavLink\n                              href=\"#0\"\n                              className={classnames({ active: this.state.activeTab === '2' })}\n                              onClick={() => { this.toggle('2'); }}>\n                              Application License\n                           </NavLink>\n                        </NavItem>\n                        <NavItem>\n                           <NavLink\n                              href=\"#0\"\n                              className={classnames({ active: this.state.activeTab === '3' })}\n                              onClick={() => { this.toggle('3'); }}>\n                              Other Licenses\n                           </NavLink>\n                        </NavItem>\n                        <NavItem>\n                           <NavLink\n                              href=\"#0\"\n                              className={classnames({ active: this.state.activeTab === '4' })}\n                              onClick={() => { this.toggle('4'); }}>\n                              Photo Credits\n                           </NavLink>\n                        </NavItem>\n                     </Nav>\n                     < br />\n                     <TabContent activeTab={this.state.activeTab}>\n                        <TabPane tabId=\"1\">\n                           {this.tab1Content()}\n                        </TabPane>\n                        <TabPane tabId=\"2\">\n                           {this.tab2Content()}\n                        </TabPane>\n                        <TabPane tabId=\"3\">\n                           {this.tab3Content()}\n                        </TabPane>\n                        <TabPane tabId=\"4\">\n                           {this.tab4Content()}\n                        </TabPane>\n                     </TabContent>\n                  </div>\n               </ModalBody>\n               <ModalFooter>\n                  <Button color=\"primary\" onClick={toggle}>Close</Button>\n               </ModalFooter>\n            </Modal>\n         </>\n      )\n   }\n\n}\n\nconst mapStateToProps = state => ({\n   settings: state.settings,\n})\n\nexport default connect(mapStateToProps)(AppInfo)","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n} from 'reactstrap';\r\n\r\nimport './App.css';\r\nimport { NBSP } from './helper';\r\nimport './footer.css'\r\nimport AppInfo from './AppInfo'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faInfoCircle);\r\n\r\nclass Footer extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         showAppInfoModal: false,\r\n      };\r\n   }\r\n   render() {\r\n      return (\r\n         <footer className=\"footer mt-auto py-3\" style={{ backgroundColor: '#F8F9FA' }}>\r\n            <Container fluid className=\"clearfix\">\r\n               <div className=\"float-left\">\r\n                  <AppInfo\r\n                     openStatus={this.state.showAppInfoModal}\r\n                     toggle={() => this.setState(\r\n                        {\r\n                           showAppInfoModal: !this.state.showAppInfoModal\r\n                        })}\r\n                  />\r\n                  <a\r\n                     href=\"#0\"\r\n                     onClick={\r\n                        () => this.setState(\r\n                           {\r\n                              showAppInfoModal: !this.state.showAppInfoModal\r\n                           })\r\n                     }\r\n                  ><FontAwesomeIcon icon=\"info-circle\" /></a>\r\n                  {NBSP}<span className=\"text-muted\">|</span>{NBSP}\r\n                  <span className=\"text-muted\">Copyright {'\\u00A9'} 2019 Central Coast Climate Collaborative </span>\r\n               </div>\r\n               <div className=\"float-right\">\r\n                  <p className=\"c4-icon text-muted\"></p>\r\n                  {NBSP}\r\n                  <a href=\"https://www.centralcoastclimate.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Visit main website</a>\r\n               </div>\r\n            </Container>\r\n         </footer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps)(Footer)","import { Actions } from '../actions/settingsActions'\r\n\r\nconst initialState = {\r\n   siteHeading: 'Loading...',\r\n   frontHeading: 'Loading...',\r\n   frontMessage: 'Loading...',\r\n   frontMessageSubText: 'Loading...',\r\n   additionEmailAddress: 'Loading...',\r\n   commitBranch: 'master',\r\n   commitHash: 'Loading...',\r\n   commitMessage: 'Loading...',\r\n   loading: true,\r\n   error: null,\r\n}\r\n\r\nexport default function settingsReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case Actions.FETCH_SETTINGS_BEGIN:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            error: null,\r\n         }\r\n      case Actions.FETCH_SETTINGS_SUCCESS:\r\n         return {\r\n            ...state,\r\n            ...action.payload.settings,\r\n            loading: false,\r\n         }\r\n      case Actions.FETCH_SETTINGS_FAILURE:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload.error,\r\n            items: [],\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import {Actions} from '../actions/keywordActions'\r\n\r\nconst initialState = {\r\n   items: [],\r\n   loading: true,\r\n   error: null\r\n}\r\n\r\nexport default function keywordsReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case Actions.FETCH_KEYWORDS_BEGIN:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            error: null,\r\n         }\r\n      case Actions.FETCH_KEYWORDS_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            items: action.payload.keywords,\r\n         }\r\n      case Actions.FETCH_KEYWORDS_FAILURE:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload.error,\r\n            items: [],\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import {Actions} from '../actions/organizationActions'\r\n\r\nconst initialState = {\r\n   items: [],\r\n   loading: true,\r\n   error: null\r\n}\r\n\r\nexport default function organizationsReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case Actions.FETCH_ORGANIZATIONS_BEGIN:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            error: null,\r\n         }\r\n      case Actions.FETCH_ORGANIZATIONS_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            items: action.payload.organizations,\r\n         }\r\n      case Actions.FETCH_ORGANIZATIONS_FAILURE:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload.error,\r\n            items: [],\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import {Actions} from '../actions/menuActions'\r\n\r\nconst initialState = {\r\n   searchForCollaborator: false,\r\n   devModeOpen: false,\r\n   navOpen: false,\r\n}\r\n\r\nexport default function menuReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case Actions.TOGGLE_SEARCH_FOR_COLLABORATOR:\r\n         return {\r\n            ...state,\r\n            searchForCollaborator: !state.searchForCollaborator,\r\n         }\r\n      case Actions.TOGGLE_DEV_MODE:\r\n         return {\r\n            ...state,\r\n            devModeOpen: !state.devModeOpen\r\n         };\r\n      case Actions.TOGGLE_NAV_BAR:\r\n         return {\r\n            ...state,\r\n            navOpen: !state.navOpen\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import { Actions } from '../actions/searchForUnivCollaboratorActions'\r\n\r\nconst initialState = {\r\n   items: [],\r\n   loading: true,\r\n   error: null,\r\n   url: '',\r\n   'selectedQueryStatements': {\r\n      activityKeywords: [],\r\n\r\n      topicalKeywords: [],\r\n\r\n      selectedUniversities: [],\r\n   }\r\n}\r\n\r\nexport default function collaboratorsReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case Actions.FETCH_COLLABORATORS_BEGIN:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            error: null,\r\n         }\r\n      case Actions.FETCH_COLLABORATORS_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            items: action.payload.collaborators,\r\n         }\r\n      case Actions.FETCH_COLLABORATORS_FAILURE:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload.error,\r\n            items: [],\r\n         }\r\n      case Actions.SET_QUERY_STATEMENT:\r\n         return {\r\n            ...state,\r\n            selectedQueryStatements: action.payload.query,\r\n         }\r\n      case Actions.SET_URL:\r\n         return {\r\n            ...state,\r\n            url: action.payload.url,\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import {combineReducers} from 'redux'\r\n\r\nimport settings from './settingsReducer'\r\nimport keywords from './keywordReducer'\r\nimport orgs from './organizationReducer'\r\nimport nav from './menuReducer'\r\nimport collaborators from './searchForUnivCollaboratorReducer'\r\n\r\n\r\nexport default combineReducers({\r\n   settings,\r\n   keywords,\r\n   orgs,\r\n   nav,\r\n   collaborators,\r\n\r\n});","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n   window.location.hostname === 'localhost' ||\n   // [::1] is the IPv6 localhost address.\n   window.location.hostname === '[::1]' ||\n   // 127.0.0.1/8 is considered localhost for IPv4.\n   window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n   )\n);\n\nexport default function register() {\n   if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n         // Our service worker won't work if PUBLIC_URL is on a different origin\n         // from what our page is served on. This might happen if a CDN is used to\n         // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n         return;\n      }\n\n      window.addEventListener('load', () => {\n         const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n         if (isLocalhost) {\n            // This is running on localhost. Lets check if a service worker still exists or not.\n            checkValidServiceWorker(swUrl);\n\n            // Add some additional logging to localhost, pointing developers to the\n            // service worker/PWA documentation.\n            navigator.serviceWorker.ready.then(() => {\n               console.log(\n                  'This web app is being served cache-first by a service ' +\n                  'worker. To learn more, visit https://goo.gl/SC7cgQ'\n               );\n            });\n         } else {\n            // Is not local host. Just register service worker\n            registerValidSW(swUrl);\n         }\n      });\n   }\n}\n\nfunction registerValidSW(swUrl) {\n   navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n         registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n               if (installingWorker.state === 'installed') {\n                  if (navigator.serviceWorker.controller) {\n                     // At this point, the old content will have been purged and\n                     // the fresh content will have been added to the cache.\n                     // It's the perfect time to display a \"New content is\n                     // available; please refresh.\" message in your web app.\n                     console.log('New content is available; please refresh.');\n                  } else {\n                     // At this point, everything has been precached.\n                     // It's the perfect time to display a\n                     // \"Content is cached for offline use.\" message.\n                     console.log('Content is cached for offline use.');\n                  }\n               }\n            };\n         };\n      })\n      .catch(error => {\n         console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n   // Check if the service worker can be found. If it can't reload the page.\n   fetch(swUrl)\n      .then(response => {\n         // Ensure service worker exists, and that we really are getting a JS file.\n         if (\n            response.status === 404 ||\n            response.headers.get('content-type').indexOf('javascript') === -1\n         ) {\n            // No service worker found. Probably a different app. Reload the page.\n            navigator.serviceWorker.ready.then(registration => {\n               registration.unregister().then(() => {\n                  window.location.reload();\n               });\n            });\n         } else {\n            // Service worker found. Proceed as normal.\n            registerValidSW(swUrl);\n         }\n      })\n      .catch(() => {\n         console.log(\n            'No internet connection found. App is running in offline mode.'\n         );\n      });\n}\n\nexport function unregister() {\n   if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n         registration.unregister();\n      });\n   }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport Footer from './Footer'\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './reducers/rootReducer'\nimport thunk from 'redux-thunk'; \nimport { Provider } from 'react-redux';\n\nimport unregisterServiceWorker from './registerServiceWorker';\n\nconst createStoreWithMiddleware = applyMiddleware(thunk)(createStore);\nconst store = createStoreWithMiddleware(rootReducer);\n\nReactDOM.render(\n   [<App store={store} key={1} />, <Provider store={store} key={2} ><Footer store={store}/></Provider>], document.getElementById('root'));\nunregisterServiceWorker();"],"sourceRoot":""}