{"version":3,"sources":["AdditionalDataModal.js","LoadingModal.js","Loading.js","Pagination.js","actions/keywordActions.js","actions/organizationActions.js","helper.js","Keywords.js","Organizations.js","User.js","searchForCollaboratorForm.js","actions/menuActions.js","actions/searchForCollaboratorActions.js","SearchForCollaborator.js","TableView.js","Navigation.js","DebugMessage.js","actions/settingsActions.js","WelcomeJumbotron.js","indexPage.js","RootContainer.js","App.js","Footer.js","reducers/settingsReducer.js","reducers/keywordReducer.js","reducers/organizationReducer.js","reducers/menuReducer.js","reducers/searchForCollaboratorReducer.js","reducers/rootReducer.js","registerServiceWorker.js","index.js"],"names":["memberSearchModal","_this$props","this","props","openStatus","toggle","size","title","body","react_default","a","createElement","Modal","isOpen","centered","ModalHeader","ModalBody","ModalFooter","Button","color","onClick","Component","Loading","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","errorModalOpenToggle","setState","errorModalOpenFlag","state","errorModalTitle","errorModalBody","friendlyName","condition","error","_this2","status","Spinner","href","key","showErrorInfo","toString","stack","_this3","Fragment","AdditionalDataModal_memberSearchModal","LoadingModal_memberSearchModal","map","loadInfo","loadingText","connect","settings","keywords","orgs","collaborators","PaginationWrapper","pager","items","length","setPage","initialPage","prevProps","prevState","page","pageSize","totalPages","getPager","pageOfItems","slice","startIndex","endIndex","onChangePage","totalItems","currentPage","startPage","endPage","Math","ceil","min","pages","toConsumableArray","Array","keys","i","Pagination","aria-label","PaginationItem","disabled","PaginationLink","first","previous","index","active","next","last","React","defaultProps","Actions","FETCH_KEYWORDS_BEGIN","FETCH_KEYWORDS_SUCCESS","FETCH_KEYWORDS_FAILURE","fetchKeywordsBegin","type","fetchKeywordsSuccess","payload","fetchKeywordsFailure","fetchKeywords","dispatch","axios","get","then","response","data","keyword","id","catch","FETCH_ORGANIZATIONS_BEGIN","FETCH_ORGANIZATIONS_SUCCESS","FETCH_ORGANIZATIONS_FAILURE","fetchOrganizationsBegin","fetchOrganizationsSuccess","organizations","fetchOrganizationsFailure","fetchOrganizations","organization","toTitleCase","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","NBSP","getKeywordType","shortKeywordType","name","getKeywordSortOrder","shortKeywordSortOrder","Keywords","buildKeywordOverviewModalBody","modalBody","keywordID","push","ListGroupItem","tag","showKeywordExtendedData","action","keywordName","ListGroup","buildDisplayText","displayText","keywordIDs","substring","displayLength","showKeywordOverviewModal","keywordOverviewModalTitle","keywordOverviewModalBody","showKeywordDetailModal","keywordDetailModalTitle","keywordDetailModalBody","keywordInfo","Badge","keywordType","sortOrder","keywordDescription","keywordsLoading","loading","keywordError","getOrgType","shortOrgType","Organizations","buildOrganizationOverviewModalBody","organizationID","showOrgExtendedData","orgNameUnique","organizationIDs","showOrganizationOverviewModal","organizationOverviewModalTitle","organizationOverviewModalBody","showOrganizationDetailModal","organizationDetailModalTitle","organizationDetailModalBody","orgID","orgInfo","orgType","website","outline","target","rel","orgsLoading","orgError","getUserTypes","shortUserType","library","add","faInfo","UserDetail","showUserDetailModal","user","firstName","lastName","userType","emailAddress","jobTitle","description","split","userDetailModalTitle","userDetailModalBody","showUserDetails","index_es","icon","getKeywords","_callee","regenerator_default","wrap","_context","prev","abrupt","sent","t0","console","stop","parseKeywordData","_callee2","keywordLow","keywordMedium","keywordHigh","keywordLowNormalized","keywordMediumNormalized","keywordHighNormalized","keywordOptionData","_context2","label","value","options","getUnivertisyTypes","newRequest","orgName","isNaN","department","handleChange","e","_e$target","checked","queryData","objectSpread","defineProperty","selectedQuery","activityKeywords","topicalKeywords","selectedUniversities","validate","emailState","selectedOption","modal","bind","assertThisInitialized","handleSubmit","syntheticEvent","preventDefault","submitHandler","Form","onSubmit","Col","FormGroup","Label","react_select_browser_esm","ref","cacheOptions","defaultOptions","loadOptions","onChange","val","isMulti","isSearchable","autoBlur","closeOnSelect","closeMenuOnSelect","FormText","TOGGLE_DEV_MODE","TOGGLE_NAV_BAR","TOGGLE_SEARCH_FOR_COLLABORATOR","toggleDevMode","toggleSearchForCollaborator","FETCH_COLLABORATORS_BEGIN","FETCH_COLLABORATORS_SUCCESS","FETCH_COLLABORATORS_FAILURE","SET_QUERY_STATEMENT","GET_URL","fetchCollaborators","url","res","err","message","queryString","require","SearchForCollaborator","item","selectedQueryStatements","history","concat","org","params","buildQueryString","buildURL","readParams","parsed","parse","location","search","log","keyA","match","Jumbotron","fluid","Container","className","searchForCollaboratorForm_memberSearchModal","mapDispatchToProps","withRouter","nav","TableView","renderDisplayUserItems","pageItems","scope","src_Organizations","src_Keywords","User","src_SearchForCollaborator","Table","hover","responsive","src_Pagination","Navigation","Navbar","light","expand","NavbarBrand","RRNavLink","exact","to","siteHeading","NavbarToggler","toggleNavBar","Collapse","navOpen","navbar","Nav","NavItem","NavLink","activeClassName","commitBranch","devModeOpen","DebugMessage","navIsOpen","Alert","commitMessage","commitHash","FETCH_SETTINGS_BEGIN","FETCH_SETTINGS_SUCCESS","FETCH_SETTINGS_FAILURE","fetchSettingsBegin","fetchSettingsSuccess","fetchSettingsFailure","WelcomeJumbotron","frontHeading","frontMessage","frontMessageSubText","additionEmailAddress","UnderConstructionCard","style","border","overflow","borderRadius","Card","CardBody","CardText","CardFooter","LookingForCollaboratorCard","FrontPageCards","src_WelcomeJumbotron","Row","class","indexPage_LookingForCollaboratorCard","indexPage_UnderConstructionCard","defaults","baseURL","RootContainer","fetchSettings","loader","every","x","loadStatus","calculateLoadingState","src_Loading","src_DebugMessage","src_Navigation","react_router","path","component","App","_ref","store","es","react_router_dom","basename","Footer","backgroundColor","initialState","searchForCollaborator","combineReducers","arguments","undefined","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","applyMiddleware","thunk","createStore","createStoreWithMiddleware","rootReducer","ReactDOM","render","src_App_0","src_Footer","document","getElementById","URL","process","origin","addEventListener","fetch","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","unregisterServiceWorker"],"mappings":"oRAMqBA,0LAQT,IAAAC,EAC4CC,KAAKC,MAA/CC,EADFH,EACEG,WAAYC,EADdJ,EACcI,OAAQC,EADtBL,EACsBK,KAAMC,EAD5BN,EAC4BM,MAAOC,EADnCP,EACmCO,KACzC,OACGC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,OAAQT,EAAYC,OAAQA,EAAQS,UAAQ,EAACR,KAAMA,GACvDG,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAaV,OAAQA,GAASE,GAC9BE,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIR,GAEJC,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACGR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAASf,GAAjC,kBAjBgCgB,cCA1BrB,mLAQT,IAAAC,EACuBC,KAAKC,MAA1BC,EADFH,EACEG,WAAYE,EADdL,EACcK,KACpB,OACGG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,OAAQT,EAAYU,UAAQ,EAACR,KAAMA,GACvCG,EAAAC,EAAAC,cAACI,EAAA,EAAD,KAAcb,KAAKC,MAAMI,OACzBE,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACId,KAAKC,MAAMK,cAdoBa,aCIzCC,cACH,SAAAA,EAAYnB,GAAO,IAAAoB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAtB,KAAAoB,IAChBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAtB,KAAAsB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAA1B,KAAMC,KA0BT0B,qBAAuB,WACpBN,EAAKO,SAAS,CAAEC,oBAAqBR,EAAKS,MAAMD,sBA1BhDR,EAAKS,MAAQ,CAEVD,oBAAoB,EACpBE,gBAAiB,GACjBC,eAAgB,IANHX,2EAUPY,EAAcC,EAAWC,GAAO,IAAAC,EAAApC,KACrCqC,EAAS9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAASrB,MAAM,UAAUb,KAAK,OAQ3C,OAPc,OAAV+B,EACDE,EAAS9B,EAAAC,EAAAC,cAAA,KAAG8B,KAAK,KAAKC,IAAI,QAAQtB,QAAS,kBAAMkB,EAAKK,cAAcN,EAAMO,WAAYnC,EAAAC,EAAAC,cAAA,YAAO0B,EAAMQ,MAAMD,eAAhG,UAEW,IAAdR,IACNG,EAAS,SAGU,IAAdH,GAAiC,OAAVC,EAAkB,KAAO5B,EAAAC,EAAAC,cAAA,OAAK+B,IAAKP,GAAV,WAAiCA,EAAjC,OAAmDI,yCAIhGhC,EAAOC,GAClBN,KAAK4B,SAAS,CAAEG,gBAAiB1B,EAAO2B,eAAgB1B,EAAMuB,oBAAqB7B,KAAK8B,MAAMD,sDAQxF,IAAAe,EAAA5C,KAAAD,EACiBC,KAAKC,MAArBK,EADDP,EACCO,KAAM+B,EADPtC,EACOsC,OACb,OACG9B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqC,SAAA,KACAtC,EAAAC,EAAAC,cAACqC,EAAD,CACG5C,WAAYF,KAAK8B,MAAMD,mBACvBxB,MAAOL,KAAK8B,MAAMC,gBAClBzB,KAAMN,KAAK8B,MAAME,eACjB7B,OAAQH,KAAK2B,qBACbvB,KAAM,OAGTG,EAAAC,EAAAC,cAACsC,EAAD,CACG7C,YAAamC,EACbhC,MAAOE,EAAAC,EAAAC,cAAA,iCACPH,KAAMA,EAAK0C,IAAI,SAAAC,GAAQ,OAAIL,EAAKM,YAAYD,EAAShB,aAAcgB,EAASf,UAAWe,EAASd,mBAhDtFhB,aA+DPgC,cAPS,SAAArB,GAAK,MAAK,CAC/BsB,SAAUtB,EAAMsB,SAChBC,SAAUvB,EAAMuB,SAChBC,KAAMxB,EAAMwB,KACZC,cAAezB,EAAMyB,gBAGTJ,CAAyB/B,gEC9BlCoC,cACH,SAAAA,EAAYvD,GAAO,IAAAoB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAtB,KAAAwD,IAChBnC,EAAAC,OAAAE,EAAA,EAAAF,CAAAtB,KAAAsB,OAAAG,EAAA,EAAAH,CAAAkC,GAAA9B,KAAA1B,KAAMC,KACD6B,MAAQ,CAAE2B,MAAO,IAFNpC,oFAOZrB,KAAKC,MAAMyD,OAAS1D,KAAKC,MAAMyD,MAAMC,QACtC3D,KAAK4D,QAAQ5D,KAAKC,MAAM4D,wDAIXC,EAAWC,GAEvB/D,KAAKC,MAAMyD,QAAUI,EAAUJ,OAChC1D,KAAK4D,QAAQ5D,KAAKC,MAAM4D,6CAItBG,GAAM,IAAAjE,EACeC,KAAKC,MAAzByD,EADK3D,EACL2D,MAAOO,EADFlE,EACEkE,SACTR,EAAQzD,KAAK8B,MAAM2B,MAEvB,KAAIO,EAAO,GAAKA,EAAOP,EAAMS,YAA7B,CAKAT,EAAQzD,KAAKmE,SAAST,EAAMC,OAAQK,EAAMC,GAG1C,IAAIG,EAAcV,EAAMW,MAAMZ,EAAMa,WAAYb,EAAMc,SAAW,GAGjEvE,KAAK4B,SAAS,CAAE6B,MAAOA,IAGvBzD,KAAKC,MAAMuE,aAAaJ,qCAGlBK,EAAYC,EAAaT,GAE/BS,EAAcA,GAAe,EAG7BT,EAAWA,GAAY,GAGvB,IAEIU,EAAWC,EAFXV,EAAaW,KAAKC,KAAKL,EAAaR,GAGpCC,GAAc,IAEfS,EAAY,EACZC,EAAUV,GAGNQ,GAAe,GAChBC,EAAY,EACZC,EAAU,IACFF,EAAc,GAAKR,GAC3BS,EAAYT,EAAa,EACzBU,EAAUV,IAEVS,EAAYD,EAAc,EAC1BE,EAAUF,EAAc,GAK9B,IAAIJ,GAAcI,EAAc,GAAKT,EACjCM,EAAWM,KAAKE,IAAIT,EAAaL,EAAW,EAAGQ,EAAa,GAG5DO,EAAQ1D,OAAA2D,EAAA,EAAA3D,CAAI4D,MAAON,EAAU,EAAKD,GAAWQ,QAAQnC,IAAI,SAAAoC,GAAC,OAAIT,EAAYS,IAG9E,MAAO,CACJX,WAAYA,EACZC,YAAaA,EACbT,SAAUA,EACVC,WAAYA,EACZS,UAAWA,EACXC,QAASA,EACTN,WAAYA,EACZC,SAAUA,EACVS,MAAOA,oCAIJ,IAAA5C,EAAApC,KACFyD,EAAQzD,KAAK8B,MAAM2B,MAEvB,OAAKA,EAAMuB,OAASvB,EAAMuB,MAAMrB,QAAU,EAEhC,KAIPpD,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAYC,aAAW,cAEpB/E,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAgBC,SAAgC,IAAtB/B,EAAMiB,aAC7BnE,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAgBC,OAAK,EAACnD,KAAK,KAAKrB,QAAS,kBAAMkB,EAAKwB,QAAQ,OAG/DrD,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAgBC,SAAgC,IAAtB/B,EAAMiB,aAC7BnE,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAgBE,UAAQ,EAACpD,KAAK,KAAKrB,QAAS,kBAAMkB,EAAKwB,QAAQH,EAAMiB,YAAc,OAGrFjB,EAAMuB,MAAMhC,IAAI,SAACgB,EAAM4B,GAAP,OACdrF,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAgB/C,IAAKoD,EAAOC,OAAQpC,EAAMiB,cAAgBV,GACvDzD,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAgBlD,KAAK,KAAKrB,QAAS,kBAAMkB,EAAKwB,QAAQI,KAAQA,MAIpEzD,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAgBC,SAAU/B,EAAMiB,cAAgBjB,EAAMS,YACnD3D,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAgBK,MAAI,EAACvD,KAAK,KAAKrB,QAAS,kBAAMkB,EAAKwB,QAAQH,EAAMiB,YAAc,OAGlFnE,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAgBC,SAAU/B,EAAMiB,cAAgBjB,EAAMS,YACnD3D,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAgBM,MAAI,EAACxD,KAAK,KAAKrB,QAAS,kBAAMkB,EAAKwB,QAAQH,EAAMS,wBAzHhD8B,IAAM7E,WAmItCqC,EAAkByC,aAxIG,CAClBpC,YAAa,EACbI,SAAU,IAuIET,yBC5KF0C,EAAU,CACpBC,qBAAsB,uBACtBC,uBAAwB,yBACxBC,uBAAwB,0BAGdC,EAAqB,iBAAO,CACtCC,KAAML,EAAQC,uBAGJK,EAAuB,SAACnD,GAAD,MAAe,CAChDkD,KAAML,EAAQE,uBACdK,QAAS,CAAEpD,cAGDqD,EAAuB,SAACvE,GAAD,MAAY,CAC7CoE,KAAML,EAAQG,uBACdI,QAAS,CAAEtE,WAGP,SAASwE,IACb,IAAItD,EAAW,GACf,OAAO,SAAAuD,GAEJ,OADAA,EAASN,KACFO,IAAMC,IAAI,gCACbC,KAAK,SAAAC,GACHA,EAASC,KAAKjE,IAAI,SAAAkE,GAEf,OADA7D,EAAS6D,EAAQC,IAAMD,EAChBA,IAEVN,EAASJ,EAAqBnD,MAEhC+D,MAAM,SAAAjF,GAAK,OAAIyE,EAASF,EAAqBvE,OChChD,IAAM+D,EAAU,CACpBmB,0BAA2B,4BAC3BC,4BAA6B,8BAC7BC,4BAA6B,+BAGnBC,EAA0B,iBAAO,CAC3CjB,KAAML,EAAQmB,4BAGJI,EAA4B,SAACC,GAAD,MAAoB,CAC1DnB,KAAML,EAAQoB,4BACdb,QAAS,CAAEiB,mBAGDC,EAA4B,SAACxF,GAAD,MAAY,CAClDoE,KAAML,EAAQqB,4BACdd,QAAS,CAAEtE,WAGP,SAASyF,IACb,IAAIF,EAAgB,GACpB,OAAO,SAAAd,GAEJ,OADAA,EAASY,KACFX,IAAMC,IAAI,4BACbC,KAAK,SAAAC,GACHA,EAASC,KAAKjE,IAAI,SAAA6E,GAEf,OADAH,EAAcG,EAAaV,IAAMU,EAC1BA,IAEVjB,EAASa,EAA0BC,MAErCN,MAAM,SAAAjF,GAAK,OAAIyE,EAASe,EAA0BxF,sCCnCrD,SAAS2F,EAAYC,GACzB,OAAOA,EAAIC,QACR,SACA,SAAUC,GACP,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,OAAO,GAAGC,gBAKrD,IAAMC,EAAO,OCIpB,SAASC,EAAeC,GACrB,MAAyB,OAArBA,EACM,CAAEC,KAAM,UAAWxH,MAAO,WAEX,OAArBuH,EACM,CAAEC,KAAM,WAAYxH,MAAO,kBADrC,EAKH,SAASyH,EAAoBC,GAC1B,MAA8B,OAA1BA,EACM,CAAEF,KAAM,aAAcxH,MAAO,WAET,OAA1B0H,EACM,CAAEF,KAAM,eAAgBxH,MAAO,WAEX,OAA1B0H,EACM,CAAEF,KAAM,YAAaxH,MAAO,eADtC,MAKG2H,cACH,SAAAA,EAAY3I,GAAO,IAAAoB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAtB,KAAA4I,IAChBvH,EAAAC,OAAAE,EAAA,EAAAF,CAAAtB,KAAAsB,OAAAG,EAAA,EAAAH,CAAAsH,GAAAlH,KAAA1B,KAAMC,KAiBT4I,8BAAgC,WAC7B,IAAIC,EAAY,GAehB,OAdmBzH,EAAKpB,MAAMyD,MACnBV,IACR,SAAA+F,GAAS,OACND,EAAUE,KACVzI,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CACGzG,IAAKuG,EACLG,IAAI,IACJhI,QAAS,kBAAMG,EAAK8H,wBAAwBJ,IAC5CxG,KAAK,KACL6G,QAAM,GAELtB,EAAYzG,EAAKpB,MAAMoD,SAAS0F,GAAWM,iBAErDP,EAAYvI,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,KAAYR,IAjCRzH,EAqCnBkI,iBAAmB,WAChB,IAAIC,EAAc,GACZC,EAAapI,EAAKpB,MAAMyD,MAwB9B,OAtBA+F,EAAWzG,IAAI,SAAA+F,GAAS,OACrBS,GAAe1B,EACZzG,EAAKpB,MAAMoD,SAAS0F,GAAWM,aAAe,QACpDG,EAAcA,EAAYE,UAAU,EAAGF,EAAY7F,OAAS,IAC5CA,OAAStC,EAAKpB,MAAM0J,gBACjCH,EAAcA,EAAYE,UAAU,EAAGrI,EAAKpB,MAAM0J,eAAiB,OAEnEH,EADCA,EAAY7F,OAAS,EAEtBpD,EAAAC,EAAAC,cAAA,KACG8B,KAAK,KACLC,IAAKiH,EACLvI,QACG,kBAAMG,EAAKO,SACR,CACGgI,0BAA2BvI,EAAKS,MAAM8H,6BAI9CJ,GAGU,eA5DjBnI,EAAKS,MAAQ,CACV8H,0BAA0B,EAC1BC,0BAA2B,gBAC3BC,yBAA0B,GAE1BC,wBAAwB,EACxBC,wBAAyB,gBACzBC,uBAAwB,IATX5I,mFAchBrB,KAAK4B,SAAS,CAAEkI,yBAA0B9J,KAAK6I,kCAC/C7I,KAAKuJ,mEAmDgBpC,GACrB,IAAI+C,EAAclK,KAAKC,MAAMoD,SAAS8D,GAElC9G,EACDE,EAAAC,EAAAC,cAAA,kCACuBF,EAAAC,EAAAC,cAAA,SAAIyJ,EAAYb,YAAYhB,eADnD,YAGC/H,EACDC,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CACGlJ,MAAOsH,EAAe2B,EAAYE,aAAanJ,OAC9CsH,EAAe2B,EAAYE,aAAa3B,MAE3CH,EACD/H,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CACGlJ,MAAOyH,EAAoBwB,EAAYG,WAAWpJ,OACjDyH,EAAoBwB,EAAYG,WAAW5B,MAE/ClI,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAA,YAA0C,OAAnCyJ,EAAYI,mBAA8BJ,EAAYI,mBAAqB,6BAErFtK,KAAK4B,SAAS,CAAEoI,wBAAyB3J,EAAO4J,uBAAwB3J,EAAMyJ,wBAAyB/J,KAAK8B,MAAMiI,0DAI5G,IAAA3H,EAAApC,KACN,OACGO,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqC,SAAA,KACC7C,KAAKuJ,mBACNhJ,EAAAC,EAAAC,cAACqC,EAAD,CACG5C,WAAYF,KAAK8B,MAAM8H,yBACvBvJ,MAAOL,KAAK8B,MAAM+H,0BAClBvJ,KAAMN,KAAK8B,MAAMgI,yBACjB3J,OAAQ,kBAAMiC,EAAKR,SAChB,CACGgI,0BAA2BxH,EAAKN,MAAM8H,4BAE5CxJ,KAAK,OAERG,EAAAC,EAAAC,cAACqC,EAAD,CACG5C,WAAYF,KAAK8B,MAAMiI,uBACvB1J,MAAOL,KAAK8B,MAAMkI,wBAClB1J,KAAMN,KAAK8B,MAAMmI,uBACjB9J,OAAQ,kBAAMiC,EAAKR,SAChB,CACGmI,wBAAyB3H,EAAKN,MAAMiI,0BAE1C3J,KAAK,eAlHMe,aA+HRgC,cANS,SAAArB,GAAK,MAAK,CAC/BuB,SAAUvB,EAAMuB,SAASK,MACzB6G,gBAAiBzI,EAAMuB,SAASmH,QAChCC,aAAc3I,EAAMuB,SAASlB,QAGjBgB,CAAyByF,GCnJxC,SAAS8B,EAAWC,GACjB,MAAqB,OAAjBA,EACM,CAAElC,KAAM,cAAexH,MAAO,WAEnB,OAAjB0J,EACM,CAAElC,KAAM,OAAQxH,MAAO,aAEZ,OAAjB0J,EACM,CAAElC,KAAM,SAAUxH,MAAO,WAEd,OAAjB0J,EACM,CAAElC,KAAM,MAAOxH,MAAO,WAEX,OAAjB0J,EACM,CAAElC,KAAM,kBAAmBxH,MAAO,aAD5C,MAKG2J,eACH,SAAAA,EAAY3K,GAAO,IAAAoB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAtB,KAAA4K,IAChBvJ,EAAAC,OAAAE,EAAA,EAAAF,CAAAtB,KAAAsB,OAAAG,EAAA,EAAAH,CAAAsJ,GAAAlJ,KAAA1B,KAAMC,KAiBT4K,mCAAqC,WAClC,IAAI/B,EAAY,GAehB,OAdwBzH,EAAKpB,MAAMyD,MACnBV,IACb,SAAA8H,GAAc,OACXhC,EAAUE,KACPzI,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CACGzG,IAAKsI,EACL5B,IAAI,IACJhI,QAAS,kBAAMG,EAAK0J,oBAAoBD,IACxCvI,KAAK,KACL6G,QAAM,GAEL/H,EAAKpB,MAAMqD,KAAKwH,GAAgBE,kBAE7ClC,EAAYvI,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,KAAYR,IAjCRzH,EAqCnBkI,iBAAmB,WAChB,IAAIC,EAAc,GACZyB,EAAkB5J,EAAKpB,MAAMyD,MAwBnC,OArBAuH,EAAgBjI,IAAI,SAAA8H,GAAc,OAC/BtB,GAAenI,EAAKpB,MAAMqD,KAAKwH,GAAgBE,cAAgB,QAClExB,EAAcA,EAAYE,UAAU,EAAGF,EAAY7F,OAAS,IAC5CA,OAAStC,EAAKpB,MAAM0J,gBACjCH,EAAcA,EAAYE,UAAU,EAAGrI,EAAKpB,MAAM0J,eAAiB,OAEnEH,EADCA,EAAY7F,OAAS,EAEnBpD,EAAAC,EAAAC,cAAA,KACG8B,KAAK,KACLC,IAAKyI,EACL/J,QACG,kBAAMG,EAAKO,SACR,CACGsJ,+BAAgC7J,EAAKS,MAAMoJ,kCAInD1B,GAGO,oBA5DjBnI,EAAKS,MAAQ,CACVoJ,+BAA+B,EAC/BC,+BAAgC,qBAChCC,8BAA+B,GAE/BC,6BAA6B,EAC7BC,6BAA8B,qBAC9BC,4BAA6B,IAThBlK,mFAchBrB,KAAK4B,SAAS,CAAEwJ,8BAA+BpL,KAAK6K,mFAoDnCW,GACjB,IAAIC,EAAUzL,KAAKC,MAAMqD,KAAKkI,GAC1BnL,EACDE,EAAAC,EAAAC,cAAA,WACIT,KAAKC,MAAMqD,KAAKkI,GAAOR,cACvB1C,EACD/H,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAOlJ,MAAOyJ,EAAWe,EAAQC,SAASzK,OACzCyJ,EAAWe,EAAQC,SAASjD,OAI/BnI,EAA2B,OAApBmL,EAAQE,QAChBpL,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQ4K,SAAO,EAAC3K,MAAM,UAAUb,KAAK,KAAKmC,KAAMkJ,EAAQE,QAASE,OAAO,SAASC,IAAI,uBAArF,iBACC,sBACJ9L,KAAK4B,SAAS,CAAE0J,6BAA8BjL,EAAOkL,4BAA6BjL,EAAM+K,6BAA8BrL,KAAK8B,MAAMuJ,+DAG3H,IAAAjJ,EAAApC,KACN,OACGO,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqC,SAAA,KACI7C,KAAKuJ,mBACNhJ,EAAAC,EAAAC,cAACqC,EAAD,CACG5C,WAAYF,KAAK8B,MAAMoJ,8BACvB7K,MAAOL,KAAK8B,MAAMqJ,+BAClB7K,KAAMN,KAAK8B,MAAMsJ,8BACjBjL,OAAQ,kBAAMiC,EAAKR,SAChB,CACGsJ,+BAAgC9I,EAAKN,MAAMoJ,iCAEjD9K,KAAK,OAERG,EAAAC,EAAAC,cAACqC,EAAD,CACG5C,WAAYF,KAAK8B,MAAMuJ,4BACvBhL,MAAOL,KAAK8B,MAAMwJ,6BAClBhL,KAAMN,KAAK8B,MAAMyJ,4BACjBpL,OAAQ,kBAAMiC,EAAKR,SAChB,CACGyJ,6BAA8BjJ,EAAKN,MAAMuJ,+BAE/CjL,KAAK,eA1GQe,aAuHbgC,eANS,SAAArB,GAAK,MAAK,CAC/BwB,KAAMxB,EAAMwB,KAAKI,MACjBqI,YAAajK,EAAMwB,KAAKkH,QACxBwB,SAAUlK,EAAMwB,KAAKnB,QAGTgB,CAAyByH,+BCtIxC,SAASqB,GAAaC,GACnB,OAAQA,GACL,IAAK,KACF,MAAO,CAAEzD,KAAM,2BAA4BxH,MAAO,WACrD,IAAK,KACF,MAAO,CAAEwH,KAAM,aAAcxH,MAAO,aACvC,IAAK,KACF,MAAO,CAAEwH,KAAM,eAAgBxH,MAAO,WACzC,IAAK,KACF,MAAO,CAAEwH,KAAM,YAAaxH,MAAO,UACtC,IAAK,KACF,MAAO,CAAEwH,KAAM,iBAAkBxH,MAAO,WAC3C,QACG,MAAO,CAAEwH,KAAM,QAASxH,MAAO,SAhBxCkL,KAAQC,IAAIC,UA6DGC,eAxCZ,SAAAA,EAAYrM,GAAO,IAAAoB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAtB,KAAAsM,IAChBjL,EAAAC,OAAAE,EAAA,EAAAF,CAAAtB,KAAAsB,OAAAG,EAAA,EAAAH,CAAAgL,GAAA5K,KAAA1B,KAAMC,KAQTsM,oBAAsB,WACnB,IAAIC,EAAOnL,EAAKpB,MAAMuM,KAClBnM,EAAQE,EAAAC,EAAAC,cAAA,oBAAWF,EAAAC,EAAAC,cAAA,SAAI+L,EAAKC,UAAT,IAAqBD,EAAKE,WAC7CpM,EAAOC,EAAAC,EAAAC,cAAA,WACRF,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAOlJ,MAAOgL,GAAaO,EAAKG,UAAU1L,OAAQgL,GAAaO,EAAKG,UAAUlE,MAAalI,EAAAC,EAAAC,cAAA,WAC3FF,EAAAC,EAAAC,cAAA,oBAAcF,EAAAC,EAAAC,cAAA,KAAG8B,KAAM,UAAUiK,EAAKI,cAAeJ,EAAKI,cAAiBrM,EAAAC,EAAAC,cAAA,WAC1E+L,EAAKb,QAAUpL,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,sBAAiB6H,EAAK/H,EAAAC,EAAAC,cAAA,KAAG8B,KAAMiK,EAAKb,QAASE,OAAO,SAASC,IAAI,uBAAuBU,EAAKb,UAAqB,GACtIa,EAAKK,SAAWtM,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,wBAAmB6H,EAAMkE,EAAKK,UAAkB,GACrEL,EAAKM,YAAcvM,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,oBAAe6H,EAAMkE,EAAKM,YAAYC,MAAM,MAAM/J,IAAI,SAACoC,EAAG5C,GAChF,OAAOjC,EAAAC,EAAAC,cAAA,OAAK+B,IAAKA,GAAM4C,EAAE7E,EAAAC,EAAAC,cAAA,eAChB,IAEfY,EAAKO,SAAS,CAACoL,qBAAsB3M,EAAO4M,oBAAqB3M,EAAM4M,iBAAiB,KAnBxF7L,EAAKS,MAAQ,CACVoL,iBAAiB,EACjBF,qBAAsB,GACtBC,oBAAqB,IALR5L,wEAwBV,IAAAe,EAAApC,KACN,OACGO,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqC,SAAA,KACGtC,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQE,QAAS,kBAAMkB,EAAKmK,wBAAuBhM,EAAAC,EAAAC,cAAC0M,GAAA,EAAD,CAAiBC,KAAK,SAAU9E,EAAnF,oBACA/H,EAAAC,EAAAC,cAACqC,EAAD,CACG5C,WAAYF,KAAK8B,MAAMoL,gBACvB7M,MAAOL,KAAK8B,MAAMkL,qBAClB1M,KAAMN,KAAK8B,MAAMmL,oBACjB9M,OAAQ,kBAAMiC,EAAKR,SAAS,CAAEsL,iBAAkB9K,EAAKN,MAAMoL,mBAC3D9M,KAAM,eAlCIe,0ICvBVkM,uFAAf,SAAAC,EAA2B/G,EAAM8D,GAAjC,OAAAkD,GAAA/M,EAAAgN,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA3H,MAAA,cAAA2H,EAAAC,KAAA,EAAAD,EAAA3H,KAAA,EAEmBe,IAAMC,IAAI,4CAA8CP,EAAO,cAAgB8D,GAFlG,cAAAoD,EAAAE,OAAA,SAAAF,EAAAG,MAAA,OAAAH,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAIMK,QAAQ3L,MAARsL,EAAAI,IAJN,wBAAAJ,EAAAM,SAAAT,EAAA,iDAQeU,qFAAf,SAAAC,EAAgC7D,GAAhC,IAAA8D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAjB,GAAA/M,EAAAgN,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAA3I,MAAA,cAAA2I,EAAA3I,KAAA,EAC4BuH,GAAYjD,EAAa,MADrD,cACS8D,EADTO,EAAAb,KAAAa,EAAA3I,KAAA,EAE+BuH,GAAYjD,EAAa,MAFxD,cAES+D,EAFTM,EAAAb,KAAAa,EAAA3I,KAAA,EAG6BuH,GAAYjD,EAAa,MAHtD,UAGSgE,EAHTK,EAAAb,OAKOM,EAAWjH,MAAQkH,EAAclH,MAAQmH,EAAYnH,MAL5D,CAAAwH,EAAA3I,KAAA,gBAMUuI,EAAuBH,EAAWjH,KAAKjE,IAAI,SAAAkE,GAAO,MAAK,CACxDwH,MAAOxH,EAAQmC,YACfsF,MAAOzH,EAAQC,MAEdmH,EAA0BH,EAAclH,KAAKjE,IAAI,SAAAkE,GAAO,MAAK,CAC9DwH,MAAOxH,EAAQmC,YACfsF,MAAOzH,EAAQC,MAEdoH,EAAwBH,EAAYnH,KAAKjE,IAAI,SAAAkE,GAAO,MAAK,CAC1DwH,MAAOxH,EAAQmC,YACfsF,MAAOzH,EAAQC,MAEdqH,EACD,CACG,CACGE,MAAO,sBACPE,QAASL,GAEZ,CACGG,MAAO,wBACPE,QAASN,GAEZ,CACGI,MAAO,qBACPE,QAASP,IA9BxBI,EAAAd,OAAA,SAiCaa,GAjCb,yBAAAC,EAAAV,SAAAE,iCAsCqBnO,eAClB,SAAAA,EAAYG,GAAO,IAAAoB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAtB,KAAAF,IAChBuB,EAAAC,OAAAE,EAAA,EAAAF,CAAAtB,KAAAsB,OAAAG,EAAA,EAAAH,CAAAxB,GAAA4B,KAAA1B,KAAMC,KAkBT4O,mBAAqB,WAClB,IAAMC,EAAajI,IAAMC,IAAI,wCAE7B,GAAIgI,EACD,OAAOA,EAAW/H,KAAK,SAAAC,GACpB,OAAOA,EAASC,KAAKjE,IAAI,SAAAkE,GAAO,MAAK,CAClCwH,MAAOxH,EAAQ6H,SAAWC,MAAM9H,EAAQ+H,YAAc,IAAM/H,EAAQ+H,WAAa,IACjFN,MAAOzH,EAAQC,SA1BR9F,EAgCnB6N,aAAe,SAACC,GAAM,IAAAC,EACGD,EAAEtD,OAAlBpD,EADa2G,EACb3G,KAAMkG,EADOS,EACPT,MACU,aAAlBQ,EAAEtD,OAAOtF,OACVoI,EAAQQ,EAAEtD,OAAOwD,SAEpB,IAAMC,EAAShO,OAAAiO,GAAA,EAAAjO,CAAA,GAAQD,EAAKS,MAAMwN,UAAnBhO,OAAAkO,GAAA,EAAAlO,CAAA,GAA+BmH,EAAOkG,IACrDtN,EAAKO,SAAS,CAAE0N,eApChBjO,EAAKS,MAAQ,CACVwN,UAAWjO,EAAKpB,MAAMwP,cACtBC,iBAAkB,GAElBC,gBAAiB,GAEjBC,qBAAsB,GACtBC,SAAU,CACPC,WAAY,IAEfC,eAAgB,KAChBC,OAAO,GAEV3O,EAAK6N,aAAe7N,EAAK6N,aAAae,KAAlB3O,OAAA4O,EAAA,EAAA5O,CAAAD,IACpBA,EAAK8O,aAAe9O,EAAK8O,aAAaF,KAAlB3O,OAAA4O,EAAA,EAAA5O,CAAAD,IAhBJA,4EAyCN+O,GACVA,EAAeC,iBACfrQ,KAAKC,MAAMqQ,cAActQ,KAAK8B,MAAMwN,4CAI9B,IAAAlN,EAAApC,KACoBA,KAAKC,MAAvBqQ,cAER,OACG/P,EAAAC,EAAAC,cAAC8P,GAAA,EAAD,CAAMC,SAAUxQ,KAAKmQ,cAClB5P,EAAAC,EAAAC,cAACgQ,GAAA,EAAD,KACGlQ,EAAAC,EAAAC,cAACiQ,GAAA,EAAD,KACGnQ,EAAAC,EAAAC,cAACkQ,GAAA,EAAD,6BACApQ,EAAAC,EAAAC,cAACmQ,GAAA,EAAD,CACGC,IAAI,sBACJpI,KAAK,sBACLqI,cAAY,EACZC,gBAAc,EACdpC,MAAO3O,KAAK8B,MAAMwN,UAAUM,qBAC5BoB,YAAahR,KAAK6O,mBAClBoC,SAAU,SAACC,GAAD,OAAS9O,EAAK8M,aAAa,CAAErD,OAAQ,CAAEpD,KAAM,uBAAwBkG,MAAOuC,MACtFC,SAAS,EACTC,cAAc,EACdC,UAAU,EACVC,eAAe,EACfC,mBAAmB,KAIzBhR,EAAAC,EAAAC,cAACiQ,GAAA,EAAD,KACGnQ,EAAAC,EAAAC,cAACkQ,GAAA,EAAD,oCACApQ,EAAAC,EAAAC,cAACmQ,GAAA,EAAD,CACGC,IAAI,mBACJC,cAAY,EACZC,gBAAc,EACdpC,MAAO3O,KAAK8B,MAAMwN,UAAUI,iBAC5BsB,YAAa,kBAAMhD,GAAiB,OACpCiD,SAAU,SAACC,GAAD,OAAS9O,EAAK8M,aAAa,CAAErD,OAAQ,CAAEpD,KAAM,mBAAoBkG,MAAOuC,MAClFC,SAAS,EACTC,cAAc,EACdC,UAAU,EACVC,eAAe,EACfC,mBAAmB,IAEtBhR,EAAAC,EAAAC,cAAC+Q,GAAA,EAAD,mEAGHjR,EAAAC,EAAAC,cAACiQ,GAAA,EAAD,KACGnQ,EAAAC,EAAAC,cAACkQ,GAAA,EAAD,mCACApQ,EAAAC,EAAAC,cAACmQ,GAAA,EAAD,CACGC,IAAI,0BACJC,cAAY,EACZC,gBAAc,EACdpC,MAAO3O,KAAK8B,MAAMwN,UAAUK,gBAC5BqB,YAAa,kBAAMhD,GAAiB,OACpCiD,SAAU,SAACC,GAAD,OAAS9O,EAAK8M,aAAa,CAAErD,OAAQ,CAAEpD,KAAM,kBAAmBkG,MAAOuC,MACjFC,SAAS,EACTC,cAAc,EACdC,UAAU,EACVC,eAAe,EACfC,mBAAmB,IAEtBhR,EAAAC,EAAAC,cAAC+Q,GAAA,EAAD,kEAEHjR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQC,MAAM,WAAd,sBA3GgCE,aCzDlC+E,GAAU,CACpBuL,gBAAiB,kBACjBC,eAAgB,iBAEhBC,+BAAgC,kCAGtBC,GAAgB,iBAAO,CACjCrL,KAAML,GAAQuL,kBAOJI,GAA8B,iBAAO,CAC/CtL,KAAML,GAAQyL,iCCbJzL,GAAU,CACpB4L,0BAA2B,4BAC3BC,4BAA6B,8BAC7BC,4BAA6B,8BAC7BC,oBAAqB,sBACrBC,QAAS,WA+BCC,GAAqB,SAACC,GAChC,OAAO,SAAAxL,GACJA,EA9BwC,CAC3CL,KAAML,GAAQ4L,4BA+BXjL,IAAMC,IAAIsL,GACTrL,KAAM,SAAAsL,GA7B4B,IAAC9O,EA6BrBqD,GA7BqBrD,EA6Bc8O,EAAIpL,KA7BC,CAC1DV,KAAML,GAAQ6L,4BACdtL,QAAS,CAAElD,sBA4BP6D,MAAM,SAAAkL,GAzB4B,IAACnQ,EAyBrByE,GAzBqBzE,EAyBcmQ,EAAIC,QAzBP,CAClDhM,KAAML,GAAQ8L,4BACdvL,QAAS,CAAEtE,yBCRRqQ,GAAcC,EAAQ,SAmDtBC,eACH,SAAAA,EAAYzS,GAAO,IAAAoB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAtB,KAAA0S,IAChBrR,EAAAC,OAAAE,EAAA,EAAAF,CAAAtB,KAAAsB,OAAAG,EAAA,EAAAH,CAAAoR,GAAAhR,KAAA1B,KAAMC,KAyCTkQ,aAAe,SAACwC,GAIbtR,EAAKO,SAAS,CAAEgR,wBAAyBD,IAEzCtR,EAAKpB,MAAM4S,QAAQ7J,KAAnB,IAAA8J,OAzEN,SAA0BH,GACvB,IAAII,EAAMJ,EAAK/C,qBACXF,EAAmBiD,EAAKjD,iBACxBC,EAAkBgD,EAAKhD,gBACvBqD,EAAS,GACb,GAAID,EACD,IAAK,IAAI3N,EAAI,EAAGA,EAAI2N,EAAIpP,OAAQyB,IAC7B4N,GAAU,OAASD,EAAI3N,GAAGuJ,MAAQ,IAGxC,GAAIe,EACD,IAAK,IAAItK,EAAI,EAAGA,EAAIsK,EAAiB/L,OAAQyB,IAC1C4N,GAAU,QAAUtD,EAAiBtK,GAAGuJ,MAAQ,IAGtD,GAAIgB,EACD,IAAK,IAAIvK,EAAI,EAAGA,EAAIuK,EAAgBhM,OAAQyB,IACzC4N,GAAU,QAAUrD,EAAgBvK,GAAGuJ,MAAQ,IAIrD,OADAqE,EAASA,EAAOtJ,UAAU,EAAGsJ,EAAOrP,OAAS,GAqDdsP,CAAiBN,KAE7CtR,EAAKpB,MAAMkS,mBAnGjB,SAAkBQ,GACf,IAAII,EAAMJ,EAAK/C,qBACXF,EAAmBiD,EAAKjD,iBACxBC,EAAkBgD,EAAKhD,gBACvByC,EAAM,6BACV,GAAIW,EACD,IAAK,IAAI3N,EAAI,EAAGA,EAAI2N,EAAIpP,OAAQyB,IAC7BgN,GAAO,iBAAmBW,EAAI3N,GAAGuJ,MAGvC,GAAIe,EACD,IAAK,IAAItK,EAAI,EAAGA,EAAIsK,EAAiB/L,OAAQyB,IAC1CgN,GAAO,aAAe1C,EAAiBtK,GAAGuJ,MAGhD,GAAIgB,EACD,IAAK,IAAIvK,EAAI,EAAGA,EAAIuK,EAAgBhM,OAAQyB,IACzCgN,GAAO,aAAezC,EAAgBvK,GAAGuJ,MAG/C,OAAOyD,EA+E0Bc,CAASP,KAhDvCtR,EAAKS,MAAQ,CACV8Q,wBAA2B,CACxBlD,iBAAkB,GAElBC,gBAAiB,GAEjBC,qBAAsB,KAG5BvO,EAAK8O,aAAe9O,EAAK8O,aAAaF,KAAlB3O,OAAA4O,EAAA,EAAA5O,CAAAD,IACpBA,EAAK8R,WAAa9R,EAAK8R,WAAWlD,KAAhB3O,OAAA4O,EAAA,EAAA5O,CAAAD,IAZFA,mFAkBhBrB,KAAKmT,kDAIL,IAGMC,EAASZ,GAAYa,MAAMrT,KAAKC,MAAMqT,SAASC,QACrDzF,QAAQ0F,IAAIJ,EAAOK,MAIfL,EAAOK,MACRL,EAAOK,KAAKzQ,IAAI,SAAAkE,GAAO,OAAI4G,QAAQ0F,IAAItM,sCAuBpC,IAAAnH,EAC+BC,KAAKC,MADpCF,EACE2T,MADF3T,EACSuT,SADTvT,EACmB8S,QACzB,OACGtS,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqC,SAAA,KACGtC,EAAAC,EAAAC,cAACkT,GAAA,EAAD,CAAWC,OAAK,GACbrT,EAAAC,EAAAC,cAACoT,EAAA,EAAD,CAAWD,OAAK,GACbrT,EAAAC,EAAAC,cAAA,MAAIqT,UAAU,aAAd,+BACAvT,EAAAC,EAAAC,cAAA,KAAGqT,UAAU,QAAb,wDACAvT,EAAAC,EAAAC,cAAA,MAAIqT,UAAU,SACdvT,EAAAC,EAAAC,cAACsT,GAAD,CACGtE,cAAezP,KAAK8B,MAAM8Q,wBAC1BtC,cAAetQ,KAAKmQ,yBAlELhP,aA+E9B6S,GAAqB,CACxBnC,+BACAM,uBAOHO,GAAwBuB,aAAWvB,IAEpBvP,mBAhBS,SAAArB,GAAK,MAAK,CAC/BoS,IAAKpS,EAAMoS,IACX5Q,KAAMxB,EAAMwB,KAAKI,QAcoBsQ,GAAzB7Q,CAA6CuP,IC3ItDyB,eACH,SAAAA,EAAYlU,GAAO,IAAAoB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAtB,KAAAmU,IAChB9S,EAAAC,OAAAE,EAAA,EAAAF,CAAAtB,KAAAsB,OAAAG,EAAA,EAAAH,CAAA6S,GAAAzS,KAAA1B,KAAMC,KAaTmU,uBAAyB,WAYtB,OAXc/S,EAAKS,MAAMuS,UAELrR,IAAI,SAAA2P,GAAI,OACzBpS,EAAAC,EAAAC,cAAA,MAAI+B,IAAKmQ,EAAKxL,IACX5G,EAAAC,EAAAC,cAAA,MAAI6T,MAAM,OAAO3B,EAAKlG,UAAtB,IAAkCkG,EAAKjG,UACvCnM,EAAAC,EAAAC,cAAA,UAAMY,EAAKpB,MAAM8L,aAAe1K,EAAKpB,MAAMqD,OAAS,GAAsE/C,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAASrB,MAAM,YAAhFV,EAAAC,EAAAC,cAAC8T,GAAD,CAAe7Q,MAAOiP,EAAK9K,aAAc8B,cAAe,MACjHpJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAG8B,KAAM,UAAYoQ,EAAK/F,cAAe+F,EAAK/F,eAClDrM,EAAAC,EAAAC,cAAA,UAAMY,EAAKpB,MAAMsK,iBAAmBlJ,EAAKpB,MAAMoD,WAAa,GAA2D9C,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAASrB,MAAM,YAArEV,EAAAC,EAAAC,cAAC+T,EAAD,CAAS9Q,MAAOiP,EAAKtP,SAAUsG,cAAe,MAC/GpJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACgU,GAAD,CAAYjI,KAAMmG,SArB5BtR,EAAKS,MAAQ,CACVuS,UAAW,GACXpQ,SAAU,IAEb5C,EAAKmD,aAAenD,EAAKmD,aAAayL,KAAlB3O,OAAA4O,EAAA,EAAA5O,CAAAD,IANJA,4EAUN+C,GACVpE,KAAK4B,SAAS,CAAEyS,UAAWjQ,qCAmB3B,OACG7D,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqC,SAAA,KACAtC,EAAAC,EAAAC,cAACiU,GAAD,MACAnU,EAAAC,EAAAC,cAACoT,EAAA,EAAD,CAAWD,OAAK,GACbrT,EAAAC,EAAAC,cAACkU,EAAA,EAAD,CAAOC,OAAK,EAACC,YAAU,GACpBtU,EAAAC,EAAAC,cAAA,aACGF,EAAAC,EAAAC,cAAA,UACGF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,gCAGNF,EAAAC,EAAAC,cAAA,aACIT,KAAKoU,2BAGZ7T,EAAAC,EAAAC,cAACqU,EAAD,CAAmB7Q,SAAUjE,KAAK8B,MAAMmC,SAAUP,MAAO1D,KAAKC,MAAMsD,cAAeiB,aAAcxE,KAAKwE,wBAjD1FrD,aAoElB6S,GAAqB,CACxBrN,gBACAiB,sBAGYzE,eAjBS,SAAArB,GAAK,MAAK,CAC/BuB,SAAUvB,EAAMuB,SAASK,MACzB6G,gBAAiBzI,EAAMuB,SAASmH,QAChCC,aAAc3I,EAAMuB,SAASlB,MAE7BmB,KAAMxB,EAAMwB,KAAKI,MACjBqI,YAAajK,EAAMwB,KAAKkH,QACxBwB,SAAUlK,EAAMwB,KAAKnB,MAErBoB,cAAezB,EAAMyB,cAAcG,QAQEsQ,GAAzB7Q,CAA6CgR,mFCxEtDY,oLAEM,IAAA1T,EAAArB,KAAAD,EACkBC,KAAKC,MAAtBiU,EADDnU,EACCmU,IAAK9Q,EADNrD,EACMqD,SACZ,OAEG7C,EAAAC,EAAAC,cAACuU,GAAA,EAAD,CAAQ/T,MAAM,QAAQgU,OAAK,EAACC,OAAO,MAChC3U,EAAAC,EAAAC,cAAC0U,GAAA,EAAD,CAAajM,IAAKkM,KAAWC,OAAK,EAACC,GAAG,KAAKlS,EAASmS,aACpDhV,EAAAC,EAAAC,cAAC+U,GAAA,EAAD,CAAetU,QAAS,kBAAMG,EAAKpB,MAAMwV,kBACzClV,EAAAC,EAAAC,cAACiV,GAAA,EAAD,CAAU/U,OAAQuT,EAAIyB,QAASC,QAAM,GAClCrV,EAAAC,EAAAC,cAACoV,GAAA,EAAD,CAAK/B,UAAU,UAAU8B,QAAM,GAC5BrV,EAAAC,EAAAC,cAACqV,GAAA,EAAD,KACGvV,EAAAC,EAAAC,cAACsV,GAAA,EAAD,CAAS7M,IAAKkM,KAAWC,OAAK,EAACC,GAAG,gBAAgBU,gBAAgB,UAAlE,8BAIwB,QAA1B5S,EAAS6S,eAA8C,IAApB/B,EAAIgC,YACrC3V,EAAAC,EAAAC,cAACqV,GAAA,EAAD,KACGvV,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS,kBAAMG,EAAKpB,MAAM2R,kBAAlD,kCAEF,KACJrR,EAAAC,EAAAC,cAACqV,GAAA,EAAD,gBArBO3U,aAmCnB6S,GAAqB,CACxByB,aJ1CyB,iBAAO,CAChClP,KAAML,GAAQwL,iBI0CdE,iBACAC,gCAGY1O,eAXS,SAAArB,GAAK,MAAK,CAC/BoS,IAAKpS,EAAMoS,IACX9Q,SAAUtB,EAAMsB,WASqB4Q,GAAzB7Q,CAA6C4R,cClDtDoB,eACH,SAAAA,EAAYlW,GAAO,IAAAoB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAtB,KAAAmW,IAChB9U,EAAAC,OAAAE,EAAA,EAAAF,CAAAtB,KAAAsB,OAAAG,EAAA,EAAAH,CAAA6U,GAAAzU,KAAA1B,KAAMC,KACD6B,MAAQ,CAEVsU,WAAW,EACXF,aAAa,GALA7U,wEASV,IAAAe,EAAApC,KAAAD,EACoBC,KAAKC,MAAvBiU,EADFnU,EACEmU,IAAK9Q,EADPrD,EACOqD,SACb,OACG7C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqC,SAAA,KAC2B,QAA1BO,EAAS6S,aACJ1V,EAAAC,EAAAC,cAAC4V,GAAA,EAAD,CAAOpV,MAAM,QAAQN,OAAQuT,EAAIgC,YAAa/V,OAAQ,kBAAMiC,EAAKnC,MAAM2R,kBACpErR,EAAAC,EAAAC,cAAA,MAAIqT,UAAU,iBAAd,oBACAvT,EAAAC,EAAAC,cAAA,6DACoDF,EAAAC,EAAAC,cAAA,sBADpD,2CAC4GF,EAAAC,EAAAC,cAAA,KAAG8B,KAAK,yCAAR,0CAE5GhC,EAAAC,EAAAC,cAAA,kHAGAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGqT,UAAU,QAAb,gDACgDvT,EAAAC,EAAAC,cAAA,UAAK2C,EAASkT,eAAmB/V,EAAAC,EAAAC,cAAA,WADjF,wFAEwFF,EAAAC,EAAAC,cAAA,WACrFF,EAAAC,EAAAC,cAAA,YAAO2C,EAAS6S,aAAhB,IAA+B7S,EAASmT,YAAkBhW,EAAAC,EAAAC,cAAA,WAC1DF,EAAAC,EAAAC,cAAA,KAAG8B,KAAM,8CAAgDa,EAASmT,WAAY1K,OAAO,SAASC,IAAI,uBAAlG,oBAGL,aA/BW3K,aA0CrB6S,GAAqB,CACxBpC,kBAGYzO,eATS,SAAArB,GAAK,MAAK,CAC/BoS,IAAKpS,EAAMoS,IACX9Q,SAAUtB,EAAMsB,WAOqB4Q,GAAzB7Q,CAA6CgT,ICpD/CjQ,GAAU,CACpBsQ,qBAAsB,uBACtBC,uBAAwB,yBACxBC,uBAAwB,0BAGdC,GAAqB,iBAAO,CACtCpQ,KAAML,GAAQsQ,uBAGJI,GAAuB,SAACxT,GAAD,MAAe,CAEhDmD,KAAML,GAAQuQ,uBACdhQ,QAAS,CAACrD,cAGAyT,GAAuB,SAAC1U,GAAD,MAAY,CAC7CoE,KAAML,GAAQwQ,uBACdjQ,QAAS,CAAEtE,iECXR2U,uBACH,SAAAA,EAAY7W,GAAO,IAAAoB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAtB,KAAA8W,IAChBzV,EAAAC,OAAAE,EAAA,EAAAF,CAAAtB,KAAAsB,OAAAG,EAAA,EAAAH,CAAAwV,GAAApV,KAAA1B,KAAMC,KACD6B,MAAQ,CAEVsU,WAAW,EACXF,aAAa,GALA7U,wEAQV,IACE+B,EAAapD,KAAKC,MAAlBmD,SACR,OAEG7C,EAAAC,EAAAC,cAACkT,GAAA,EAAD,CAAWC,OAAK,GACbrT,EAAAC,EAAAC,cAACoT,EAAA,EAAD,CAAWD,OAAK,GACbrT,EAAAC,EAAAC,cAAA,MAAIqT,UAAU,aAAa1Q,EAAS2T,cACpCxW,EAAAC,EAAAC,cAAA,KAAGqT,UAAU,QAAQ1Q,EAAS4T,cAC9BzW,EAAAC,EAAAC,cAAA,MAAIqT,UAAU,SACdvT,EAAAC,EAAAC,cAAA,SAAI2C,EAAS6T,qBACb1W,EAAAC,EAAAC,cAAA,KAAGqT,UAAU,QACVvT,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQuB,KAAM,UAAYa,EAAS8T,qBAAsBjW,MAAM,WAA/D,0CApBaE,cAgChBgC,eAJS,SAAArB,GAAK,MAAK,CAC/BsB,SAAUtB,EAAMsB,WAGJD,CAAyB2T,ICjBlCK,GAAwB,WAC3B,OACG5W,EAAAC,EAAAC,cAAA,OAAK2W,MAAO,CAAEC,OAAQ,4BAA6BC,SAAU,SAAUC,aAAc,WAClFhX,EAAAC,EAAAC,cAAC+W,GAAA,EAAD,CAAM1D,UAAU,oBACbvT,EAAAC,EAAAC,cAAA,QAAMqT,UAAU,qBAAoBvT,EAAAC,EAAAC,cAAA,uCACpCF,EAAAC,EAAAC,cAAA,OAAKqT,UAAU,8BACZvT,EAAAC,EAAAC,cAACgX,GAAA,EAAD,KACGlX,EAAAC,EAAAC,cAAA,MAAIqT,UAAU,aAAd,sBACAvT,EAAAC,EAAAC,cAACiX,GAAA,EAAD,2CAEHnX,EAAAC,EAAAC,cAACkX,GAAA,EAAD,KAAYpX,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQC,MAAM,YAAYuE,UAAQ,GAAlC,2BAOrBoS,GAA6B,WAChC,OACGrX,EAAAC,EAAAC,cAAA,OAAK2W,MAAO,CAAEC,OAAQ,4BAA6BC,SAAU,SAAUC,aAAc,WAClFhX,EAAAC,EAAAC,cAAC+W,GAAA,EAAD,CAAM1D,UAAU,oBACbvT,EAAAC,EAAAC,cAAA,OAAKqT,UAAU,mCACZvT,EAAAC,EAAAC,cAACgX,GAAA,EAAD,KACGlX,EAAAC,EAAAC,cAAA,MAAIqT,UAAU,aAAd,+BACAvT,EAAAC,EAAAC,cAACiX,GAAA,EAAD,gFAGHnX,EAAAC,EAAAC,cAACkX,GAAA,EAAD,KAAYpX,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQC,MAAM,YAAYiI,IAAKkM,KAAWC,OAAK,EAACC,GAAG,iBAAnD,kCAOrBuC,eACH,SAAAA,EAAY5X,GAAO,IAAAoB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAtB,KAAA6X,IAChBxW,EAAAC,OAAAE,EAAA,EAAAF,CAAAtB,KAAAsB,OAAAG,EAAA,EAAAH,CAAAuW,GAAAnW,KAAA1B,KAAMC,KACD6B,MAAQ,CAEVsU,WAAW,EACXF,aAAa,GALA7U,wEAShB,OACGd,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqC,SAAA,KACAtC,EAAAC,EAAAC,cAACqX,GAAD,MACGvX,EAAAC,EAAAC,cAACoT,EAAA,EAAD,KACEtT,EAAAC,EAAAC,cAACsX,GAAA,EAAD,KACIxX,EAAAC,EAAAC,cAACgQ,GAAA,EAAD,CAAKuH,MAAM,8BACRzX,EAAAC,EAAAC,cAACwX,GAAD,OAEH1X,EAAAC,EAAAC,cAACgQ,GAAA,EAAD,CAAKuH,MAAM,8BACRzX,EAAAC,EAAAC,cAACyX,GAAD,OAEH3X,EAAAC,EAAAC,cAACgQ,GAAA,EAAD,CAAKuH,MAAM,8BACRzX,EAAAC,EAAAC,cAACyX,GAAD,iBAtBQ/W,aAmCdgC,eAJS,SAAArB,GAAK,MAAK,CAC/BsB,SAAUtB,EAAMsB,WAGJD,CAAyB0U,WCrExChR,IAAMsR,SAASC,QAAU,mDAEnBC,+LAGArY,KAAKC,MAAMqY,gBACXtY,KAAKC,MAAM0G,gBACX3G,KAAKC,MAAM2H,qBACX5H,KAAKC,MAAMkS,mBAAmB,4EAGXoG,GACnB,IAAIrY,EAAa,GAGjB,OAFAqY,EAAOvV,IAAI,SAAAC,GAAQ,OAAI/C,EAAW8I,KAAK/F,EAASf,UAA8B,OAAnBe,EAASd,SACpEjC,EAAaA,EAAWsY,MAAM,SAAAC,GAAC,OAAU,IAANA,qCAMnC,IAAIF,EAAS,CAEV,CAAEtW,aAAc,gBAAiBC,UAAWlC,KAAKC,MAAMqD,KAAKkH,QAASrI,MAAOnC,KAAKC,MAAMqD,KAAKnB,OAC5F,CAAEF,aAAc,QAASC,UAAWlC,KAAKC,MAAMsD,cAAciH,QAASrI,MAAOnC,KAAKC,MAAMsD,cAAcpB,OACtG,CAAEF,aAAc,WAAYC,UAAWlC,KAAKC,MAAMmD,SAASoH,QAASrI,MAAOnC,KAAKC,MAAMmD,SAASjB,QAElGoW,EAAOvP,KAAK,CAAE/G,aAAc,WAAYC,UAAWlC,KAAKC,MAAMoD,SAASmH,QAASrI,MAAOnC,KAAKC,MAAMoD,SAASlB,QAC3G,IAAIuW,EAAa1Y,KAAK2Y,sBAAsBJ,GAC5C,OACGhY,EAAAC,EAAAC,cAAA,QAAMqT,UAAU,eACbvT,EAAAC,EAAAC,cAACmY,EAAD,CAAStY,KAAMiY,EAAQlW,OAAQqW,IACzBnY,EAAAC,EAAAC,cAACoY,GAAD,MACAtY,EAAAC,EAAAC,cAACqY,GAAD,MACAvY,EAAAC,EAAAC,cAACsY,GAAA,EAAD,CAAOC,KAAK,IAAI3D,OAAK,EAAC4D,UAAWpB,KAEjCtX,EAAAC,EAAAC,cAACsY,GAAA,EAAD,CAAOC,KAAK,gBAAgBC,UAAW9E,aAjC7BhT,aAwDtB6S,GAAqB,CACxBsE,cH5DI,WAEJ,OADAxK,QAAQ0F,IAAI,WACL,SAAA5M,GAEJ,OADAA,EAAS+P,MACF9P,IAAMC,IAAI,4CACbC,KAAK,SAAAC,GAAaJ,EAASgQ,GAAqB5P,EAASC,SACzDG,MAAM,SAAAjF,GAAK,OAAIyE,EAASiQ,GAAqB1U,QGuDpDwE,gBACAiB,qBACAuK,uBAGYhP,eAdS,SAAArB,GAAK,MAAK,CAC/BsB,SAAUtB,EAAMsB,SAChBC,SAAUvB,EAAMuB,SAChBC,KAAMxB,EAAMwB,KACZC,cAAezB,EAAMyB,gBAUgByQ,GAAzB7Q,CAA6CkV,IClE7Ca,GAfH,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OACH7Y,EAAAC,EAAAC,cAAC4Y,EAAA,EAAD,CAAUD,MAAOA,GACpB7Y,EAAAC,EAAAC,cAAC6Y,GAAA,EAAD,CAAQC,SAAU,eACThZ,EAAAC,EAAAC,cAACsY,GAAA,EAAD,CAAOC,KAAK,YAAYC,UAAWZ,QCSnCmB,oLAXT,OACGjZ,EAAAC,EAAAC,cAAA,UAAQqT,UAAU,sBAAsBsD,MAAO,CAAEqC,gBAAiB,YAC/DlZ,EAAAC,EAAAC,cAACoT,EAAA,EAAD,CAAWD,OAAK,EAACE,UAAU,YACxBvT,EAAAC,EAAAC,cAAA,QAAMqT,UAAU,yBAAhB,aAAmD,OAAnD,8CACAvT,EAAAC,EAAAC,cAAA,KAAG8B,KAAK,uCAAuCuR,UAAU,cAAcjI,OAAO,SAASC,IAAI,uBAA3F,+BANM3K,sBCLfuY,GAAe,CAClBnE,YAAa,aACbwB,aAAc,aACdC,aAAc,aACdC,oBAAqB,aACrBC,qBAAsB,aACtBjB,aAAc,SACdM,WAAY,aACZD,cAAe,aACf9L,SAAS,EACTrI,MAAO,MCVV,IAAMuX,GAAe,CAClBhW,MAAO,GACP8G,SAAS,EACTrI,MAAO,MCHV,IAAMuX,GAAe,CAClBhW,MAAO,GACP8G,SAAS,EACTrI,MAAO,MCHV,IAAMuX,GAAe,CAClBC,uBAAuB,EACvBzD,aAAa,EACbP,SAAS,GCHZ,IAAM+D,GAAe,CAClBhW,MAAO,GACP8G,SAAS,EACTrI,MAAO,KACPiQ,IAAK,ICEOwH,oBAAgB,CAC5BxW,SLMY,WAAuD,IAA9BtB,EAA8B+X,UAAAlW,OAAA,QAAAmW,IAAAD,UAAA,GAAAA,UAAA,GAAtBH,GAActQ,EAAQyQ,UAAAlW,OAAA,EAAAkW,UAAA,QAAAC,EAEnE,OAAO1Q,EAAO7C,MACX,KAAKL,GAAQsQ,qBAEV,OADA1I,QAAQ0F,IAAI,SACLlS,OAAAiO,GAAA,EAAAjO,CAAA,GACDQ,EADN,CAEG0I,SAAS,EACTrI,MAAO,OAEb,KAAK+D,GAAQuQ,uBAGV,OAFA3I,QAAQ0F,IAAI,WACZ1F,QAAQ0F,IAAIpK,EAAO3C,SACZnF,OAAAiO,GAAA,EAAAjO,CAAA,GACDQ,EACAsH,EAAO3C,QAAQrD,SAFrB,CAGGoH,SAAS,IAEf,KAAKtE,GAAQwQ,uBAEV,OADA5I,QAAQ0F,IAAI,WACLlS,OAAAiO,GAAA,EAAAjO,CAAA,GACDQ,EADN,CAEG0I,SAAS,EACTrI,MAAOiH,EAAO3C,QAAQtE,MACtBuB,MAAO,KAEb,QACG,OAAO5B,IKhCbuB,SJFY,WAAuD,IAA9BvB,EAA8B+X,UAAAlW,OAAA,QAAAmW,IAAAD,UAAA,GAAAA,UAAA,GAAtBH,GAActQ,EAAQyQ,UAAAlW,OAAA,EAAAkW,UAAA,QAAAC,EACnE,OAAO1Q,EAAO7C,MACX,KAAKL,EAAQC,qBACV,OAAO7E,OAAAiO,GAAA,EAAAjO,CAAA,GACDQ,EADN,CAEG0I,SAAS,EACTrI,MAAO,OAEb,KAAK+D,EAAQE,uBACV,OAAO9E,OAAAiO,GAAA,EAAAjO,CAAA,GACDQ,EADN,CAEG0I,SAAS,EACT9G,MAAO0F,EAAO3C,QAAQpD,WAE5B,KAAK6C,EAAQG,uBAEV,OADAyH,QAAQ0F,IAAIpK,EAAO3C,QAAQtE,OACpBb,OAAAiO,GAAA,EAAAjO,CAAA,GACDQ,EADN,CAEG0I,SAAS,EACTrI,MAAOiH,EAAO3C,QAAQtE,MACtBuB,MAAO,KAEb,QACG,OAAO5B,IIpBbwB,KHHY,WAA4D,IAA9BxB,EAA8B+X,UAAAlW,OAAA,QAAAmW,IAAAD,UAAA,GAAAA,UAAA,GAAtBH,GAActQ,EAAQyQ,UAAAlW,OAAA,EAAAkW,UAAA,QAAAC,EACxE,OAAO1Q,EAAO7C,MACX,KAAKL,EAAQmB,0BACV,OAAO/F,OAAAiO,GAAA,EAAAjO,CAAA,GACDQ,EADN,CAEG0I,SAAS,EACTrI,MAAO,OAEb,KAAK+D,EAAQoB,4BACV,OAAOhG,OAAAiO,GAAA,EAAAjO,CAAA,GACDQ,EADN,CAEG0I,SAAS,EACT9G,MAAO0F,EAAO3C,QAAQiB,gBAE5B,KAAKxB,EAAQqB,4BACV,OAAOjG,OAAAiO,GAAA,EAAAjO,CAAA,GACDQ,EADN,CAEG0I,SAAS,EACTrI,MAAOiH,EAAO3C,QAAQtE,MACtBuB,MAAO,KAEb,QACG,OAAO5B,IGlBboS,IFJY,WAAmD,IAA9BpS,EAA8B+X,UAAAlW,OAAA,QAAAmW,IAAAD,UAAA,GAAAA,UAAA,GAAtBH,GACzC,QAD+DG,UAAAlW,OAAA,EAAAkW,UAAA,QAAAC,GACjDvT,MACX,KAAKL,GAAQyL,+BACV,OAAOrQ,OAAAiO,GAAA,EAAAjO,CAAA,GACDQ,EADN,CAEG6X,uBAAwB7X,EAAM6X,wBAEpC,KAAKzT,GAAQuL,gBACV,OAAOnQ,OAAAiO,GAAA,EAAAjO,CAAA,GACDQ,EADN,CAEGoU,aAAcpU,EAAMoU,cAE1B,KAAKhQ,GAAQwL,eACV,OAAOpQ,OAAAiO,GAAA,EAAAjO,CAAA,GACDQ,EADN,CAEG6T,SAAU7T,EAAM6T,UAEtB,QACG,OAAO7T,IEbbyB,cDJY,WAA4D,IAA9BzB,EAA8B+X,UAAAlW,OAAA,QAAAmW,IAAAD,UAAA,GAAAA,UAAA,GAAtBH,GAActQ,EAAQyQ,UAAAlW,OAAA,EAAAkW,UAAA,QAAAC,EACxE,OAAO1Q,EAAO7C,MACX,KAAKL,GAAQ4L,0BACV,OAAOxQ,OAAAiO,GAAA,EAAAjO,CAAA,GACDQ,EADN,CAEG0I,SAAS,EACTrI,MAAO,OAEb,KAAK+D,GAAQ6L,4BACV,OAAOzQ,OAAAiO,GAAA,EAAAjO,CAAA,GACDQ,EADN,CAEG0I,SAAS,EACT9G,MAAO0F,EAAO3C,QAAQlD,gBAE5B,KAAK2C,GAAQ8L,4BACV,OAAO1Q,OAAAiO,GAAA,EAAAjO,CAAA,GACDQ,EADN,CAEG0I,SAAS,EACTrI,MAAOiH,EAAO3C,QAAQtE,MACtBuB,MAAO,KAEb,KAAKwC,GAAQgM,QACV,OAAO5Q,OAAAiO,GAAA,EAAAjO,CAAA,GACDQ,EADN,CAEGsQ,IAAKhJ,EAAO3C,QAAQ2L,MAE1B,QACG,OAAOtQ,eE1BViY,GAAcC,QACY,cAA7BC,OAAO3G,SAAS4G,UAEa,UAA7BD,OAAO3G,SAAS4G,UAEhBD,OAAO3G,SAAS4G,SAASxG,MACtB,2DAsCN,SAASyG,GAAgBC,GACtBC,UAAUC,cACNC,SAASH,GACTrT,KAAK,SAAAyT,GACHA,EAAaC,cAAgB,WAC1B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACC,cAA3BF,EAAiB5Y,QACduY,UAAUC,cAAcO,WAKzB/M,QAAQ0F,IAAI,6CAKZ1F,QAAQ0F,IAAI,2CAM1BpM,MAAM,SAAAjF,GACJ2L,QAAQ3L,MAAM,4CAA6CA,KCnEpE,IACMiX,GAD4B0B,aAAgBC,KAAhBD,CAAuBE,KAC3CC,CAA0BC,IAExCC,IAASC,OACN,CAAC7a,EAAAC,EAAAC,cAAC4a,GAAD,CAAKjC,MAAOA,GAAO5W,IAAK,IAAOjC,EAAAC,EAAAC,cAAC6a,GAAD,CAAQ9Y,IAAI,OAAS+Y,SAASC,eAAe,SDIjE,WACZ,GAA6C,kBAAmBnB,UAAW,CAGxE,GADkB,IAAIoB,IAAIC,cAAwBzB,OAAO3G,UAC3CqI,SAAW1B,OAAO3G,SAASqI,OAItC,OAGH1B,OAAO2B,iBAAiB,OAAQ,WAC7B,IAAMxB,EAAK,GAAAtH,OAAM4I,cAAN,sBAEP3B,IAiDb,SAAiCK,GAE9ByB,MAAMzB,GACFrT,KAAK,SAAAC,GAGoB,MAApBA,EAAS3E,SACuD,IAAhE2E,EAAS8U,QAAQhV,IAAI,gBAAgBiV,QAAQ,cAG7C1B,UAAUC,cAAc0B,MAAMjV,KAAK,SAAAyT,GAChCA,EAAayB,aAAalV,KAAK,WAC5BkT,OAAO3G,SAAS4I,aAKtB/B,GAAgBC,KAGrBhT,MAAM,WACJ0G,QAAQ0F,IACL,mEArEA2I,CAAwB/B,GAIxBC,UAAUC,cAAc0B,MAAMjV,KAAK,WAChC+G,QAAQ0F,IACL,+GAMN2G,GAAgBC,MC/B5BgC","file":"static/js/main.e4b05857.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n   Button, Modal, ModalHeader, ModalBody, ModalFooter,\r\n} from 'reactstrap';\r\nimport './Modal.css';\r\n\r\nexport default class memberSearchModal extends Component {\r\n   \r\n   /* Passed in:\r\n      props:\r\n         - title\r\n         - body\r\n    */\r\n\r\n   render() {\r\n      const { openStatus, toggle, size, title, body } = this.props;\r\n      return (\r\n         <Modal isOpen={openStatus} toggle={toggle} centered size={size}>\r\n            <ModalHeader toggle={toggle}>{title}</ModalHeader>\r\n            <ModalBody>\r\n               {body}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" onClick={toggle}>Close</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      );\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n   Modal, ModalHeader, ModalBody,\r\n} from 'reactstrap';\r\nimport './Modal.css';\r\n\r\nexport default class memberSearchModal extends Component {\r\n   \r\n   /* Passed in:\r\n      props:\r\n         - title\r\n         - body\r\n    */\r\n\r\n   render() {\r\n      const { openStatus, size } = this.props;\r\n      return (\r\n         <Modal isOpen={openStatus} centered size={size}>\r\n            <ModalHeader>{this.props.title}</ModalHeader>\r\n            <ModalBody>\r\n               {this.props.body}\r\n            </ModalBody>\r\n         </Modal>\r\n      );\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n   Spinner,\r\n} from 'reactstrap';\r\nimport ErrorModal from './AdditionalDataModal';\r\nimport LoadingModal from './LoadingModal'\r\nimport './App.css';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass Loading extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n         errorModalOpenFlag: false,\r\n         errorModalTitle: '',\r\n         errorModalBody: '',\r\n      }\r\n   }\r\n\r\n   loadingText(friendlyName, condition, error) {\r\n      let status = <Spinner color=\"primary\" size=\"sm\" />\r\n      if (error !== null) {\r\n         status = <a href=\"#0\" key=\"ERROR\" onClick={() => this.showErrorInfo(error.toString(), <code>{error.stack.toString()}</code>)}>Error</a>\r\n      }\r\n      else if (condition === false) {\r\n         status = 'done'\r\n      }\r\n\r\n      return (condition === false && error === null) ? null : <div key={friendlyName}>Loading {friendlyName}... {status}</div>\r\n\r\n   }\r\n\r\n   showErrorInfo(title, body) {\r\n      this.setState({ errorModalTitle: title, errorModalBody: body, errorModalOpenFlag: !this.state.errorModalOpenFlag});\r\n   }\r\n\r\n   errorModalOpenToggle = () => {\r\n      this.setState({ errorModalOpenFlag: !this.state.errorModalOpenFlag });\r\n   };\r\n\r\n\r\n   render() {\r\n      const {body, status} = this.props;\r\n      return (\r\n         <>\r\n         <ErrorModal\r\n            openStatus={this.state.errorModalOpenFlag}\r\n            title={this.state.errorModalTitle}\r\n            body={this.state.errorModalBody}\r\n            toggle={this.errorModalOpenToggle}\r\n            size={'lg'}\r\n         />\r\n         \r\n         <LoadingModal\r\n            openStatus={!status}\r\n            title={<div>Loading Components</div>}\r\n            body={body.map(loadInfo => this.loadingText(loadInfo.friendlyName, loadInfo.condition, loadInfo.error))}\r\n         />\r\n         </>\r\n      )\r\n   }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   settings: state.settings,\r\n   keywords: state.keywords,\r\n   orgs: state.orgs,\r\n   collaborators: state.collaborators,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Loading)","/*\r\n * Pagination component from @cornflourblue on github\r\n * https://github.com/cornflourblue/react-pagination-example\r\n *\r\n * MIT License\r\n * \r\n * Copyright (c) 2017 Jason Watmore\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n * \r\n * The above copyright notice and this permission notice shall be included in \r\n * all copies or substantial portions of the Software.\r\n * \r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\r\n\r\nconst propTypes = {\r\n   items: PropTypes.array.isRequired,\r\n   onChangePage: PropTypes.func.isRequired,\r\n   initialPage: PropTypes.number,\r\n   pageSize: PropTypes.number\r\n}\r\n\r\nconst defaultProps = {\r\n   initialPage: 1,\r\n   pageSize: 30\r\n}\r\n\r\nclass PaginationWrapper extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { pager: {} };\r\n   }\r\n\r\n   componentWillMount() {\r\n      // set page if items array isn't empty\r\n      if (this.props.items && this.props.items.length) {\r\n         this.setPage(this.props.initialPage);\r\n      }\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState) {\r\n      // reset page if items array has changed\r\n      if (this.props.items !== prevProps.items) {\r\n         this.setPage(this.props.initialPage);\r\n      }\r\n   }\r\n\r\n   setPage(page) {\r\n      var { items, pageSize } = this.props;\r\n      var pager = this.state.pager;\r\n\r\n      if (page < 1 || page > pager.totalPages) {\r\n         return;\r\n      }\r\n\r\n      // get new pager object for specified page\r\n      pager = this.getPager(items.length, page, pageSize);\r\n\r\n      // get new page of items from items array\r\n      var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\r\n\r\n      // update state\r\n      this.setState({ pager: pager });\r\n\r\n      // call change page function in parent component\r\n      this.props.onChangePage(pageOfItems);\r\n   }\r\n\r\n   getPager(totalItems, currentPage, pageSize) {\r\n      // default to first page\r\n      currentPage = currentPage || 1;\r\n\r\n      // default page size is 10\r\n      pageSize = pageSize || 10;\r\n\r\n      // calculate total pages\r\n      var totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n      var startPage, endPage;\r\n      if (totalPages <= 10) {\r\n         // less than 10 total pages so show all\r\n         startPage = 1;\r\n         endPage = totalPages;\r\n      } else {\r\n         // more than 10 total pages so calculate start and end pages\r\n         if (currentPage <= 6) {\r\n            startPage = 1;\r\n            endPage = 10;\r\n         } else if (currentPage + 4 >= totalPages) {\r\n            startPage = totalPages - 9;\r\n            endPage = totalPages;\r\n         } else {\r\n            startPage = currentPage - 5;\r\n            endPage = currentPage + 4;\r\n         }\r\n      }\r\n\r\n      // calculate start and end item indexes\r\n      var startIndex = (currentPage - 1) * pageSize;\r\n      var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n      // create an array of pages to ng-repeat in the pager control\r\n      var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\r\n\r\n      // return object with all pager properties required by the view\r\n      return {\r\n         totalItems: totalItems,\r\n         currentPage: currentPage,\r\n         pageSize: pageSize,\r\n         totalPages: totalPages,\r\n         startPage: startPage,\r\n         endPage: endPage,\r\n         startIndex: startIndex,\r\n         endIndex: endIndex,\r\n         pages: pages\r\n      };\r\n   }\r\n\r\n   render() {\r\n      var pager = this.state.pager;\r\n\r\n      if (!pager.pages || pager.pages.length <= 1) {\r\n         // don't display pager if there is only 1 page\r\n         return null;\r\n      }\r\n\r\n      return (\r\n         <Pagination aria-label=\"pagination\">\r\n\r\n            <PaginationItem disabled={pager.currentPage === 1 ? true : false}>\r\n               <PaginationLink first href=\"#0\" onClick={() => this.setPage(1)}/>\r\n            </PaginationItem>\r\n\r\n            <PaginationItem disabled={pager.currentPage === 1 ? true : false}>\r\n               <PaginationLink previous href=\"#0\" onClick={() => this.setPage(pager.currentPage - 1)} />\r\n            </PaginationItem>\r\n\r\n            {pager.pages.map((page, index) =>\r\n               <PaginationItem key={index} active={pager.currentPage === page ? true : false}>\r\n                  <PaginationLink href=\"#0\" onClick={() => this.setPage(page)}>{page}</PaginationLink>\r\n               </PaginationItem>\r\n            )}\r\n\r\n            <PaginationItem disabled={pager.currentPage === pager.totalPages ? true : false}>\r\n               <PaginationLink next href=\"#0\" onClick={() => this.setPage(pager.currentPage + 1)} />\r\n            </PaginationItem>\r\n\r\n            <PaginationItem disabled={pager.currentPage === pager.totalPages ? true : false}>\r\n               <PaginationLink last href=\"#0\" onClick={() => this.setPage(pager.totalPages)} />\r\n            </PaginationItem>\r\n\r\n         </Pagination>\r\n\r\n      );\r\n   }\r\n}\r\n\r\nPaginationWrapper.propTypes = propTypes;\r\nPaginationWrapper.defaultProps = defaultProps;\r\nexport default PaginationWrapper;","\r\nimport axios from \"axios\";\r\n\r\nexport const Actions = {\r\n   FETCH_KEYWORDS_BEGIN: 'FETCH_KEYWORDS_BEGIN',\r\n   FETCH_KEYWORDS_SUCCESS: 'FETCH_KEYWORDS_SUCCESS',\r\n   FETCH_KEYWORDS_FAILURE: 'FETCH_KEYWORDS_FAILURE'\r\n}\r\n\r\nexport const fetchKeywordsBegin = () => ({\r\n   type: Actions.FETCH_KEYWORDS_BEGIN\r\n});\r\n\r\nexport const fetchKeywordsSuccess = (keywords) => ({\r\n   type: Actions.FETCH_KEYWORDS_SUCCESS,\r\n   payload: { keywords }\r\n})\r\n\r\nexport const fetchKeywordsFailure = (error) => ({\r\n   type: Actions.FETCH_KEYWORDS_FAILURE,\r\n   payload: { error }\r\n})\r\n\r\nexport function fetchKeywords() {\r\n   let keywords = [];\r\n   return dispatch => {\r\n      dispatch(fetchKeywordsBegin());\r\n      return axios.get('api/v1/keywords/?format=json')\r\n         .then(response => {\r\n            response.data.map(keyword => {\r\n               keywords[keyword.id] = keyword;\r\n               return keyword;\r\n            });\r\n            dispatch(fetchKeywordsSuccess(keywords));\r\n         })\r\n         .catch(error => dispatch(fetchKeywordsFailure(error))\r\n      );\r\n   }\r\n}","\r\nimport axios from \"axios\";\r\n\r\nexport const Actions = {\r\n   FETCH_ORGANIZATIONS_BEGIN: 'FETCH_ORGANIZATIONS_BEGIN',\r\n   FETCH_ORGANIZATIONS_SUCCESS: 'FETCH_ORGANIZATIONS_SUCCESS',\r\n   FETCH_ORGANIZATIONS_FAILURE: 'FETCH_ORGANIZATIONS_FAILURE'\r\n}\r\n\r\nexport const fetchOrganizationsBegin = () => ({\r\n   type: Actions.FETCH_ORGANIZATIONS_BEGIN\r\n});\r\n\r\nexport const fetchOrganizationsSuccess = (organizations) => ({\r\n   type: Actions.FETCH_ORGANIZATIONS_SUCCESS,\r\n   payload: { organizations }\r\n})\r\n\r\nexport const fetchOrganizationsFailure = (error) => ({\r\n   type: Actions.FETCH_ORGANIZATIONS_FAILURE,\r\n   payload: { error }\r\n})\r\n\r\nexport function fetchOrganizations() {\r\n   let organizations = [];\r\n   return dispatch => {\r\n      dispatch(fetchOrganizationsBegin());\r\n      return axios.get('api/v1/orgs/?format=json')\r\n         .then(response => {\r\n            response.data.map(organization => {\r\n               organizations[organization.id] = organization;\r\n               return organization;\r\n            });\r\n            dispatch(fetchOrganizationsSuccess(organizations));\r\n         })\r\n         .catch(error => dispatch(fetchOrganizationsFailure(error))\r\n         );\r\n   }\r\n}","export function toTitleCase(str) {\r\n   return str.replace(\r\n      /\\w\\S*/g,\r\n      function (txt) {\r\n         return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n      }\r\n   );\r\n}\r\n\r\nexport const NBSP = '\\u00A0'","import React, { Component } from 'react';\r\nimport {\r\n   Badge,\r\n   ListGroupItem,\r\n   ListGroup,\r\n} from 'reactstrap';\r\n\r\nimport BaseModal from './AdditionalDataModal';\r\nimport { connect } from 'react-redux'\r\nimport './App.css';\r\n\r\nimport { toTitleCase, NBSP } from './helper'\r\n\r\nfunction getKeywordType(shortKeywordType) {\r\n   if (shortKeywordType === \"TK\") {\r\n      return { name: \"Topical\", color: \"primary\" }\r\n   }\r\n   if (shortKeywordType === \"AK\") {\r\n      return { name: \"Activity\", color: \"secondary\" }\r\n   }\r\n}\r\n\r\nfunction getKeywordSortOrder(shortKeywordSortOrder) {\r\n   if (shortKeywordSortOrder === \"HS\") {\r\n      return { name: \"High Level\", color: \"success\" }\r\n   }\r\n   if (shortKeywordSortOrder === \"MS\") {\r\n      return { name: \"Medium Level\", color: \"warning\" }\r\n   }\r\n   if (shortKeywordSortOrder === \"LS\") {\r\n      return { name: \"Low Level\", color: \"danger\" }\r\n   }\r\n}\r\n\r\nclass Keywords extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         showKeywordOverviewModal: false,\r\n         keywordOverviewModalTitle: 'User Keywords',\r\n         keywordOverviewModalBody: [],\r\n\r\n         showKeywordDetailModal: false,\r\n         keywordDetailModalTitle: 'User Keywords',\r\n         keywordDetailModalBody: [],\r\n      };\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.setState({ keywordOverviewModalBody: this.buildKeywordOverviewModalBody() })\r\n      this.buildDisplayText();\r\n   }\r\n\r\n   buildKeywordOverviewModalBody = () => {\r\n      let modalBody = [];\r\n      const keywordIDs = this.props.items;\r\n      keywordIDs.map(\r\n         keywordID => (\r\n            modalBody.push(\r\n            <ListGroupItem\r\n               key={keywordID} \r\n               tag=\"a\" \r\n               onClick={() => this.showKeywordExtendedData(keywordID)} \r\n               href=\"#0\" \r\n               action\r\n            >\r\n               {toTitleCase(this.props.keywords[keywordID].keywordName)}\r\n            </ListGroupItem>)))\r\n      modalBody = <ListGroup>{modalBody}</ListGroup>\r\n      return modalBody;\r\n   }\r\n\r\n   buildDisplayText = () => {\r\n      let displayText = ''\r\n      const keywordIDs = this.props.items;\r\n\r\n      keywordIDs.map(keywordID => (\r\n         displayText += toTitleCase(\r\n            this.props.keywords[keywordID].keywordName) + \", \"));\r\n      displayText = displayText.substring(0, displayText.length - 2)\r\n      if (displayText.length > this.props.displayLength)\r\n         displayText = displayText.substring(0, this.props.displayLength) + \"...\"\r\n      if (displayText.length > 0)\r\n         displayText = \r\n         <a \r\n            href=\"#0\"\r\n            key={keywordIDs} \r\n            onClick={\r\n               () => this.setState(\r\n                  {\r\n                     showKeywordOverviewModal: !this.state.showKeywordOverviewModal\r\n                  })\r\n               }\r\n         >\r\n            {displayText}\r\n         </a>\r\n      else\r\n         displayText = \"No Keywords\"\r\n      return displayText;\r\n   }\r\n\r\n   showKeywordExtendedData(id) {\r\n      let keywordInfo = this.props.keywords[id];\r\n\r\n      let title = \r\n         <div>\r\n            More Information on <b>{keywordInfo.keywordName.toLowerCase()}</b> keyword\r\n         </div>\r\n      let body = (\r\n         <div>\r\n            <Badge \r\n               color={getKeywordType(keywordInfo.keywordType).color}>\r\n               {getKeywordType(keywordInfo.keywordType).name}\r\n            </Badge>\r\n            {NBSP}\r\n            <Badge \r\n               color={getKeywordSortOrder(keywordInfo.sortOrder).color}>\r\n               {getKeywordSortOrder(keywordInfo.sortOrder).name}\r\n            </Badge>\r\n            <br />\r\n         <span>{keywordInfo.keywordDescription !== null ? keywordInfo.keywordDescription : \"No description provided.\"}</span>\r\n      </div>);\r\n      this.setState({ keywordDetailModalTitle: title, keywordDetailModalBody: body, showKeywordDetailModal: !this.state.showKeywordDetailModal });\r\n   }\r\n\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n         {this.buildDisplayText()}\r\n         <BaseModal\r\n            openStatus={this.state.showKeywordOverviewModal}\r\n            title={this.state.keywordOverviewModalTitle}\r\n            body={this.state.keywordOverviewModalBody}\r\n            toggle={() => this.setState(\r\n               {\r\n                  showKeywordOverviewModal: !this.state.showKeywordOverviewModal\r\n               })}\r\n            size='lg'\r\n         />\r\n         <BaseModal\r\n            openStatus={this.state.showKeywordDetailModal}\r\n            title={this.state.keywordDetailModalTitle}\r\n            body={this.state.keywordDetailModalBody}\r\n            toggle={() => this.setState(\r\n               {\r\n                  showKeywordDetailModal: !this.state.showKeywordDetailModal\r\n               })}\r\n            size='lg'\r\n         />\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   keywords: state.keywords.items,\r\n   keywordsLoading: state.keywords.loading,\r\n   keywordError: state.keywords.error,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Keywords);","import React, { Component } from 'react';\r\nimport {\r\n   Button,\r\n   Badge,\r\n   ListGroupItem,\r\n   ListGroup,\r\n} from 'reactstrap';\r\n\r\nimport BaseModal from './AdditionalDataModal';\r\nimport { connect } from 'react-redux'\r\nimport './App.css';\r\n\r\nimport { NBSP } from './helper'\r\n\r\nfunction getOrgType(shortOrgType) {\r\n   if (shortOrgType === \"IO\") {\r\n      return { name: \"Institution\", color: \"primary\" }\r\n   }\r\n   if (shortOrgType === \"CY\") {\r\n      return { name: \"City\", color: \"secondary\" }\r\n   }\r\n   if (shortOrgType === \"CO\") {\r\n      return { name: \"County\", color: \"success\" }\r\n   }\r\n   if (shortOrgType === \"NG\") {\r\n      return { name: \"NGO\", color: \"warning\" }\r\n   }\r\n   if (shortOrgType === \"RA\") {\r\n      return { name: \"Regional Agency\", color: \"info\" }\r\n   }\r\n}\r\n\r\nclass Organizations extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         showOrganizationOverviewModal: false,\r\n         organizationOverviewModalTitle: 'User Organizations',\r\n         organizationOverviewModalBody: [],\r\n\r\n         showOrganizationDetailModal: false,\r\n         organizationDetailModalTitle: 'User Organizations',\r\n         organizationDetailModalBody: [],\r\n      };\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.setState({ organizationOverviewModalBody: this.buildOrganizationOverviewModalBody() })\r\n      // this.buildDisplayText();\r\n   }\r\n\r\n   buildOrganizationOverviewModalBody = () => {\r\n      let modalBody = [];\r\n      const organizationIDs = this.props.items;\r\n      organizationIDs.map(\r\n         organizationID => (\r\n            modalBody.push(\r\n               <ListGroupItem\r\n                  key={organizationID}\r\n                  tag=\"a\"\r\n                  onClick={() => this.showOrgExtendedData(organizationID)}\r\n                  href=\"#0\"\r\n                  action\r\n               >\r\n                  {this.props.orgs[organizationID].orgNameUnique}\r\n               </ListGroupItem>)))\r\n      modalBody = <ListGroup>{modalBody}</ListGroup>\r\n      return modalBody;\r\n   }\r\n\r\n   buildDisplayText = () => {\r\n      let displayText = ''\r\n      const organizationIDs = this.props.items;\r\n      // console.log(this.props.orgs)\r\n\r\n      organizationIDs.map(organizationID => (\r\n         displayText += this.props.orgs[organizationID].orgNameUnique + \", \"));\r\n      displayText = displayText.substring(0, displayText.length - 2)\r\n      if (displayText.length > this.props.displayLength)\r\n         displayText = displayText.substring(0, this.props.displayLength) + \"...\"\r\n      if (displayText.length > 0)\r\n         displayText =\r\n            <a\r\n               href=\"#0\"\r\n               key={organizationIDs}\r\n               onClick={\r\n                  () => this.setState(\r\n                     {\r\n                        showOrganizationOverviewModal: !this.state.showOrganizationOverviewModal\r\n                     })\r\n               }\r\n            >\r\n               {displayText}\r\n            </a>\r\n      else\r\n         displayText = \"No Organizations\"\r\n      return displayText;\r\n   }\r\n\r\n   showOrgExtendedData(orgID) {\r\n      let orgInfo = this.props.orgs[orgID];\r\n      let title = \r\n         <div>\r\n            {this.props.orgs[orgID].orgNameUnique}\r\n            {NBSP}\r\n            <Badge color={getOrgType(orgInfo.orgType).color}>\r\n            {getOrgType(orgInfo.orgType).name}\r\n            </Badge>\r\n         </div>\r\n\r\n      let body = orgInfo.website !== null ? (\r\n         <Button outline color=\"primary\" size=\"sm\" href={orgInfo.website} target=\"_blank\" rel=\"noopener noreferrer\">Visit Website</Button>\r\n      ) : \"No website provided\";\r\n      this.setState({ organizationDetailModalTitle: title, organizationDetailModalBody: body, showOrganizationDetailModal: !this.state.showOrganizationDetailModal });\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            {this.buildDisplayText()}\r\n            <BaseModal\r\n               openStatus={this.state.showOrganizationOverviewModal}\r\n               title={this.state.organizationOverviewModalTitle}\r\n               body={this.state.organizationOverviewModalBody}\r\n               toggle={() => this.setState(\r\n                  {\r\n                     showOrganizationOverviewModal: !this.state.showOrganizationOverviewModal\r\n                  })}\r\n               size='lg'\r\n            />\r\n            <BaseModal\r\n               openStatus={this.state.showOrganizationDetailModal}\r\n               title={this.state.organizationDetailModalTitle}\r\n               body={this.state.organizationDetailModalBody}\r\n               toggle={() => this.setState(\r\n                  {\r\n                     showOrganizationDetailModal: !this.state.showOrganizationDetailModal\r\n                  })}\r\n               size='lg'\r\n            />\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   orgs: state.orgs.items,\r\n   orgsLoading: state.orgs.loading,\r\n   orgError: state.orgs.error,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Organizations);","import React, { Component } from 'react';\r\nimport {\r\n   Button,\r\n   Badge,\r\n} from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faInfo } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport UserDetailModal from './AdditionalDataModal';\r\nimport './App.css';\r\n\r\nimport { NBSP } from './helper'\r\n\r\nlibrary.add(faInfo);\r\n\r\n\r\nfunction getUserTypes(shortUserType) {\r\n   switch (shortUserType) {\r\n      case \"US\":\r\n         return { name: \"University Faculty/Staff\", color: \"primary\" };\r\n      case \"CS\":\r\n         return { name: \"City Staff\", color: \"secondary\" };\r\n      case \"CO\":\r\n         return { name: \"County Staff\", color: \"success\" }\r\n      case \"NS\":\r\n         return { name: \"NGO Staff\", color: \"danger\" }\r\n      case \"RS\":\r\n         return { name: \"Regional Staff\", color: \"warning\" }\r\n      default:\r\n         return { name: \"Error\", color: \"dark\" }\r\n   }\r\n}\r\n\r\nclass UserDetail extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         showUserDetails: false,\r\n         userDetailModalTitle: '',\r\n         userDetailModalBody: '',\r\n      }\r\n   }\r\n\r\n   showUserDetailModal = () => {\r\n      let user = this.props.user\r\n      let title = <div>About <b>{user.firstName} {user.lastName}</b></div>;\r\n      let body = <div>\r\n         <Badge color={getUserTypes(user.userType).color}>{getUserTypes(user.userType).name}</Badge><br />\r\n         <b>Email: </b><a href={\"mailto:\"+user.emailAddress}>{user.emailAddress}</a><br />\r\n         {user.website ? <div><b>Website: </b>{NBSP}<a href={user.website} target=\"_blank\" rel=\"noopener noreferrer\">{user.website}</a></div> : \"\"}\r\n         {user.jobTitle ? <div><b>Job Title: </b>{NBSP}{user.jobTitle}</div> : \"\"}\r\n         {user.description ? <div><b>About: </b>{NBSP}{user.description.split(\"\\n\").map((i, key) => {\r\n            return <div key={key}>{i}< br /></div>;\r\n         })}</div> : \"\"}\r\n      </div>\r\n      this.setState({userDetailModalTitle: title, userDetailModalBody: body, showUserDetails: true})\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <Button onClick={() => this.showUserDetailModal()}><FontAwesomeIcon icon=\"info\" />{NBSP}More Information</Button>\r\n            <UserDetailModal\r\n               openStatus={this.state.showUserDetails}\r\n               title={this.state.userDetailModalTitle}\r\n               body={this.state.userDetailModalBody}\r\n               toggle={() => this.setState({ showUserDetails: !this.state.showUserDetails})}\r\n               size={'lg'}\r\n            />\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default UserDetail","import React, { Component } from 'react';\r\nimport AsyncSelect from 'react-select/async';\r\nimport axios from \"axios\";\r\nimport {\r\n   Col, Form,\r\n   FormGroup, Label,\r\n   Button, FormText,\r\n} from 'reactstrap';\r\nimport './Modal.css';\r\n\r\n\r\nasync function getKeywords(type, sortOrder) {\r\n   try {\r\n      return await axios.get('api/v1/keywords/?format=json&keywordType=' + type + '&sortOrder=' + sortOrder)\r\n   } catch (error) {\r\n      console.error(error)\r\n   }\r\n}\r\n\r\nasync function parseKeywordData(keywordType) {\r\n   const keywordLow = await getKeywords(keywordType, 'LS');\r\n   const keywordMedium = await getKeywords(keywordType, 'MS');\r\n   const keywordHigh = await getKeywords(keywordType, 'HS');\r\n\r\n   if (keywordLow.data && keywordMedium.data && keywordHigh.data) {\r\n      let keywordLowNormalized = keywordLow.data.map(keyword => ({\r\n         label: keyword.keywordName,\r\n         value: keyword.id\r\n      }));\r\n      let keywordMediumNormalized = keywordMedium.data.map(keyword => ({\r\n         label: keyword.keywordName,\r\n         value: keyword.id\r\n      }));\r\n      let keywordHighNormalized = keywordHigh.data.map(keyword => ({\r\n         label: keyword.keywordName,\r\n         value: keyword.id\r\n      }));\r\n      let keywordOptionData =\r\n         [\r\n            {\r\n               label: 'High Level Keywords',\r\n               options: keywordHighNormalized,\r\n            },\r\n            {\r\n               label: 'Medium Level Keywords',\r\n               options: keywordMediumNormalized,\r\n            },\r\n            {\r\n               label: 'Low Level Keywords',\r\n               options: keywordLowNormalized,\r\n            },\r\n         ]\r\n      return keywordOptionData;\r\n   }\r\n}\r\n\r\n\r\nexport default class memberSearchModal extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         queryData: this.props.selectedQuery,\r\n         activityKeywords: [],\r\n\r\n         topicalKeywords: [],\r\n\r\n         selectedUniversities: [],\r\n         validate: {\r\n            emailState: '',\r\n         },\r\n         selectedOption: null,\r\n         modal: false\r\n      }\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n   }\r\n\r\n   getUnivertisyTypes = () => {\r\n      const newRequest = axios.get('/api/v1/orgs/?format=json&orgType=IO')\r\n\r\n      if (newRequest) {\r\n         return newRequest.then(response => {\r\n            return response.data.map(keyword => ({\r\n               label: keyword.orgName + (isNaN(keyword.department) ? \" \" + keyword.department : \"\"),\r\n               value: keyword.id\r\n            }))\r\n         })\r\n      }\r\n   }\r\n\r\n   handleChange = (e) => {\r\n      let { name, value } = e.target;\r\n      if (e.target.type === \"checkbox\") {\r\n         value = e.target.checked;\r\n      }\r\n      const queryData = { ...this.state.queryData, [name]: value };\r\n      this.setState({ queryData });\r\n   };\r\n\r\n   handleSubmit(syntheticEvent) {\r\n      syntheticEvent.preventDefault();\r\n      this.props.submitHandler(this.state.queryData);\r\n\r\n   }\r\n\r\n   render() {\r\n      const { submitHandler } = this.props;\r\n\r\n      return (\r\n         <Form onSubmit={this.handleSubmit}>\r\n            <Col>\r\n               <FormGroup>\r\n                  <Label>University Selection</Label>\r\n                  <AsyncSelect\r\n                     ref=\"universitySelection\"\r\n                     name=\"universitySelection\"\r\n                     cacheOptions\r\n                     defaultOptions\r\n                     value={this.state.queryData.selectedUniversities}\r\n                     loadOptions={this.getUnivertisyTypes}\r\n                     onChange={(val) => this.handleChange({ target: { name: 'selectedUniversities', value: val}})}\r\n                     isMulti={true}\r\n                     isSearchable={false}\r\n                     autoBlur={false}\r\n                     closeOnSelect={false}\r\n                     closeMenuOnSelect={false}\r\n                  />\r\n               </FormGroup>\r\n\r\n               <FormGroup>\r\n                  <Label>Activity Keywords Selection</Label>\r\n                  <AsyncSelect\r\n                     ref=\"activityKeywords\"\r\n                     cacheOptions\r\n                     defaultOptions\r\n                     value={this.state.queryData.activityKeywords}\r\n                     loadOptions={() => parseKeywordData('AK')}\r\n                     onChange={(val) => this.handleChange({ target: { name: 'activityKeywords', value: val } })}\r\n                     isMulti={true}\r\n                     isSearchable={false}\r\n                     autoBlur={false}\r\n                     closeOnSelect={false}\r\n                     closeMenuOnSelect={false}\r\n                  />\r\n                  <FormText>You can leave this blank to select all activity keywords.</FormText>\r\n               </FormGroup>\r\n\r\n               <FormGroup>\r\n                  <Label>Topical Keywords Selection</Label>\r\n                  <AsyncSelect\r\n                     ref=\"topicalKeywordSelection\"\r\n                     cacheOptions\r\n                     defaultOptions\r\n                     value={this.state.queryData.topicalKeywords}\r\n                     loadOptions={() => parseKeywordData('TK')}\r\n                     onChange={(val) => this.handleChange({ target: { name: 'topicalKeywords', value: val } })}\r\n                     isMulti={true}\r\n                     isSearchable={false}\r\n                     autoBlur={false}\r\n                     closeOnSelect={false}\r\n                     closeMenuOnSelect={false}\r\n                  />\r\n                  <FormText>You can leave this blank to select all topical keywords.</FormText>\r\n               </FormGroup>\r\n               <Button color=\"success\">Run Query</Button>\r\n            </Col>\r\n         </Form>\r\n      );\r\n   }\r\n}","export const Actions = {\r\n   TOGGLE_DEV_MODE: 'TOGGLE_DEV_MODE',\r\n   TOGGLE_NAV_BAR: 'TOGGLE_NAV_BAR',\r\n\r\n   TOGGLE_SEARCH_FOR_COLLABORATOR: 'TOGGLE_SEARCH_FOR_COLLABORATOR',\r\n}\r\n\r\nexport const toggleDevMode = () => ({\r\n   type: Actions.TOGGLE_DEV_MODE\r\n});\r\n\r\nexport const toggleNavBar = () => ({\r\n   type: Actions.TOGGLE_NAV_BAR\r\n});\r\n\r\nexport const toggleSearchForCollaborator = () => ({\r\n   type: Actions.TOGGLE_SEARCH_FOR_COLLABORATOR\r\n})","\r\nimport axios from \"axios\";\r\n\r\nexport const Actions = {\r\n   FETCH_COLLABORATORS_BEGIN: 'FETCH_COLLABORATORS_BEGIN',\r\n   FETCH_COLLABORATORS_SUCCESS: 'FETCH_COLLABORATORS_SUCCESS',\r\n   FETCH_COLLABORATORS_FAILURE: 'FETCH_COLLABORATORS_FAILURE',\r\n   SET_QUERY_STATEMENT: 'SET_QUERY_STATEMENT',\r\n   GET_URL: 'GET_URL'\r\n}\r\n\r\nexport const fetchCollaboratorsBegin = () => ({\r\n   type: Actions.FETCH_COLLABORATORS_BEGIN\r\n});\r\n\r\nexport const fetchCollaboratorsSuccess = (collaborators) => ({\r\n   type: Actions.FETCH_COLLABORATORS_SUCCESS,\r\n   payload: { collaborators }\r\n})\r\n\r\nexport const fetchCollaboratorsFailure = (error) => ({\r\n   type: Actions.FETCH_COLLABORATORS_FAILURE,\r\n   payload: { error }\r\n})\r\n\r\nexport const getURL = (URL) => ({\r\n   type: Actions.GET_URL,\r\n   payload: { URL }\r\n})\r\n\r\n// export function fetchCollaborators(url) {\r\n//    return dispatch => {\r\n//       dispatch(fetchCollaboratorsBegin());\r\n//       return axios.get(url)\r\n//          .then(response => dispatch(fetchCollaboratorsSuccess(response.data)))\r\n//          .catch(error => dispatch(fetchCollaboratorsFailure(error)));\r\n//    }\r\n// }\r\n\r\nexport const fetchCollaborators = (url) => {\r\n   return dispatch => {\r\n      dispatch(fetchCollaboratorsBegin());\r\n\r\n      axios.get(url)\r\n      .then (res => {dispatch(fetchCollaboratorsSuccess(res.data));})\r\n      .catch(err => {dispatch(fetchCollaboratorsFailure(err.message));});\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Jumbotron,\r\n} from 'reactstrap';\r\n\r\nimport SearchForCollaboratorForm from './searchForCollaboratorForm';\r\nimport { connect } from 'react-redux'\r\nimport { toggleSearchForCollaborator } from './actions/menuActions'\r\nimport { fetchCollaborators } from './actions/searchForCollaboratorActions'\r\nimport { withRouter } from \"react-router\";\r\nimport './App.css';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nconst queryString = require('query-string');\r\n\r\n\r\nfunction buildURL(item) {\r\n   let org = item.selectedUniversities;\r\n   let activityKeywords = item.activityKeywords;\r\n   let topicalKeywords = item.topicalKeywords;\r\n   var url = \"/api/v1/users/?format=json\";\r\n   if (org) {\r\n      for (let i = 0; i < org.length; i++) {\r\n         url += '&organization=' + org[i].value;\r\n      }\r\n   }\r\n   if (activityKeywords) {\r\n      for (let i = 0; i < activityKeywords.length; i++) {\r\n         url += '&keywords=' + activityKeywords[i].value;\r\n      }\r\n   }\r\n   if (topicalKeywords) {\r\n      for (let i = 0; i < topicalKeywords.length; i++) {\r\n         url += '&keywords=' + topicalKeywords[i].value;\r\n      }\r\n   }\r\n   return url;\r\n\r\n}\r\n\r\nfunction buildQueryString(item) {\r\n   let org = item.selectedUniversities;\r\n   let activityKeywords = item.activityKeywords;\r\n   let topicalKeywords = item.topicalKeywords;\r\n   var params = \"\"\r\n   if (org) {\r\n      for (let i = 0; i < org.length; i++) {\r\n         params += 'org=' + org[i].value + '&';\r\n      }\r\n   }\r\n   if (activityKeywords) {\r\n      for (let i = 0; i < activityKeywords.length; i++) {\r\n         params += 'keyA=' + activityKeywords[i].value + '&';\r\n      }\r\n   }\r\n   if (topicalKeywords) {\r\n      for (let i = 0; i < topicalKeywords.length; i++) {\r\n         params += 'keyT=' + topicalKeywords[i].value + '&';\r\n      }\r\n   }\r\n   params = params.substring(0, params.length - 1)\r\n   return params;\r\n}\r\n\r\nclass SearchForCollaborator extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         'selectedQueryStatements': {\r\n            activityKeywords: [],\r\n\r\n            topicalKeywords: [],\r\n\r\n            selectedUniversities: [],\r\n         },\r\n      };\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.readParams = this.readParams.bind(this);\r\n\r\n   }\r\n\r\n\r\n   componentDidMount() {\r\n      this.readParams()\r\n   }\r\n\r\n   readParams() {\r\n      let orgsA = [];\r\n      let aKey = [];\r\n      let tKey = [];\r\n      const parsed = queryString.parse(this.props.location.search);\r\n      console.log(parsed.keyA);\r\n      // if (parsed.org) {\r\n      //    orgsA.push({ label: this.props.orgs[orgID].orgNameUnique, id: orgID})\r\n      // }\r\n      if (parsed.keyA) {\r\n         parsed.keyA.map(keyword => console.log(keyword))\r\n      }\r\n      // if (parsed.org) {\r\n      //    // parsed.org.map(orgID => orgsA.push({ label: this.props.orgsA[orgID].orgNameUnique, id: orgID}))\r\n      //    // parsed.org.map(orgID => console.log(orgID));\r\n      // }\r\n      // if (parsed.keyT) {\r\n      //    parsed.keyT.map(keyword => console.log(keyword))\r\n      // }\r\n   }\r\n\r\n   handleSubmit = (item) => {\r\n      // item.preventDefault();\r\n      // console.log(item);\r\n      // console.log(item.target.universitySelection.value)\r\n      this.setState({ selectedQueryStatements: item });\r\n      // item.preventDefault();\r\n      this.props.history.push(`?${buildQueryString(item)}`);\r\n      // buildURL(item);\r\n      this.props.fetchCollaborators(buildURL(item));\r\n      // this.props.toggleSearchForCollaborator()\r\n   }\r\n\r\n   render() {\r\n      const { match, location, history } = this.props;\r\n      return (\r\n         <>\r\n            <Jumbotron fluid>\r\n               <Container fluid>\r\n                  <h1 className=\"display-3\">Looking for a Collaborator?</h1>\r\n                  <p className=\"lead\">Use the form below to query potential collaborators.</p>\r\n                  <hr className=\"my-2\" />\r\n                  <SearchForCollaboratorForm \r\n                     selectedQuery={this.state.selectedQueryStatements}\r\n                     submitHandler={this.handleSubmit}/>\r\n               </Container>\r\n            </Jumbotron>\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   nav: state.nav,\r\n   orgs: state.orgs.items,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   toggleSearchForCollaborator,\r\n   fetchCollaborators,\r\n};\r\n\r\n// function mapDispatchToProps(dispatch) {\r\n//    return bindActionCreators({ toggleSearchForCollaborator, fetchCollaborators}, dispatch)\r\n// }\r\n\r\nSearchForCollaborator = withRouter(SearchForCollaborator);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForCollaborator);","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Table,\r\n   Spinner,\r\n} from 'reactstrap';\r\nimport PaginationWrapper from './Pagination'\r\nimport { connect } from 'react-redux'\r\nimport {fetchKeywords} from './actions/keywordActions'\r\nimport {fetchOrganizations} from './actions/organizationActions'\r\nimport Keyword from './Keywords'\r\nimport Organizations from './Organizations'\r\nimport UserDetail from './User'\r\nimport SearchForCollaborator from './SearchForCollaborator'\r\nimport './App.css';\r\n\r\nclass TableView extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         pageItems: [],\r\n         pageSize: 30,\r\n      };\r\n      this.onChangePage = this.onChangePage.bind(this);\r\n   }\r\n  \r\n\r\n   onChangePage(pageOfItems) {\r\n      this.setState({ pageItems: pageOfItems })\r\n   }\r\n\r\n   renderDisplayUserItems = () => {\r\n      const items = this.state.pageItems;\r\n      let renderItems = \"\"\r\n      renderItems = items.map(item => (\r\n         <tr key={item.id}>\r\n            <th scope=\"row\">{item.firstName} {item.lastName}</th>\r\n            <td>{!this.props.orgsLoading || this.props.orgs === [] ? <Organizations items={item.organization} displayLength={20} /> : <Spinner color=\"primary\" />}</td>\r\n            <td><a href={'mailto:' + item.emailAddress}>{item.emailAddress}</a></td>\r\n            <td>{!this.props.keywordsLoading || this.props.keywords === [] ? <Keyword items={item.keywords} displayLength={75}/> : <Spinner color=\"primary\" />}</td>\r\n            <td><UserDetail user={item}/></td>\r\n         </tr>\r\n      ));\r\n      return renderItems;\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n         <SearchForCollaborator />\r\n         <Container fluid>\r\n            <Table hover responsive>\r\n               <thead>\r\n                  <tr>\r\n                     <th>Name</th>\r\n                     <th>Organization</th>\r\n                     <th>Email Address</th>\r\n                     <th>Keywords</th>\r\n                     <th>More Information</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {this.renderDisplayUserItems()}\r\n               </tbody>\r\n            </Table>\r\n            <PaginationWrapper pageSize={this.state.pageSize} items={this.props.collaborators} onChangePage={this.onChangePage} />\r\n         </Container>\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   keywords: state.keywords.items,\r\n   keywordsLoading: state.keywords.loading,\r\n   keywordError: state.keywords.error,\r\n\r\n   orgs: state.orgs.items,\r\n   orgsLoading: state.orgs.loading,\r\n   orgError: state.orgs.error,\r\n\r\n   collaborators: state.collaborators.items,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   fetchKeywords,\r\n   fetchOrganizations\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableView);","import React, { Component } from 'react';\r\nimport {\r\n   Button,\r\n   Collapse,\r\n   Navbar,\r\n   NavbarToggler,\r\n   NavbarBrand,\r\n   Nav,\r\n   NavItem,\r\n   NavLink,\r\n   } from 'reactstrap';\r\nimport './App.css';\r\nimport { connect } from 'react-redux';\r\nimport { toggleNavBar, toggleDevMode, toggleSearchForCollaborator } from './actions/menuActions'\r\nimport SearchForCollaborator from './SearchForCollaborator'\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\n\r\nclass Navigation extends Component {\r\n\r\n   render() {\r\n      const {nav, settings} = this.props;\r\n      return (\r\n\r\n         <Navbar color=\"light\" light expand=\"md\">\r\n            <NavbarBrand tag={RRNavLink} exact to=\"/\">{settings.siteHeading}</NavbarBrand>\r\n            <NavbarToggler onClick={() => this.props.toggleNavBar()} />\r\n            <Collapse isOpen={nav.navOpen} navbar>\r\n               <Nav className=\"ml-auto\" navbar>\r\n                  <NavItem>\r\n                     <NavLink tag={RRNavLink} exact to=\"/collaborator\" activeClassName=\"active\">Search for a Collaborator</NavLink>\r\n                     {/* <SearchForCollaborator /> */}\r\n                  </NavItem>\r\n\r\n                  {settings.commitBranch === \"dev\" && nav.devModeOpen === false ? (\r\n                     <NavItem>\r\n                        <Button color=\"warning\" onClick={() => this.props.toggleDevMode()}>Open  development information</Button>\r\n                     </NavItem>\r\n                  ) : null}\r\n                  <NavItem>\r\n                  </NavItem>\r\n               </Nav>\r\n            </Collapse>\r\n         </Navbar>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   nav: state.nav,\r\n   settings: state.settings,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   toggleNavBar,\r\n   toggleDevMode,\r\n   toggleSearchForCollaborator\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation)","import React, { Component } from 'react';\r\nimport {\r\n   Alert,\r\n} from 'reactstrap';\r\nimport './App.css';\r\nimport { connect } from 'react-redux';\r\nimport {toggleDevMode} from './actions/menuActions'\r\n\r\nclass DebugMessage extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n         navIsOpen: false,\r\n         devModeOpen: true,\r\n      };\r\n   }\r\n\r\n   render() {\r\n      const { nav, settings } = this.props;\r\n      return (\r\n         <>\r\n         {settings.commitBranch === \"dev\" ? (\r\n               <Alert color=\"light\" isOpen={nav.devModeOpen} toggle={() => this.props.toggleDevMode()}>\r\n                  <h4 className=\"alert-heading\">Development Mode</h4>\r\n                  <p>\r\n                     The 4C database query utility is currently being <b>developed</b>. To view the repository, please visit: <a href=\"https://github.com/dgaiero/c4-website\">https://github.com/dgaiero/c4-website</a>\r\n                  </p>\r\n                  <p>\r\n                     Directory information contained on this website may be falsified while the site is under development.\r\n                  </p>\r\n                  <hr />\r\n                  <p className=\"mb-0\">\r\n                     The current running commit has a message of: <em>{settings.commitMessage}</em>< br />\r\n                     When providing support or feedback, please provide the following version information:< br />\r\n                     <code>{settings.commitBranch}/{settings.commitHash}</code>< br />\r\n                     <a href={'https://github.com/dgaiero/c4-website/tree/' + settings.commitHash} target=\"_blank\" rel=\"noopener noreferrer\">Open in Remote</a>\r\n                  </p>\r\n               </Alert>\r\n            ) : null}\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   nav: state.nav,\r\n   settings: state.settings,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   toggleDevMode\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DebugMessage);","import axios from 'axios';\r\n\r\nexport const Actions = {\r\n   FETCH_SETTINGS_BEGIN: 'FETCH_SETTINGS_BEGIN',\r\n   FETCH_SETTINGS_SUCCESS: 'FETCH_SETTINGS_SUCCESS',\r\n   FETCH_SETTINGS_FAILURE: 'FETCH_SETTINGS_FAILURE',\r\n}\r\n\r\nexport const fetchSettingsBegin = () => ({\r\n   type: Actions.FETCH_SETTINGS_BEGIN\r\n});\r\n\r\nexport const fetchSettingsSuccess = (settings) => ({\r\n   \r\n   type: Actions.FETCH_SETTINGS_SUCCESS,\r\n   payload: {settings}\r\n})\r\n\r\nexport const fetchSettingsFailure = (error) => ({\r\n   type: Actions.FETCH_SETTINGS_FAILURE,\r\n   payload: { error }\r\n})\r\n\r\nexport function fetchSettings() {\r\n   console.log(\"FETCHED\")\r\n   return dispatch => {\r\n      dispatch(fetchSettingsBegin());\r\n      return axios.get('api/v1/frontendParameters/1/?format=json')\r\n         .then(response => {dispatch(fetchSettingsSuccess(response.data))})\r\n         .catch(error => dispatch(fetchSettingsFailure(error)));\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Button,\r\n   Jumbotron,\r\n} from 'reactstrap';\r\nimport './App.css';\r\nimport { connect } from 'react-redux';\r\n\r\nclass WelcomeJumbotron extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n         navIsOpen: false,\r\n         devModeOpen: true,\r\n      };\r\n   }\r\n   render() {\r\n      const { settings } = this.props;\r\n      return (\r\n\r\n         <Jumbotron fluid>\r\n            <Container fluid>\r\n               <h1 className=\"display-3\">{settings.frontHeading}</h1>\r\n               <p className=\"lead\">{settings.frontMessage}</p>\r\n               <hr className=\"my-2\" />\r\n               <p>{settings.frontMessageSubText}</p>\r\n               <p className=\"lead\">\r\n                  <Button href={'mailto:' + settings.additionEmailAddress} color=\"primary\">Request Addition to Database</Button>\r\n               </p>\r\n            </Container>\r\n         </Jumbotron>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   settings: state.settings,\r\n})\r\n\r\nexport default connect(mapStateToProps)(WelcomeJumbotron)","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Button,\r\n   Jumbotron,\r\n   Row,\r\n   Col,\r\n   Card,\r\n   CardImg,\r\n   CardImgOverlay,\r\n   CardHeader,\r\n   CardFooter,\r\n   CardBody,\r\n   CardTitle,\r\n   CardText,\r\n} from 'reactstrap';\r\nimport './App.css';\r\nimport './indexCards.css'\r\nimport { connect } from 'react-redux';\r\nimport WelcomeJumbotron from './WelcomeJumbotron';\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst UnderConstructionCard = () => {\r\n   return (\r\n      <div style={{ border: '1px solid rgb(33, 37, 41)', overflow: 'hidden', borderRadius: '.25rem' }}>\r\n         <Card className=\"cardHideOverflow\" >\r\n            <span className=\"newFeaturesBanner\"><b>New Features Coming Soon!</b></span>\r\n            <div className=\"underConstructionCardImage\">\r\n               <CardBody>\r\n                  <h5 className='cardTitle'>Under Construction</h5>\r\n                  <CardText>New features will be coming soon!</CardText>\r\n               </CardBody>\r\n               <CardFooter><Button color=\"secondary\" disabled>Button Coming Soon</Button></CardFooter>\r\n            </div>\r\n         </Card>\r\n      </div>\r\n   )\r\n}\r\n\r\nconst LookingForCollaboratorCard = () => {\r\n   return (\r\n      <div style={{ border: '1px solid rgb(33, 37, 41)', overflow: 'hidden', borderRadius: '.25rem' }}>\r\n         <Card className=\"cardHideOverflow\" >\r\n            <div className=\"lookingForCollaboratorCardImage\">\r\n               <CardBody>\r\n                  <h5 className='cardTitle'>Looking for a Collaborator?</h5>\r\n                  <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\r\n\r\n               </CardBody>\r\n               <CardFooter><Button color=\"secondary\" tag={RRNavLink} exact to=\"/collaborator\">Search For a Collaborator</Button></CardFooter>\r\n            </div>\r\n         </Card>\r\n      </div>\r\n   )\r\n}\r\n\r\nclass FrontPageCards extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n         navIsOpen: false,\r\n         devModeOpen: true,\r\n      };\r\n   }\r\n   render() {\r\n      return (\r\n         <>\r\n         <WelcomeJumbotron />\r\n            <Container>\r\n              <Row>\r\n                  <Col class=\"d-flex align-items-stretch\">\r\n                     <LookingForCollaboratorCard />\r\n                  </Col>\r\n                  <Col class=\"d-flex align-items-stretch\">\r\n                     <UnderConstructionCard />\r\n                  </Col>\r\n                  <Col class=\"d-flex align-items-stretch\">\r\n                     <UnderConstructionCard />\r\n                  </Col>\r\n               </Row>\r\n             </Container>\r\n             </>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   settings: state.settings,\r\n})\r\n\r\nexport default connect(mapStateToProps)(FrontPageCards)","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Fade,\r\n} from 'reactstrap';\r\n\r\nimport Loading from './Loading'\r\nimport './App.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport TableView from './TableView'\r\nimport Navigation from './Navigation'\r\nimport DebugMessage from './DebugMessage'\r\nimport { fetchSettings }from './actions/settingsActions'\r\nimport { fetchKeywords }from './actions/keywordActions'\r\nimport { fetchOrganizations }from './actions/organizationActions'\r\nimport { fetchCollaborators } from './actions/searchForCollaboratorActions'\r\nimport FrontPageCards from './indexPage';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { withRouter } from \"react-router\";\r\nimport StickyFooter from 'react-sticky-footer';\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = \"https://universities.centralcoastclimate.org\"\r\n\r\nclass RootContainer extends Component {\r\n\r\n   componentDidMount() {\r\n      this.props.fetchSettings();\r\n      this.props.fetchKeywords();\r\n      this.props.fetchOrganizations();\r\n      this.props.fetchCollaborators('/api/v1/users/?format=json');\r\n   }\r\n\r\n   calculateLoadingState(loader) {\r\n      let openStatus = []\r\n      loader.map(loadInfo => openStatus.push(loadInfo.condition, loadInfo.error !== null))\r\n      openStatus = openStatus.every(x => x === false);\r\n      return openStatus\r\n   }\r\n\r\n   render() {\r\n\r\n      let loader = [\r\n         \r\n         { friendlyName: 'Organizations', condition: this.props.orgs.loading, error: this.props.orgs.error },\r\n         { friendlyName: 'Users', condition: this.props.collaborators.loading, error: this.props.collaborators.error },\r\n         { friendlyName: 'Settings', condition: this.props.settings.loading, error: this.props.settings.error },\r\n      ]\r\n      loader.push({ friendlyName: 'Keywords', condition: this.props.keywords.loading, error: this.props.keywords.error })\r\n      let loadStatus = this.calculateLoadingState(loader);\r\n      return (\r\n         <main className=\"App content\">\r\n            <Loading body={loader} status={loadStatus} />\r\n                  <DebugMessage />\r\n                  <Navigation />\r\n                  <Route path=\"/\" exact component={FrontPageCards} />\r\n                  {/* <FrontPageCards /> */}\r\n                  <Route path=\"/collaborator\" component={TableView} />\r\n                  {/* <TableView /> */}\r\n         </main>\r\n      );\r\n   }\r\n}\r\n\r\n{/* <TransitionGroup>\r\n   <CSSTransition\r\n      key={location.key}\r\n      timeout={{ enter: 300, exit: 300 }}\r\n   >\r\n\r\n   </CSSTransition>\r\n</TransitionGroup> */}\r\n\r\nconst mapStateToProps = state => ({\r\n   settings: state.settings,\r\n   keywords: state.keywords,\r\n   orgs: state.orgs,\r\n   collaborators: state.collaborators,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   fetchSettings,\r\n   fetchKeywords,\r\n   fetchOrganizations,\r\n   fetchCollaborators,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RootContainer)","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport RootContainer from './RootContainer'; \r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nconst App = ({ store }) => (\r\n         <Provider store={store}>\r\n      <Router basename={'/c4-website'}>\r\n               <Route path=\"/:filter?\" component={RootContainer} />\r\n               {/* <Route path=\"/\" render={() => (<h1>404</h1>)} /> */}\r\n               {/* <RootContainer /> */}\r\n            </Router>\r\n         </Provider>\r\n      );\r\n\r\n\r\nApp.propTypes = {\r\n   store: PropTypes.object.isRequired\r\n}\r\n\r\nexport default App;","import React, { Component } from 'react';\nimport {\n   Container,\n} from 'reactstrap';\n\nimport './App.css';\n\nclass Footer extends Component {\n   render() {\n      return (\n         <footer className=\"footer mt-auto py-3\" style={{ backgroundColor: '#F8F9FA' }}>\n            <Container fluid className=\"clearfix\">\n               <span className=\"text-muted float-left\">Copyright {'\\u00A9'} 2019 Central Coast Climate Collaborative </span>\n               <a href=\"https://www.centralcoastclimate.org/\" className=\"float-right\" target=\"_blank\" rel=\"noopener noreferrer\">Visit main website</a>\n            </Container>\n         </footer>\n      )\n   }\n}\n\nexport default Footer","import { Actions } from '../actions/settingsActions'\r\n\r\nconst initialState = {\r\n   siteHeading: 'Loading...',\r\n   frontHeading: 'Loading...',\r\n   frontMessage: 'Loading...',\r\n   frontMessageSubText: 'Loading...',\r\n   additionEmailAddress: 'Loading...',\r\n   commitBranch: 'master',\r\n   commitHash: 'Loading...',\r\n   commitMessage: 'Loading...',\r\n   loading: true,\r\n   error: null,\r\n}\r\n\r\nexport default function settingsReducer(state = initialState, action) {\r\n   // console.log(action)\r\n   switch(action.type) {\r\n      case Actions.FETCH_SETTINGS_BEGIN:\r\n         console.log(\"BEGIN\")\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            error: null,\r\n         }\r\n      case Actions.FETCH_SETTINGS_SUCCESS:\r\n         console.log('SUCCESS')\r\n         console.log(action.payload)\r\n         return {\r\n            ...state,\r\n            ...action.payload.settings,\r\n            loading: false,\r\n         }\r\n      case Actions.FETCH_SETTINGS_FAILURE:\r\n         console.log(\"FAILURE\")\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload.error,\r\n            items: [],\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import {Actions} from '../actions/keywordActions'\r\n\r\nconst initialState = {\r\n   items: [],\r\n   loading: true,\r\n   error: null\r\n}\r\n\r\nexport default function keywordsReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case Actions.FETCH_KEYWORDS_BEGIN:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            error: null,\r\n         }\r\n      case Actions.FETCH_KEYWORDS_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            items: action.payload.keywords,\r\n         }\r\n      case Actions.FETCH_KEYWORDS_FAILURE:\r\n         console.log(action.payload.error);\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload.error,\r\n            items: [],\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import {Actions} from '../actions/organizationActions'\r\n\r\nconst initialState = {\r\n   items: [],\r\n   loading: true,\r\n   error: null\r\n}\r\n\r\nexport default function organizationsReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case Actions.FETCH_ORGANIZATIONS_BEGIN:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            error: null,\r\n         }\r\n      case Actions.FETCH_ORGANIZATIONS_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            items: action.payload.organizations,\r\n         }\r\n      case Actions.FETCH_ORGANIZATIONS_FAILURE:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload.error,\r\n            items: [],\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import {Actions} from '../actions/menuActions'\r\n\r\nconst initialState = {\r\n   searchForCollaborator: false,\r\n   devModeOpen: false,\r\n   navOpen: false,\r\n}\r\n\r\nexport default function menuReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case Actions.TOGGLE_SEARCH_FOR_COLLABORATOR:\r\n         return {\r\n            ...state,\r\n            searchForCollaborator: !state.searchForCollaborator,\r\n         }\r\n      case Actions.TOGGLE_DEV_MODE:\r\n         return {\r\n            ...state,\r\n            devModeOpen: !state.devModeOpen\r\n         };\r\n      case Actions.TOGGLE_NAV_BAR:\r\n         return {\r\n            ...state,\r\n            navOpen: !state.navOpen\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import { Actions } from '../actions/searchForCollaboratorActions'\r\n\r\nconst initialState = {\r\n   items: [],\r\n   loading: true,\r\n   error: null,\r\n   url: '',\r\n}\r\n\r\nexport default function collaboratorsReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case Actions.FETCH_COLLABORATORS_BEGIN:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            error: null,\r\n         }\r\n      case Actions.FETCH_COLLABORATORS_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            items: action.payload.collaborators,\r\n         }\r\n      case Actions.FETCH_COLLABORATORS_FAILURE:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload.error,\r\n            items: [],\r\n         }\r\n      case Actions.GET_URL:\r\n         return {\r\n            ...state,\r\n            url: action.payload.url,\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import {combineReducers} from 'redux'\r\n\r\nimport settings from './settingsReducer'\r\nimport keywords from './keywordReducer'\r\nimport orgs from './organizationReducer'\r\nimport nav from './menuReducer'\r\nimport collaborators from './searchForCollaboratorReducer'\r\n\r\nexport default combineReducers({\r\n   settings,\r\n   keywords,\r\n   orgs,\r\n   nav,\r\n   collaborators,\r\n\r\n});","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n   window.location.hostname === 'localhost' ||\n   // [::1] is the IPv6 localhost address.\n   window.location.hostname === '[::1]' ||\n   // 127.0.0.1/8 is considered localhost for IPv4.\n   window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n   )\n);\n\nexport default function register() {\n   if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n         // Our service worker won't work if PUBLIC_URL is on a different origin\n         // from what our page is served on. This might happen if a CDN is used to\n         // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n         return;\n      }\n\n      window.addEventListener('load', () => {\n         const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n         if (isLocalhost) {\n            // This is running on localhost. Lets check if a service worker still exists or not.\n            checkValidServiceWorker(swUrl);\n\n            // Add some additional logging to localhost, pointing developers to the\n            // service worker/PWA documentation.\n            navigator.serviceWorker.ready.then(() => {\n               console.log(\n                  'This web app is being served cache-first by a service ' +\n                  'worker. To learn more, visit https://goo.gl/SC7cgQ'\n               );\n            });\n         } else {\n            // Is not local host. Just register service worker\n            registerValidSW(swUrl);\n         }\n      });\n   }\n}\n\nfunction registerValidSW(swUrl) {\n   navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n         registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n               if (installingWorker.state === 'installed') {\n                  if (navigator.serviceWorker.controller) {\n                     // At this point, the old content will have been purged and\n                     // the fresh content will have been added to the cache.\n                     // It's the perfect time to display a \"New content is\n                     // available; please refresh.\" message in your web app.\n                     console.log('New content is available; please refresh.');\n                  } else {\n                     // At this point, everything has been precached.\n                     // It's the perfect time to display a\n                     // \"Content is cached for offline use.\" message.\n                     console.log('Content is cached for offline use.');\n                  }\n               }\n            };\n         };\n      })\n      .catch(error => {\n         console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n   // Check if the service worker can be found. If it can't reload the page.\n   fetch(swUrl)\n      .then(response => {\n         // Ensure service worker exists, and that we really are getting a JS file.\n         if (\n            response.status === 404 ||\n            response.headers.get('content-type').indexOf('javascript') === -1\n         ) {\n            // No service worker found. Probably a different app. Reload the page.\n            navigator.serviceWorker.ready.then(registration => {\n               registration.unregister().then(() => {\n                  window.location.reload();\n               });\n            });\n         } else {\n            // Service worker found. Proceed as normal.\n            registerValidSW(swUrl);\n         }\n      })\n      .catch(() => {\n         console.log(\n            'No internet connection found. App is running in offline mode.'\n         );\n      });\n}\n\nexport function unregister() {\n   if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n         registration.unregister();\n      });\n   }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport Footer from './Footer'\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './reducers/rootReducer'\nimport thunk from 'redux-thunk'; \n\nimport unregisterServiceWorker from './registerServiceWorker';\n\nconst createStoreWithMiddleware = applyMiddleware(thunk)(createStore);\nconst store = createStoreWithMiddleware(rootReducer);\n\nReactDOM.render(\n   [<App store={store} key={1} />, <Footer key=\"2\" />], document.getElementById('root'));\nunregisterServiceWorker();"],"sourceRoot":""}