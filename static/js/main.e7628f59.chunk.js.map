{"version":3,"sources":["AdditionalDataModal.js","LoadingModal.js","helper.js","Loading.js","Pagination.js","actions/keywordActions.js","actions/organizationActions.js","actions/collaborationsActions.js","Keywords.js","Organizations.js","User.js","copyQueryToClipboard.js","PasteQueryFromKeyboard.js","universityCollaborators/searchForUniversityForm.js","actions/menuActions.js","actions/searchForUnivCollaboratorActions.js","head.js","universityCollaborators/HowToSearchModal.js","universityCollaborators/searchForUniversity.js","loader.js","universityCollaborators/TableView.js","Navigation.js","DebugMessage.js","actions/settingsActions.js","WelcomeJumbotron.js","indexPage.js","ParseSaveQuery.js","404.js","ComingSoon.js","RootContainer.js","App.js","AppInfo.js","Footer.js","reducers/settingsReducer.js","reducers/keywordReducer.js","reducers/organizationReducer.js","reducers/menuReducer.js","reducers/collaborationsReducer.js","reducers/searchForUnivCollaboratorReducer.js","reducers/rootReducer.js","registerServiceWorker.js","index.js"],"names":["AdditionalDataModal","_this$props","this","props","openStatus","toggle","size","title","body","react_default","a","createElement","Modal","isOpen","centered","ModalHeader","ModalBody","ModalFooter","Button","color","onClick","Component","LoadingModal","toTitleCase","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","isEmpty","queryData","empty","activityKeywords","length","topicalKeywords","collaborations","selectedUniversities","NBSP","Loading","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","errorModalOpenToggle","setState","errorModalOpenFlag","state","status","errorModalTitle","errorModalBody","loadingItems","loadingStatus","render","setTimeout","bind","error","bodyText","entries","response","data","map","_ref","_ref2","slicedToArray","key","value","push","toString","_unused","friendlyName","condition","_this2","Spinner","href","showErrorInfo","buildErrorMessage","_this3","renderContainer","Fragment","AdditionalDataModal_AdditionalDataModal","LoadingModal_LoadingModal","loadInfo","loadingText","connect","settings","keywords","orgs","collaborators","PaginationWrapper","pager","items","setPage","initialPage","prevProps","prevState","page","pageSize","totalPages","getPager","pageOfItems","slice","startIndex","endIndex","onChangePage","totalItems","currentPage","startPage","endPage","Math","ceil","min","pages","toConsumableArray","Array","keys","i","Pagination","aria-label","PaginationItem","disabled","PaginationLink","first","previous","index","active","next","last","React","defaultProps","Actions","FETCH_KEYWORDS_BEGIN","FETCH_KEYWORDS_SUCCESS","FETCH_KEYWORDS_FAILURE","fetchKeywordsBegin","type","fetchKeywordsSuccess","payload","fetchKeywordsFailure","FETCH_ORGANIZATIONS_BEGIN","FETCH_ORGANIZATIONS_SUCCESS","FETCH_ORGANIZATIONS_FAILURE","fetchOrganizationsBegin","fetchOrganizationsSuccess","organizations","fetchOrganizationsFailure","FETCH_COLLABORATIONS_BEGIN","FETCH_COLLABORATIONS_SUCCESS","FETCH_COLLABORATIONS_FAILURE","fetchCollaborationsBegin","fetchCollaborationsSuccess","fetchCollaborationsFailure","getKeywordType","shortKeywordType","name","getKeywordSortOrder","shortKeywordSortOrder","Keywords","buildKeywordOverviewModalBody","modalBody","keywordID","ListGroupItem","tag","showKeywordExtendedData","action","keywordName","ListGroup","buildDisplayText","displayText","keywordIDs","substring","displayLength","showKeywordOverviewModal","keywordOverviewModalTitle","keywordOverviewModalBody","showKeywordDetailModal","keywordDetailModalTitle","keywordDetailModalBody","id","keywordInfo","Badge","keywordType","sortOrder","keywordDescription","keywordsLoading","loading","keywordError","getOrgType","shortOrgType","Organizations","buildOrganizationOverviewModalBody","organizationID","showOrgExtendedData","orgNameUnique","organizationIDs","showOrganizationOverviewModal","organizationOverviewModalTitle","organizationOverviewModalBody","showOrganizationDetailModal","organizationDetailModalTitle","organizationDetailModalBody","orgID","orgInfo","orgType","website","outline","target","rel","orgsLoading","orgError","getUserTypes","shortUserType","library","add","faInfo","UserDetail","showUserDetailModal","user","firstName","lastName","userType","obfuscate_default","email","emailAddress","jobTitle","description","split","userDetailModalTitle","userDetailModalBody","showUserDetails","base64","require","CopyQueryToClipboard","copyCode","copyURL","query","endpoint","protocol","window","location","host","encodedQuery","encode","URL","concat","InputGroup","Input","placeholder","InputGroupAddon","addonType","lib","text","onCopy","UncontrolledPopover","trigger","placement","PopoverHeader","PopoverBody","PasteQueryToClipboard","runQuery","newLocation","history","assertThisInitialized","handleChange","event","onChange","autoFocus","SearchForUniversityForm","getUnivertisyTypes","orgTypes","filter","org","includes","label","getCollaborationsTypes","collaboration","collaborationName","getKeywordTypes","keywordsFiltered","keyword","keywordLow","keywordMedium","keywordHigh","keywordLowNormalized","keywordMediumNormalized","options","e","_e$target","checked","_objectSpread","defineProperty","selectedQuery","validate","emailState","selectedOption","modal","dropdownOpen","copyToClipBoardToggle","pasteFromClipBoardToggle","handleSubmit","univOptions","aKeywords","tKeywords","syntheticEvent","preventDefault","submitHandler","Form","onSubmit","Row","Col","FormGroup","Label","react_select_browser_esm","ref","val","isMulti","autoBlur","closeOnSelect","closeMenuOnSelect","FormText","noGutters","style","display","Dropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","divider","copyQueryToClipboard_CopyQueryToClipboard","buildQueryString","PasteQueryFromKeyboard_PasteQueryToClipboard","withRouter","nav","TOGGLE_DEV_MODE","TOGGLE_NAV_BAR","TOGGLE_SEARCH_FOR_UNIV_COLLABORATOR","toggleDevMode","toggleSearchForUnivCollaborator","FETCH_COLLABORATORS_BEGIN","FETCH_COLLABORATORS_SUCCESS","FETCH_COLLABORATORS_FAILURE","SET_QUERY_STATEMENT","SET_URL","setQueryStatement","delimiter","appTitle","Title","Helmet","faLifeRing","HowToSearchModal","index_es","icon","Alert","react_router_dom","to","ListGroupItemHeading","ListGroupItemText","queryString","buildURL","item","url","params","SearchForCollaborator","selectedQueryStatements","fetchUnivCollaborators","readParams","initialLoad","orgsA","aKey","tKey","cKey","parsed","parse","search","keyA","isArray","keyID","keyT","clb","clbID","orgL","Jumbotron","fluid","Container","sm","order","offset","className","universityCollaborators_HowToSearchModal","searchForUniversityForm","mapDispatchToProps","dispatch","axios","get","then","res","catch","err","setURL","univCollaborators","Loader","pair","loader_objectSpread","values","loader","every","x","TableView","renderDisplayUserItems","pageItems","scope","src_Organizations","organization","src_Keywords","User","fetchKeywords","fetchOrganizations","fetchCollaborations","collaborationsLoading","collaborationsError","univCollaboratorsLoading","univCollaboratorsError","loadStatus","calculateLoadingState","src_Loading","searchForUniversity","Table","hover","responsive","src_Pagination","Navigation","Navbar","dark","expand","NavbarBrand","RRNavLink","exact","siteHeading","NavbarToggler","toggleNavBar","Collapse","navOpen","navbar","Nav","NavItem","NavLink","activeClassName","DebugMessage","navIsOpen","devModeOpen","commitBranch","commitMessage","commitHash","FETCH_SETTINGS_BEGIN","FETCH_SETTINGS_SUCCESS","FETCH_SETTINGS_FAILURE","fetchSettingsBegin","fetchSettingsSuccess","fetchSettingsFailure","WelcomeJumbotron","frontHeading","frontMessage","frontMessageSubText","additionEmailAddress","LookingForUnivCollaboratorCard","Card","CardBody","CardText","LookingFor4CCollaboratorCard","FrontPageCards","PasteQCode","src_WelcomeJumbotron","CardDeck","indexPage_LookingForUnivCollaboratorCard","indexPage_LookingFor4CCollaboratorCard","ParseSaveQuery","seconds","tick","timer","setInterval","clearInterval","match","pathname","decoded_query","decode","react_router","NotFound","ComingSoon","defaults","baseURL","RootContainer","fetchSettings","src_DebugMessage","src_Navigation","path","component","App","store","es","AppInfo","tab1Content","marginBottom","CardFooter","hash","tab2Content","licenseError","loadLicense","license","content","tab3Content","moduleLicenseError","loadModuleLicense","moduleLicense","tab4Content","CardColumns","CardImg","top","width","src","alt","loadVersionHash","commitError","activeTab","getCommitHash","getLicense","getModuleLicenses","sha","_this4","tab","_this5","pills","classnames","TabContent","TabPane","tabId","faInfoCircle","Footer","showAppInfoModal","backgroundColor","src_AppInfo","initialState","searchForCollaborator","combineReducers","arguments","undefined","settingsReducer_objectSpread","keywordReducer_objectSpread","organizationReducer_objectSpread","TOGGLE_SEARCH_FOR_COLLABORATOR","menuReducer_objectSpread","searchForUnivCollaboratorReducer_objectSpread","collaborationsReducer_objectSpread","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","applyMiddleware","thunk","createStore","createStoreWithMiddleware","rootReducer","ReactDOM","src_App_0","src_Footer","document","getElementById","process","origin","addEventListener","fetch","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e7628f59.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n   Button, Modal, ModalHeader, ModalBody, ModalFooter,\r\n} from 'reactstrap';\r\nimport './Modal.css';\r\n\r\nexport default class AdditionalDataModal extends Component {\r\n   \r\n   /* Passed in:\r\n      props:\r\n         - title\r\n         - body\r\n    */\r\n\r\n   render() {\r\n      const { openStatus, toggle, size, title, body } = this.props;\r\n      return (\r\n         <Modal isOpen={openStatus} toggle={toggle} centered size={size}>\r\n            <ModalHeader toggle={toggle}>{title}</ModalHeader>\r\n            <ModalBody>\r\n               {body}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" onClick={toggle}>Close</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      );\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n   Modal, ModalHeader, ModalBody,\r\n} from 'reactstrap';\r\nimport './Modal.css';\r\n\r\nexport default class LoadingModal extends Component {\r\n   \r\n   /* Passed in:\r\n      props:\r\n         - title\r\n         - body\r\n    */\r\n\r\n   render() {\r\n      const { openStatus, size } = this.props;\r\n      return (\r\n         <Modal isOpen={openStatus} centered size={size}>\r\n            <ModalHeader>{this.props.title}</ModalHeader>\r\n            <ModalBody>\r\n               {this.props.body}\r\n            </ModalBody>\r\n         </Modal>\r\n      );\r\n   }\r\n}","export function toTitleCase(str) {\r\n   return str.replace(\r\n      /\\w\\S*/g,\r\n      function (txt) {\r\n         return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n      }\r\n   );\r\n}\r\n\r\n\r\nexport const isEmpty = (queryData) => {\r\n   let empty = true;\r\n   if (queryData.activityKeywords.length !== 0) {\r\n      empty = false;\r\n   }\r\n   if (queryData.topicalKeywords.length !== 0) {\r\n      empty = false;\r\n   }\r\n   if (queryData.collaborations.length !== 0) {\r\n      empty = false;\r\n   }\r\n   if (queryData.selectedUniversities.length !== 0) {\r\n      empty = false;\r\n   }\r\n   return empty;\r\n}\r\n\r\nexport const NBSP = '\\u00A0'","import React, { Component } from 'react';\r\nimport {\r\n   Spinner,\r\n} from 'reactstrap';\r\nimport ErrorModal from './AdditionalDataModal';\r\nimport LoadingModal from './LoadingModal'\r\nimport './App.css';\r\nimport { connect } from 'react-redux'\r\nimport { toTitleCase } from './helper'\r\n\r\n\r\nclass Loading extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         status: false,\r\n         errorModalOpenFlag: false,\r\n         errorModalTitle: '',\r\n         errorModalBody: '',\r\n         loadingItems: {},\r\n         loadingStatus: false,\r\n         render: false,\r\n      }\r\n   }\r\n\r\n   componentDidMount() {\r\n      setTimeout(function () { //Start the timer\r\n         this.setState({ render: true }) //After 1 second, set render to true\r\n      }.bind(this), 1000)\r\n   }\r\n\r\n   buildErrorMessage(error) {\r\n      let bodyText = []\r\n      try {\r\n         const errorJSON = Object.entries(error.response.data)\r\n         errorJSON.map((([key, value]) => {\r\n            bodyText.push(<span key={key}><b>{toTitleCase(key)}</b>: {value.toString()}</span>)\r\n         }))\r\n      }\r\n      catch {\r\n         bodyText.push(<span key='UDEFERR'><b>Detail</b>: Undefined Error</span>)\r\n      }\r\n      return (bodyText)\r\n   }\r\n\r\n   loadingText(friendlyName, condition, error) {\r\n      let status = <Spinner color=\"primary\" size=\"sm\" />\r\n      if (error !== null) {\r\n         status = <a href=\"#0\" key=\"ERROR\" onClick={() => this.showErrorInfo(error.toString(), this.buildErrorMessage(error))}>Error</a>\r\n      }\r\n      else if (condition === false) {\r\n         status = 'done'\r\n      }\r\n\r\n      return (condition === false && error === null) ? null : <div key={friendlyName}>Loading {friendlyName}... {status}</div>\r\n\r\n   }\r\n\r\n   showErrorInfo(title, body) {\r\n      this.setState({ errorModalTitle: title, errorModalBody: body, errorModalOpenFlag: !this.state.errorModalOpenFlag });\r\n   }\r\n\r\n   errorModalOpenToggle = () => {\r\n      this.setState({ errorModalOpenFlag: !this.state.errorModalOpenFlag });\r\n   };\r\n\r\n\r\n   render() {\r\n      const { body, status } = this.props;\r\n         let renderContainer = false //By default don't render anything\r\n         if (this.state.render) {\r\n         renderContainer = (<>\r\n            <ErrorModal\r\n               openStatus={this.state.errorModalOpenFlag}\r\n               title={this.state.errorModalTitle}\r\n               body={this.state.errorModalBody}\r\n               toggle={this.errorModalOpenToggle}\r\n               size={'lg'}\r\n            />\r\n            <LoadingModal\r\n               openStatus={!status}\r\n               title={<div>Loading Components</div>}\r\n               body={body.map(loadInfo => this.loadingText(loadInfo.friendlyName, loadInfo.condition, loadInfo.error))}\r\n            />\r\n         </>)\r\n         }\r\n\r\n      return (\r\n         renderContainer //Render the dom elements, or, when this.state == false, nothing.\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   settings: state.settings,\r\n   keywords: state.keywords,\r\n   orgs: state.orgs,\r\n   collaborators: state.collaborators,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Loading)","/*\r\n * Pagination component modified from @cornflourblue on github\r\n * https://github.com/cornflourblue/react-pagination-example\r\n *\r\n * MIT License\r\n * \r\n * Copyright (c) 2017 Jason Watmore\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n * \r\n * The above copyright notice and this permission notice shall be included in \r\n * all copies or substantial portions of the Software.\r\n * \r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\r\n\r\nconst propTypes = {\r\n   items: PropTypes.array.isRequired,\r\n   onChangePage: PropTypes.func.isRequired,\r\n   initialPage: PropTypes.number,\r\n   pageSize: PropTypes.number\r\n}\r\n\r\nconst defaultProps = {\r\n   initialPage: 1,\r\n   pageSize: 30\r\n}\r\n\r\nclass PaginationWrapper extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { pager: {} };\r\n   }\r\n\r\n   componentDidMount() {\r\n      // set page if items array isn't empty\r\n      if (this.props.items && this.props.items.length) {\r\n         this.setPage(this.props.initialPage);\r\n      }\r\n   }\r\n\r\n   componentDidUpdate(prevProps, prevState) {\r\n      // reset page if items array has changed\r\n      if (this.props.items !== prevProps.items) {\r\n         this.setPage(this.props.initialPage);\r\n      }\r\n   }\r\n\r\n   setPage(page) {\r\n      var { items, pageSize } = this.props;\r\n      var pager = this.state.pager;\r\n\r\n      if (page < 1 || page > pager.totalPages) {\r\n         return;\r\n      }\r\n\r\n      // get new pager object for specified page\r\n      pager = this.getPager(items.length, page, pageSize);\r\n\r\n      // get new page of items from items array\r\n      var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\r\n\r\n      // update state\r\n      this.setState({ pager: pager });\r\n\r\n      // call change page function in parent component\r\n      this.props.onChangePage(pageOfItems);\r\n   }\r\n\r\n   getPager(totalItems, currentPage, pageSize) {\r\n      // default to first page\r\n      currentPage = currentPage || 1;\r\n\r\n      // default page size is 10\r\n      pageSize = pageSize || 10;\r\n\r\n      // calculate total pages\r\n      var totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n      var startPage, endPage;\r\n      if (totalPages <= 10) {\r\n         // less than 10 total pages so show all\r\n         startPage = 1;\r\n         endPage = totalPages;\r\n      } else {\r\n         // more than 10 total pages so calculate start and end pages\r\n         if (currentPage <= 6) {\r\n            startPage = 1;\r\n            endPage = 10;\r\n         } else if (currentPage + 4 >= totalPages) {\r\n            startPage = totalPages - 9;\r\n            endPage = totalPages;\r\n         } else {\r\n            startPage = currentPage - 5;\r\n            endPage = currentPage + 4;\r\n         }\r\n      }\r\n\r\n      // calculate start and end item indexes\r\n      var startIndex = (currentPage - 1) * pageSize;\r\n      var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n      // create an array of pages to ng-repeat in the pager control\r\n      var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\r\n\r\n      // return object with all pager properties required by the view\r\n      return {\r\n         totalItems: totalItems,\r\n         currentPage: currentPage,\r\n         pageSize: pageSize,\r\n         totalPages: totalPages,\r\n         startPage: startPage,\r\n         endPage: endPage,\r\n         startIndex: startIndex,\r\n         endIndex: endIndex,\r\n         pages: pages\r\n      };\r\n   }\r\n\r\n   render() {\r\n      var pager = this.state.pager;\r\n\r\n      if (!pager.pages || pager.pages.length <= 1) {\r\n         // don't display pager if there is only 1 page\r\n         return null;\r\n      }\r\n\r\n      return (\r\n         <Pagination aria-label=\"pagination\">\r\n\r\n            <PaginationItem disabled={pager.currentPage === 1 ? true : false}>\r\n               <PaginationLink first href=\"#0\" onClick={() => this.setPage(1)}/>\r\n            </PaginationItem>\r\n\r\n            <PaginationItem disabled={pager.currentPage === 1 ? true : false}>\r\n               <PaginationLink previous href=\"#0\" onClick={() => this.setPage(pager.currentPage - 1)} />\r\n            </PaginationItem>\r\n\r\n            {pager.pages.map((page, index) =>\r\n               <PaginationItem key={index} active={pager.currentPage === page ? true : false}>\r\n                  <PaginationLink href=\"#0\" onClick={() => this.setPage(page)}>{page}</PaginationLink>\r\n               </PaginationItem>\r\n            )}\r\n\r\n            <PaginationItem disabled={pager.currentPage === pager.totalPages ? true : false}>\r\n               <PaginationLink next href=\"#0\" onClick={() => this.setPage(pager.currentPage + 1)} />\r\n            </PaginationItem>\r\n\r\n            <PaginationItem disabled={pager.currentPage === pager.totalPages ? true : false}>\r\n               <PaginationLink last href=\"#0\" onClick={() => this.setPage(pager.totalPages)} />\r\n            </PaginationItem>\r\n\r\n         </Pagination>\r\n\r\n      );\r\n   }\r\n}\r\n\r\nPaginationWrapper.propTypes = propTypes;\r\nPaginationWrapper.defaultProps = defaultProps;\r\nexport default PaginationWrapper;","\r\nimport axios from \"axios\";\r\n\r\nexport const Actions = {\r\n   FETCH_KEYWORDS_BEGIN: 'FETCH_KEYWORDS_BEGIN',\r\n   FETCH_KEYWORDS_SUCCESS: 'FETCH_KEYWORDS_SUCCESS',\r\n   FETCH_KEYWORDS_FAILURE: 'FETCH_KEYWORDS_FAILURE'\r\n}\r\n\r\nexport const fetchKeywordsBegin = () => ({\r\n   type: Actions.FETCH_KEYWORDS_BEGIN\r\n});\r\n\r\nexport const fetchKeywordsSuccess = (keywords) => ({\r\n   type: Actions.FETCH_KEYWORDS_SUCCESS,\r\n   payload: { keywords }\r\n})\r\n\r\nexport const fetchKeywordsFailure = (error) => ({\r\n   type: Actions.FETCH_KEYWORDS_FAILURE,\r\n   payload: { error }\r\n})\r\n\r\nexport function fetchKeywords() {\r\n   let keywords = [];\r\n   return dispatch => {\r\n      dispatch(fetchKeywordsBegin());\r\n      return axios.get('api/v1/keywords/?format=json')\r\n         .then(response => {\r\n            response.data.map(keyword => {\r\n               keywords[keyword.id] = keyword;\r\n               return keyword;\r\n            });\r\n            dispatch(fetchKeywordsSuccess(keywords));\r\n         })\r\n         .catch(error => dispatch(fetchKeywordsFailure(error))\r\n      );\r\n   }\r\n}","\r\nimport axios from \"axios\";\r\n\r\nexport const Actions = {\r\n   FETCH_ORGANIZATIONS_BEGIN: 'FETCH_ORGANIZATIONS_BEGIN',\r\n   FETCH_ORGANIZATIONS_SUCCESS: 'FETCH_ORGANIZATIONS_SUCCESS',\r\n   FETCH_ORGANIZATIONS_FAILURE: 'FETCH_ORGANIZATIONS_FAILURE'\r\n}\r\n\r\nexport const fetchOrganizationsBegin = () => ({\r\n   type: Actions.FETCH_ORGANIZATIONS_BEGIN\r\n});\r\n\r\nexport const fetchOrganizationsSuccess = (organizations) => ({\r\n   type: Actions.FETCH_ORGANIZATIONS_SUCCESS,\r\n   payload: { organizations }\r\n})\r\n\r\nexport const fetchOrganizationsFailure = (error) => ({\r\n   type: Actions.FETCH_ORGANIZATIONS_FAILURE,\r\n   payload: { error }\r\n})\r\n\r\nexport function fetchOrganizations() {\r\n   let organizations = [];\r\n   return dispatch => {\r\n      dispatch(fetchOrganizationsBegin());\r\n      return axios.get('api/v1/orgs/?format=json')\r\n         .then(response => {\r\n            response.data.map(organization => {\r\n               organizations[organization.id] = organization;\r\n               return organization;\r\n            });\r\n            dispatch(fetchOrganizationsSuccess(organizations));\r\n         })\r\n         .catch(error => dispatch(fetchOrganizationsFailure(error))\r\n         );\r\n   }\r\n}","\nimport axios from \"axios\";\n\nexport const Actions = {\n   FETCH_COLLABORATIONS_BEGIN: 'FETCH_COLLABORATIONS_BEGIN',\n   FETCH_COLLABORATIONS_SUCCESS: 'FETCH_COLLABORATIONS_SUCCESS',\n   FETCH_COLLABORATIONS_FAILURE: 'FETCH_COLLABORATIONS_FAILURE'\n}\n\nexport const fetchCollaborationsBegin = () => ({\n   type: Actions.FETCH_COLLABORATIONS_BEGIN\n});\n\nexport const fetchCollaborationsSuccess = (collaborations) => ({\n   type: Actions.FETCH_COLLABORATIONS_SUCCESS,\n   payload: { collaborations }\n})\n\nexport const fetchCollaborationsFailure = (error) => ({\n   type: Actions.FETCH_COLLABORATIONS_FAILURE,\n   payload: { error }\n})\n\nexport function fetchCollaborations() {\n   let collaborations = [];\n   return dispatch => {\n      dispatch(fetchCollaborationsBegin());\n      return axios.get('api/v1/collaborations/?format=json')\n         .then(response => {\n            response.data.map(collaboration => {\n               collaborations[collaboration.id] = collaboration;\n               return collaboration;\n            });\n            dispatch(fetchCollaborationsSuccess(collaborations));\n         })\n         .catch(error => dispatch(fetchCollaborationsFailure(error))\n         );\n   }\n}","import React, { Component } from 'react';\r\nimport {\r\n   Badge,\r\n   ListGroupItem,\r\n   ListGroup,\r\n} from 'reactstrap';\r\n\r\nimport BaseModal from './AdditionalDataModal';\r\nimport { connect } from 'react-redux'\r\nimport './App.css';\r\n\r\nimport { toTitleCase, NBSP } from './helper'\r\n\r\nfunction getKeywordType(shortKeywordType) {\r\n   if (shortKeywordType === \"TK\") {\r\n      return { name: \"Topical\", color: \"primary\" }\r\n   }\r\n   if (shortKeywordType === \"AK\") {\r\n      return { name: \"Activity\", color: \"secondary\" }\r\n   }\r\n}\r\n\r\nfunction getKeywordSortOrder(shortKeywordSortOrder) {\r\n   if (shortKeywordSortOrder === \"HS\") {\r\n      return { name: \"High Level\", color: \"success\" }\r\n   }\r\n   if (shortKeywordSortOrder === \"MS\") {\r\n      return { name: \"Medium Level\", color: \"warning\" }\r\n   }\r\n   if (shortKeywordSortOrder === \"LS\") {\r\n      return { name: \"Low Level\", color: \"danger\" }\r\n   }\r\n}\r\n\r\nclass Keywords extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         showKeywordOverviewModal: false,\r\n         keywordOverviewModalTitle: 'User Keywords',\r\n         keywordOverviewModalBody: [],\r\n\r\n         showKeywordDetailModal: false,\r\n         keywordDetailModalTitle: 'User Keywords',\r\n         keywordDetailModalBody: [],\r\n      };\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.setState({ keywordOverviewModalBody: this.buildKeywordOverviewModalBody() })\r\n      this.buildDisplayText();\r\n   }\r\n\r\n   buildKeywordOverviewModalBody = () => {\r\n      let modalBody = [];\r\n      const keywordIDs = this.props.items;\r\n      keywordIDs.map(\r\n         keywordID => (\r\n            modalBody.push(\r\n            <ListGroupItem\r\n               key={keywordID} \r\n               tag=\"a\" \r\n               onClick={() => this.showKeywordExtendedData(keywordID)} \r\n               href=\"#0\" \r\n               action\r\n            >\r\n               {toTitleCase(this.props.keywords[keywordID].keywordName)}\r\n            </ListGroupItem>)))\r\n      modalBody = <ListGroup>{modalBody}</ListGroup>\r\n      return modalBody;\r\n   }\r\n\r\n   buildDisplayText = () => {\r\n      let displayText = ''\r\n      const keywordIDs = this.props.items;\r\n\r\n      keywordIDs.map(keywordID => (\r\n         displayText += toTitleCase(\r\n            this.props.keywords[keywordID].keywordName) + \", \"));\r\n      displayText = displayText.substring(0, displayText.length - 2)\r\n      if (displayText.length > this.props.displayLength)\r\n         displayText = displayText.substring(0, this.props.displayLength) + \"...\"\r\n      if (displayText.length > 0)\r\n         displayText = \r\n         <a \r\n            href=\"#0\"\r\n            key={keywordIDs} \r\n            onClick={\r\n               () => this.setState(\r\n                  {\r\n                     showKeywordOverviewModal: !this.state.showKeywordOverviewModal\r\n                  })\r\n               }\r\n         >\r\n            {displayText}\r\n         </a>\r\n      else\r\n         displayText = \"No Keywords\"\r\n      return displayText;\r\n   }\r\n\r\n   showKeywordExtendedData(id) {\r\n      let keywordInfo = this.props.keywords[id];\r\n\r\n      let title = \r\n         <div>\r\n            More Information on <b>{keywordInfo.keywordName.toLowerCase()}</b> keyword\r\n         </div>\r\n      let body = (\r\n         <div>\r\n            <Badge \r\n               color={getKeywordType(keywordInfo.keywordType).color}>\r\n               {getKeywordType(keywordInfo.keywordType).name}\r\n            </Badge>\r\n            {NBSP}\r\n            <Badge \r\n               color={getKeywordSortOrder(keywordInfo.sortOrder).color}>\r\n               {getKeywordSortOrder(keywordInfo.sortOrder).name}\r\n            </Badge>\r\n            <br />\r\n         <span>{keywordInfo.keywordDescription !== null ? keywordInfo.keywordDescription : \"No description provided.\"}</span>\r\n      </div>);\r\n      this.setState({ keywordDetailModalTitle: title, keywordDetailModalBody: body, showKeywordDetailModal: !this.state.showKeywordDetailModal });\r\n   }\r\n\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n         {this.buildDisplayText()}\r\n         <BaseModal\r\n            openStatus={this.state.showKeywordOverviewModal}\r\n            title={this.state.keywordOverviewModalTitle}\r\n            body={this.state.keywordOverviewModalBody}\r\n            toggle={() => this.setState(\r\n               {\r\n                  showKeywordOverviewModal: !this.state.showKeywordOverviewModal\r\n               })}\r\n            size='lg'\r\n         />\r\n         <BaseModal\r\n            openStatus={this.state.showKeywordDetailModal}\r\n            title={this.state.keywordDetailModalTitle}\r\n            body={this.state.keywordDetailModalBody}\r\n            toggle={() => this.setState(\r\n               {\r\n                  showKeywordDetailModal: !this.state.showKeywordDetailModal\r\n               })}\r\n            size='lg'\r\n         />\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   keywords: state.keywords.items,\r\n   keywordsLoading: state.keywords.loading,\r\n   keywordError: state.keywords.error,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Keywords);","import React, { Component } from 'react';\r\nimport {\r\n   Button,\r\n   Badge,\r\n   ListGroupItem,\r\n   ListGroup,\r\n} from 'reactstrap';\r\n\r\nimport BaseModal from './AdditionalDataModal';\r\nimport { connect } from 'react-redux'\r\nimport './App.css';\r\n\r\nimport { NBSP } from './helper'\r\n\r\nfunction getOrgType(shortOrgType) {\r\n   if (shortOrgType === \"IO\") {\r\n      return { name: \"Institution\", color: \"primary\" }\r\n   }\r\n   if (shortOrgType === \"CY\") {\r\n      return { name: \"City\", color: \"secondary\" }\r\n   }\r\n   if (shortOrgType === \"CO\") {\r\n      return { name: \"County\", color: \"success\" }\r\n   }\r\n   if (shortOrgType === \"NG\") {\r\n      return { name: \"NGO\", color: \"warning\" }\r\n   }\r\n   if (shortOrgType === \"RA\") {\r\n      return { name: \"Regional Agency\", color: \"info\" }\r\n   }\r\n}\r\n\r\nclass Organizations extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         showOrganizationOverviewModal: false,\r\n         organizationOverviewModalTitle: 'User Organizations',\r\n         organizationOverviewModalBody: [],\r\n\r\n         showOrganizationDetailModal: false,\r\n         organizationDetailModalTitle: 'User Organizations',\r\n         organizationDetailModalBody: [],\r\n      };\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.setState({ organizationOverviewModalBody: this.buildOrganizationOverviewModalBody() })\r\n      // this.buildDisplayText();\r\n   }\r\n\r\n   buildOrganizationOverviewModalBody = () => {\r\n      let modalBody = [];\r\n      const organizationIDs = this.props.items;\r\n      organizationIDs.map(\r\n         organizationID => (\r\n            modalBody.push(\r\n               <ListGroupItem\r\n                  key={organizationID}\r\n                  tag=\"a\"\r\n                  onClick={() => this.showOrgExtendedData(organizationID)}\r\n                  href=\"#0\"\r\n                  action\r\n               >\r\n                  {this.props.orgs[organizationID].orgNameUnique}\r\n               </ListGroupItem>)))\r\n      modalBody = <ListGroup>{modalBody}</ListGroup>\r\n      return modalBody;\r\n   }\r\n\r\n   buildDisplayText = () => {\r\n      let displayText = ''\r\n      const organizationIDs = this.props.items;\r\n\r\n      organizationIDs.map(organizationID => (\r\n         displayText += this.props.orgs[organizationID].orgNameUnique + \", \"));\r\n      displayText = displayText.substring(0, displayText.length - 2)\r\n      if (displayText.length > this.props.displayLength)\r\n         displayText = displayText.substring(0, this.props.displayLength) + \"...\"\r\n      if (displayText.length > 0)\r\n         displayText =\r\n            <a\r\n               href=\"#0\"\r\n               key={organizationIDs}\r\n               onClick={\r\n                  () => this.setState(\r\n                     {\r\n                        showOrganizationOverviewModal: !this.state.showOrganizationOverviewModal\r\n                     })\r\n               }\r\n            >\r\n               {displayText}\r\n            </a>\r\n      else\r\n         displayText = \"No Organizations\"\r\n      return displayText;\r\n   }\r\n\r\n   showOrgExtendedData(orgID) {\r\n      let orgInfo = this.props.orgs[orgID];\r\n      let title = \r\n         <div>\r\n            {this.props.orgs[orgID].orgNameUnique}\r\n            {NBSP}\r\n            <Badge color={getOrgType(orgInfo.orgType).color}>\r\n            {getOrgType(orgInfo.orgType).name}\r\n            </Badge>\r\n         </div>\r\n      let body = (orgInfo.website !== null && orgInfo.website !== \"\") ? (\r\n         <Button outline color=\"primary\" size=\"sm\" href={orgInfo.website} target=\"_blank\" rel=\"noopener noreferrer\">Visit Website</Button>\r\n      ) : \"No website provided\";\r\n      this.setState({ organizationDetailModalTitle: title, organizationDetailModalBody: body, showOrganizationDetailModal: !this.state.showOrganizationDetailModal });\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            {this.buildDisplayText()}\r\n            <BaseModal\r\n               openStatus={this.state.showOrganizationOverviewModal}\r\n               title={this.state.organizationOverviewModalTitle}\r\n               body={this.state.organizationOverviewModalBody}\r\n               toggle={() => this.setState(\r\n                  {\r\n                     showOrganizationOverviewModal: !this.state.showOrganizationOverviewModal\r\n                  })}\r\n               size='lg'\r\n            />\r\n            <BaseModal\r\n               openStatus={this.state.showOrganizationDetailModal}\r\n               title={this.state.organizationDetailModalTitle}\r\n               body={this.state.organizationDetailModalBody}\r\n               toggle={() => this.setState(\r\n                  {\r\n                     showOrganizationDetailModal: !this.state.showOrganizationDetailModal\r\n                  })}\r\n               size='lg'\r\n            />\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   orgs: state.orgs.items,\r\n   orgsLoading: state.orgs.loading,\r\n   orgError: state.orgs.error,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Organizations);","import React, { Component } from 'react';\r\nimport {\r\n   Button,\r\n   Badge,\r\n} from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faInfo } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport UserDetailModal from './AdditionalDataModal';\r\nimport Obfuscate from 'react-obfuscate'\r\nimport './App.css';\r\n\r\nimport { NBSP } from './helper'\r\n\r\nlibrary.add(faInfo);\r\n\r\n\r\nfunction getUserTypes(shortUserType) {\r\n   switch (shortUserType) {\r\n      case \"US\":\r\n         return { name: \"University Faculty/Staff\", color: \"primary\" };\r\n      case \"CS\":\r\n         return { name: \"City Staff\", color: \"secondary\" };\r\n      case \"CO\":\r\n         return { name: \"County Staff\", color: \"success\" }\r\n      case \"NS\":\r\n         return { name: \"NGO Staff\", color: \"danger\" }\r\n      case \"RS\":\r\n         return { name: \"Regional Staff\", color: \"warning\" }\r\n      default:\r\n         return { name: \"Error\", color: \"dark\" }\r\n   }\r\n}\r\n\r\nclass UserDetail extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         showUserDetails: false,\r\n         userDetailModalTitle: '',\r\n         userDetailModalBody: '',\r\n      }\r\n   }\r\n\r\n   showUserDetailModal = () => {\r\n      let user = this.props.user\r\n      let title = <div>About <b>{user.firstName} {user.lastName}</b></div>;\r\n      let body = <div>\r\n         <Badge color={getUserTypes(user.userType).color}>{getUserTypes(user.userType).name}</Badge><br />\r\n         <b>Email: </b><Obfuscate email={user.emailAddress} /><br />\r\n         {user.website ? <div><b>Website: </b>{NBSP}<a href={user.website} target=\"_blank\" rel=\"noopener noreferrer\">{user.website}</a></div> : \"\"}\r\n         {user.jobTitle ? <div><b>Job Title: </b>{NBSP}{user.jobTitle}</div> : \"\"}\r\n         {user.description ? <div><b>About: </b>{NBSP}{user.description.split(\"\\n\").map((i, key) => {\r\n            return <div key={key}>{i}< br /></div>;\r\n         })}</div> : \"\"}\r\n      </div>\r\n      this.setState({userDetailModalTitle: title, userDetailModalBody: body, showUserDetails: true})\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <a href=\"#0\" onClick={() => this.showUserDetailModal()}>About {this.props.user.firstName} {this.props.user.lastName}</a>\r\n            <UserDetailModal\r\n               openStatus={this.state.showUserDetails}\r\n               title={this.state.userDetailModalTitle}\r\n               body={this.state.userDetailModalBody}\r\n               toggle={() => this.setState({ showUserDetails: !this.state.showUserDetails})}\r\n               size={'lg'}\r\n            />\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default UserDetail","import React, { Component } from 'react';\r\nimport {\r\n   Button,\r\n   Modal,\r\n   ModalHeader,\r\n   ModalBody,\r\n   ModalFooter,\r\n   InputGroup,\r\n   InputGroupAddon,\r\n   Input,\r\n   UncontrolledPopover,\r\n   PopoverHeader,\r\n   PopoverBody\r\n} from 'reactstrap';\r\nimport './Modal.css';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nvar base64 = require('base-64');\r\n\r\n\r\nexport default class CopyQueryToClipboard extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         copyCode: false,\r\n         copyURL: false,\r\n      }\r\n   }\r\n   /* Passed in:\r\n      props:\r\n         - title\r\n         - body\r\n    */\r\n\r\n   render() {\r\n      const { openStatus, toggle, size, query, endpoint } = this.props;\r\n      const protocol = window.location.protocol;\r\n      const host = window.location.host;\r\n      const encodedQuery = base64.encode(endpoint + \"?\" + query)\r\n      const URL = protocol.concat(\"//\", host, \"/save/\", encodedQuery);\r\n      return (\r\n         <Modal isOpen={openStatus} toggle={toggle} centered size={size}>\r\n            <ModalHeader toggle={toggle}>Copy Query to Clipboard</ModalHeader>\r\n            <ModalBody>\r\n               Saving or sharing a query is easy! You can copy the code below to\r\n               your clipboard and paste it in on this page later, or you can copy\r\n               the sharable URL.< br />\r\n               <b>Copy code to clipboard</b>\r\n\r\n               <InputGroup>\r\n                  <Input disabled placeholder={encodedQuery} />\r\n                  <InputGroupAddon addonType=\"append\">\r\n\r\n                     <CopyToClipboard text={encodedQuery}\r\n                        onCopy={() => this.setState({ copyCode: true })}>\r\n                        <Button id=\"copyCodeToClipboard\" color=\"success\">Copy to clipboard</Button>\r\n                     </CopyToClipboard>\r\n                     <UncontrolledPopover trigger=\"focus\" placement=\"right\" target=\"copyCodeToClipboard\">\r\n                        <PopoverHeader>Copied Code to Clipboard</PopoverHeader>\r\n                        <PopoverBody>You can share or save this code to return to this query later!<br /><kbd>Ctrl</kbd> + <kbd>V</kbd> can retrieve the code from your clipboard.</PopoverBody>\r\n                     </UncontrolledPopover>\r\n                  </InputGroupAddon>\r\n               </InputGroup>\r\n               <br />\r\n               <b>Want to Copy a URL instead?</b>\r\n\r\n               <InputGroup>\r\n                  <Input disabled placeholder={URL} />\r\n                  <InputGroupAddon addonType=\"append\">\r\n\r\n                     <CopyToClipboard text={URL}\r\n                        onCopy={() => this.setState({ copyURL: true })}>\r\n                        <Button id=\"copyURLToClipboard\" color=\"success\">Copy to clipboard</Button>\r\n                     </CopyToClipboard>\r\n                     <UncontrolledPopover trigger=\"focus\" placement=\"right\" target=\"copyURLToClipboard\">\r\n                        <PopoverHeader>Copied URL to Clipboard</PopoverHeader>\r\n                        <PopoverBody>You can share or save this URL to return to this query later!<br /><kbd>Ctrl</kbd> + <kbd>V</kbd> can retrieve the code from your clipboard.</PopoverBody>\r\n                     </UncontrolledPopover>\r\n                  </InputGroupAddon>\r\n               </InputGroup>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n               <Button color=\"primary\" onClick={toggle}>Close</Button>\r\n            </ModalFooter>\r\n         </Modal>\r\n      );\r\n   }\r\n}","import React, { Component } from 'react';\nimport {\n   Button, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon, Input\n} from 'reactstrap';\nimport './Modal.css';\n\n\nexport default class PasteQueryToClipboard extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         value: '',\n      }\n      this.runQuery = this.runQuery.bind(this)\n      this.handleChange = this.handleChange.bind(this)\n   }\n   /* Passed in:\n      props:\n         - title\n         - body\n    */\n\n   runQuery = () => {\n\n      let newLocation = \"save/\" + this.state.value\n      this.props.history.push(newLocation)\n   }\n\n   handleChange(event) {\n   this.setState({ value: event.target.value });\n   }\n\n   render() {\n      const { openStatus, toggle, size } = this.props;\n      return (\n         <Modal isOpen={openStatus} toggle={toggle} centered size={size}>\n            <ModalHeader toggle={toggle}>Paste Query from Clipboard</ModalHeader>\n            <ModalBody>\n               If you have a code, paste it below to convert it into a query.< br />\n               <b>Paste Code From Clipboard</b>\n\n               <InputGroup>\n                  <Input value={this.state.value} onChange={this.handleChange} autoFocus=\"true\"/>\n                  <InputGroupAddon addonType=\"append\">\n                     <Button color=\"success\" onClick={() => this.runQuery()}>Run Query</Button>\n                  </InputGroupAddon>\n               </InputGroup>\n            </ModalBody>\n            <ModalFooter>\n               <Button color=\"primary\" onClick={toggle}>Close</Button>\n            </ModalFooter>\n         </Modal>\n      );\n   }\n}","import React, { Component } from 'react';\r\nimport Select from 'react-select'\r\nimport {\r\n   Col, Row, Form,\r\n   FormGroup, Label,\r\n   Button, FormText, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, UncontrolledAlert\r\n} from 'reactstrap';\r\nimport '../Modal.css';\r\nimport CopyToClipBoardModal from '../copyQueryToClipboard'\r\nimport PasteFromCipboardModal from '../PasteQueryFromKeyboard'\r\nimport { withRouter } from \"react-router\";\r\nimport { NBSP, isEmpty } from '../helper';\r\nimport { buildQueryString } from './searchForUniversity'\r\nimport { connect } from 'react-redux'\r\n\r\nclass SearchForUniversityForm extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         queryData: this.props.selectedQuery,\r\n         validate: {\r\n            emailState: '',\r\n         },\r\n         selectedOption: null,\r\n         modal: false,\r\n         dropdownOpen: false,\r\n\r\n         copyToClipBoardToggle: false,\r\n         pasteFromClipBoardToggle: false,\r\n      }\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.univOptions = this.getUnivertisyTypes();\r\n      this.aKeywords = this.getKeywordTypes('AK');\r\n      this.tKeywords = this.getKeywordTypes('TK');\r\n      this.collaborations = this.getCollaborationsTypes();;\r\n   }\r\n\r\n   getUnivertisyTypes = () => {\r\n      const orgTypes = [\"IO\"]\r\n      let univOrgs = this.props.orgs.items.filter(function (org) { return orgTypes.includes(org.orgType) });\r\n      return univOrgs.map(org => ({ label: org.orgNameUnique, value: org.id }));\r\n   }\r\n\r\n   getCollaborationsTypes = () => {\r\n      return this.props.collaborations.items.map(collaboration => ({ label: collaboration.collaborationName, value: collaboration.id }));\r\n   }\r\n\r\n   getKeywordTypes = (keywordType) => {\r\n      const keywordsFiltered = this.props.keywords.items.filter(function (keyword) { return keyword.keywordType === keywordType })\r\n      const keywordLow = keywordsFiltered.filter(function (keyword) { return keyword.sortOrder === \"LS\" });\r\n      const keywordMedium = keywordsFiltered.filter(function (keyword) { return keyword.sortOrder === \"MS\" });\r\n      const keywordHigh = keywordsFiltered.filter(function (keyword) { return keyword.sortOrder === \"HS\" });\r\n      let keywordLowNormalized = keywordLow.map(keyword => ({\r\n         label: keyword.keywordName,\r\n         value: keyword.id\r\n      }));\r\n      let keywordMediumNormalized = keywordMedium.map(keyword => ({\r\n         label: keyword.keywordName,\r\n         value: keyword.id\r\n      }));\r\n      let keywordHighNormalized = keywordHigh.map(keyword => ({\r\n         label: keyword.keywordName,\r\n         value: keyword.id\r\n      }));\r\n      let keywordOptionData =\r\n         [\r\n            {\r\n               label: 'High Level Keywords',\r\n               options: keywordHighNormalized,\r\n            },\r\n            {\r\n               label: 'Medium Level Keywords',\r\n               options: keywordMediumNormalized,\r\n            },\r\n            {\r\n               label: 'Low Level Keywords',\r\n               options: keywordLowNormalized,\r\n            },\r\n         ];\r\n      return keywordOptionData;\r\n   }\r\n\r\n   handleChange = (e) => {\r\n      let { name, value } = e.target;\r\n      if (e.target.type === \"checkbox\") {\r\n         value = e.target.checked;\r\n      }\r\n      const queryData = { ...this.state.queryData, [name]: value === null ? [] : value };\r\n      this.setState({ queryData });\r\n   };\r\n\r\n   handleSubmit(syntheticEvent) {\r\n      syntheticEvent.preventDefault();\r\n      this.props.submitHandler(this.state.queryData);\r\n\r\n   }\r\n\r\n\r\n\r\n   render() {\r\n\r\n      return (\r\n         <Form onSubmit={this.handleSubmit}>\r\n            <Row>\r\n               <Col>\r\n                  <FormGroup>\r\n                     <Label>University Selection</Label>\r\n                     <Select\r\n                        ref=\"universitySelection\"\r\n                        name=\"universitySelection\"\r\n\r\n                        value={this.state.queryData.selectedUniversities}\r\n                        options={this.univOptions}\r\n                        onChange={(val) => this.handleChange({ target: { name: 'selectedUniversities', value: val } })}\r\n                        isMulti={true}\r\n                        autoBlur={false}\r\n                        closeOnSelect={false}\r\n                        closeMenuOnSelect={false}\r\n                     />\r\n                  </FormGroup>\r\n               </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n               <Col>\r\n                  <FormGroup>\r\n                     <Label>Activity Keywords Selection</Label>\r\n                     <Select\r\n                        ref=\"activityKeywords\"\r\n                        value={this.state.queryData.activityKeywords}\r\n                        options={this.aKeywords}\r\n                        onChange={(val) => this.handleChange({ target: { name: 'activityKeywords', value: val } })}\r\n                        isMulti={true}\r\n                        autoBlur={false}\r\n                        closeOnSelect={false}\r\n                        closeMenuOnSelect={false}\r\n                     />\r\n                     <FormText>You can leave this blank to select all activity keywords.</FormText>\r\n                  </FormGroup>\r\n               </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n               <Col>\r\n                  <FormGroup>\r\n                     <Label>Topical Keywords Selection</Label>\r\n                     <Select\r\n                        ref=\"topicalKeywords\"\r\n                        value={this.state.queryData.topicalKeywords}\r\n                        options={this.tKeywords}\r\n                        onChange={(val) => this.handleChange({ target: { name: 'topicalKeywords', value: val } })}\r\n                        isMulti={true}\r\n                        autoBlur={false}\r\n                        closeOnSelect={false}\r\n                        closeMenuOnSelect={false}\r\n                     />\r\n                     <FormText>You can leave this blank to select all topical keywords.</FormText>\r\n                  </FormGroup>\r\n               </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n               <Col>\r\n                  <FormGroup>\r\n                     <Label>Collaborations Selection</Label>\r\n                     <Select\r\n                        ref=\"collaborations\"\r\n                        value={this.state.queryData.collaborations}\r\n                        options={this.collaborations}\r\n                        onChange={(val) => this.handleChange({ target: { name: 'collaborations', value: val } })}\r\n                        isMulti={true}\r\n                        autoBlur={false}\r\n                        closeOnSelect={false}\r\n                        closeMenuOnSelect={false}\r\n                     />\r\n                     <FormText>You can leave this blank to select all topical keywords.</FormText>\r\n                  </FormGroup>\r\n               </Col>\r\n            </Row>\r\n\r\n            <Row noGutters>\r\n               <div>\r\n                  <div id=\"runQueryButton\" style={{ display: 'inline-block' }}>\r\n                     <Button color=\"success\"><span>Run Query</span></Button>\r\n                  </div>\r\n               </div>\r\n               {NBSP}\r\n               <div>\r\n                  <Dropdown isOpen={this.state.dropdownOpen} toggle={() => this.setState(prevState => ({ dropdownOpen: !prevState.dropdownOpen }))}>\r\n                     <DropdownToggle caret>\r\n                        More Actions\r\n                        </DropdownToggle>\r\n                     <DropdownMenu>\r\n                        <DropdownItem disabled>Export Search (coming soon)</DropdownItem>\r\n                        <DropdownItem divider />\r\n                        <DropdownItem disabled={isEmpty(this.state.queryData)} onClick={() => this.setState({ copyToClipBoardToggle: !this.state.copyToClipBoardToggle })}>Save Query</DropdownItem>\r\n                        <DropdownItem onClick={() => this.setState({ pasteFromClipBoardToggle: !this.state.pasteFromClipBoardToggle })}>Paste Query</DropdownItem>\r\n                     </DropdownMenu>\r\n                  </Dropdown>\r\n                  <CopyToClipBoardModal\r\n                     openStatus={this.state.copyToClipBoardToggle}\r\n                     query={buildQueryString(this.state.queryData)}\r\n                     endpoint=\"univCollaborator\"\r\n                     toggle={() => this.setState(\r\n                        {\r\n                           copyToClipBoardToggle: !this.state.copyToClipBoardToggle\r\n                        })}\r\n                     size='lg'\r\n                  />\r\n                  <PasteFromCipboardModal\r\n                     openStatus={this.state.pasteFromClipBoardToggle}\r\n                     endpoint=\"univCollaborator\"\r\n                     history={this.props.history}\r\n                     toggle={() => this.setState(\r\n                        {\r\n                           pasteFromClipBoardToggle: !this.state.pasteFromClipBoardToggle\r\n                        })}\r\n                     size='lg'\r\n                  />\r\n\r\n               </div>\r\n            </Row>\r\n         </Form>\r\n      );\r\n   }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n   nav: state.nav,\r\n   orgs: state.orgs,\r\n   keywords: state.keywords,\r\n   collaborations: state.collaborations,\r\n   collaborators: state.collaborators,\r\n})\r\n\r\nSearchForUniversityForm = withRouter(SearchForUniversityForm);\r\n\r\nexport default connect(mapStateToProps)(SearchForUniversityForm);","export const Actions = {\r\n   TOGGLE_DEV_MODE: 'TOGGLE_DEV_MODE',\r\n   TOGGLE_NAV_BAR: 'TOGGLE_NAV_BAR',\r\n\r\n   TOGGLE_SEARCH_FOR_UNIV_COLLABORATOR: 'TOGGLE_SEARCH_FOR_UNIV_COLLABORATOR',\r\n}\r\n\r\nexport const toggleDevMode = () => ({\r\n   type: Actions.TOGGLE_DEV_MODE\r\n});\r\n\r\nexport const toggleNavBar = () => ({\r\n   type: Actions.TOGGLE_NAV_BAR\r\n});\r\n\r\nexport const toggleSearchForUnivCollaborator = () => ({\r\n   type: Actions.TOGGLE_SEARCH_FOR_UNIV_COLLABORATOR\r\n})","\r\nimport axios from \"axios\";\r\n\r\nexport const Actions = {\r\n   FETCH_COLLABORATORS_BEGIN: 'FETCH_COLLABORATORS_BEGIN',\r\n   FETCH_COLLABORATORS_SUCCESS: 'FETCH_COLLABORATORS_SUCCESS',\r\n   FETCH_COLLABORATORS_FAILURE: 'FETCH_COLLABORATORS_FAILURE',\r\n   SET_QUERY_STATEMENT: 'SET_QUERY_STATEMENT',\r\n   SET_URL: 'SET_URL'\r\n}\r\n\r\nexport const fetchUnivCollaboratorsBegin = () => ({\r\n   type: Actions.FETCH_COLLABORATORS_BEGIN\r\n});\r\n\r\nexport const fetchUnivCollaboratorsSuccess = (collaborators) => ({\r\n   type: Actions.FETCH_COLLABORATORS_SUCCESS,\r\n   payload: { collaborators }\r\n})\r\n\r\nexport const fetchUnivCollaboratorsFailure = (error) => ({\r\n   type: Actions.FETCH_COLLABORATORS_FAILURE,\r\n   payload: { error }\r\n})\r\n\r\nexport const setURL = (URL) => ({\r\n   type: Actions.SET_URL,\r\n   payload: { URL }\r\n})\r\n\r\nexport const setQueryStatement = (query) => ({\r\n   type: Actions.SET_QUERY_STATEMENT,\r\n   payload: { query }\r\n})\r\n\r\nexport const fetchUnivCollaborators = (url) => {\r\n   return dispatch => {\r\n      dispatch(fetchUnivCollaboratorsBegin());\r\n\r\n      axios.get(url)\r\n      .then (res => {dispatch(fetchUnivCollaboratorsSuccess(res.data));})\r\n         .catch(err => { dispatch(fetchUnivCollaboratorsFailure(err));});\r\n   }\r\n}","import React from 'react'\n\nimport { Helmet } from 'react-helmet'\n\nexport const delimiter = \"|\"\nexport const appTitle = \"4C Member Lookup\"\n\nexport default function Title(props) {\n   return (\n      <Helmet>\n         <title>{props.name} {delimiter} {appTitle}</title>\n      </Helmet>\n   )\n}","import React, { Component } from 'react';\nimport {\n   Modal, ModalHeader, ModalBody, Button, ListGroup, ListGroupItem, ListGroupItemHeading, ListGroupItemText, Alert\n} from 'reactstrap';\n\nimport { Link } from 'react-router-dom';\nimport '../App.css';\nimport { NBSP } from '../helper'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faLifeRing } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faLifeRing);\n\nclass HowToSearchModal extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         'modal': false,\n      };\n\n   }\n\n   render() {\n\n      return (\n         <>\n            <Modal size=\"lg\" isOpen={this.state.modal} toggle={() => this.setState({ modal: !this.state.modal })}>\n               <ModalHeader toggle={() => this.setState({ modal: !this.state.modal })}><FontAwesomeIcon icon=\"life-ring\" /> Need Help?</ModalHeader>\n               <ModalBody>\n                  <Alert color=\"info\">\n                     If you're looking for potential university collaborators, then\n                     you're in the right place! If instead, you want to search for NGO or\n                     government (city, regional, county), you'll need to go{NBSP}\n                     <Link to=\"4CCollaborator\">here</Link>.\n                  </Alert>\n\n                  <ListGroup>\n                     <ListGroupItem>\n                        <ListGroupItemHeading>Universities</ListGroupItemHeading>\n                        <ListGroupItemText>\n                           To select universities that you can collaborate with,\n                           use the <code>University Selection</code> dropdown.\n                           You can select universities and departments or, you\n                           can start typing in the field to filter universities.\n                           To select an entire univeristy, you'll need to\n                           individually select each department.\n                        </ListGroupItemText>\n                     </ListGroupItem>\n\n                     <ListGroupItem>\n                        <ListGroupItemHeading>Keywords</ListGroupItemHeading>\n                        <ListGroupItemText>\n                           Selecting keywords is very similar.\n                           The only difference is the keywords are broken up\n                           into high level, medium level, and low level.\n                           You can think of a high level keyword as <b>Fruit</b>\n                           , a medium level keyword <b>Apple</b> and a low level\n                           keyword <b>Honeycrisp</b>. This way, you can more\n                           easily narrow your search.\n                        </ListGroupItemText>\n                     </ListGroupItem>\n\n                     <ListGroupItem>\n                        <ListGroupItemHeading>Collaborations</ListGroupItemHeading>\n                        <ListGroupItemText>\n                           To select collaborations,\n                           it's identical to Universities, you can select a\n                           collaboration, or type to filter the results.\n                        </ListGroupItemText>\n                     </ListGroupItem>\n\n                     <ListGroupItem>\n                        <ListGroupItemHeading>There's More!</ListGroupItemHeading>\n                        <ListGroupItemText>\n                           If you want to save a query for later or share it\n                           with someone, click the <code>More Actions</code>\n                           dropdown, and then select <code>Save Query</code>\n                           (Note, you can only select this button if there are\n                           no parameters selected).<br />\n                           If you have a code from someone else, you can use the\n                           <code>Paste Query</code> option to paste your qcode\n                           (query code) and the system will return the same\n                           query that was saved.\n                        </ListGroupItemText>\n                     </ListGroupItem>\n                  </ListGroup>\n               </ModalBody>\n            </Modal>\n            <Button color=\"info\" onClick={() => this.setState({ modal: !this.state.modal })}>Need Help?</Button>\n         </>\n      )\n   }\n\n}\n\nexport default HowToSearchModal;","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Jumbotron, UncontrolledAlert, Row, Col,\r\n} from 'reactstrap';\r\n\r\nimport SearchForCollaboratorForm from './searchForUniversityForm';\r\nimport { connect } from 'react-redux'\r\nimport { toggleSearchForUnivCollaborator } from '../actions/menuActions'\r\nimport { fetchUnivCollaborators, setURL, setQueryStatement } from '../actions/searchForUnivCollaboratorActions'\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from 'react-router-dom';\r\nimport { isEmpty } from '../helper'\r\nimport '../App.css';\r\nimport Title from '../head'\r\nimport HowToSearchModal from './HowToSearchModal'\r\n\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faLifeRing } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faLifeRing);\r\n\r\nconst queryString = require('query-string');\r\n\r\n\r\nexport function buildURL(item) {\r\n   let org = item.selectedUniversities;\r\n   let activityKeywords = item.activityKeywords;\r\n   let topicalKeywords = item.topicalKeywords;\r\n   let collaborations = item.collaborations;\r\n   var url = \"/api/v1/users/?format=json\";\r\n   if (org) {\r\n      for (let i = 0; i < org.length; i++) {\r\n         url += '&organization=' + org[i].value;\r\n      }\r\n   }\r\n   if (activityKeywords) {\r\n      for (let i = 0; i < activityKeywords.length; i++) {\r\n         url += '&keywords=' + activityKeywords[i].value;\r\n      }\r\n   }\r\n   if (topicalKeywords) {\r\n      for (let i = 0; i < topicalKeywords.length; i++) {\r\n         url += '&keywords=' + topicalKeywords[i].value;\r\n      }\r\n   }\r\n   if (collaborations) {\r\n      for (let i = 0; i < collaborations.length; i++) {\r\n         url += '&collaborations=' + collaborations[i].value;\r\n      }\r\n   }\r\n   return url;\r\n\r\n}\r\n\r\nexport function buildQueryString(item) {\r\n   let org = item.selectedUniversities;\r\n   let activityKeywords = item.activityKeywords;\r\n   let topicalKeywords = item.topicalKeywords;\r\n   let collaborations = item.collaborations;\r\n   var params = \"\"\r\n   if (org) {\r\n      for (let i = 0; i < org.length; i++) {\r\n         params += 'org=' + org[i].value + '&';\r\n      }\r\n   }\r\n   if (activityKeywords) {\r\n      for (let i = 0; i < activityKeywords.length; i++) {\r\n         params += 'keyA=' + activityKeywords[i].value + '&';\r\n      }\r\n   }\r\n   if (topicalKeywords) {\r\n      for (let i = 0; i < topicalKeywords.length; i++) {\r\n         params += 'keyT=' + topicalKeywords[i].value + '&';\r\n      }\r\n   }\r\n   if (collaborations) {\r\n      for (let i = 0; i < collaborations.length; i++) {\r\n         params += 'clb=' + collaborations[i].value + '&';\r\n      }\r\n   }\r\n   params = params.substring(0, params.length - 1)\r\n   return params;\r\n}\r\n\r\nclass SearchForCollaborator extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         'selectedQueryStatements': {\r\n            activityKeywords: [],\r\n            topicalKeywords: [],\r\n            collaborations: [],\r\n            selectedUniversities: [],\r\n         },\r\n         readParams : false,\r\n         initialLoad: false\r\n      };\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.readParams = this.readParams.bind(this);\r\n   }\r\n\r\n\r\n   componentDidMount() {\r\n      if (isEmpty(this.props.collaborators.selectedQueryStatements)) {\r\n         this.readParams()\r\n         \r\n      }\r\n      else {\r\n         this.props.fetchUnivCollaborators(buildURL(this.props.collaborators.selectedQueryStatements));\r\n         this.props.history.push(`?${buildQueryString(this.props.collaborators.selectedQueryStatements)}`);\r\n         this.setState({ readParams: true })\r\n      }\r\n   }\r\n\r\n   readParams() {\r\n      let orgsA = [];\r\n      let aKey = [];\r\n      let tKey = [];\r\n      let cKey = [];\r\n      const parsed = queryString.parse(this.props.location.search);\r\n      if (parsed.keyA) {\r\n         let keyA = parsed.keyA;\r\n         if (!(Array.isArray(parsed.keyA))) {\r\n            keyA = [parsed.keyA]\r\n         }\r\n         keyA.map(keyID => aKey.push({ label: this.props.keywords.items[keyID].keywordName, value: keyID }))\r\n      }\r\n      if (parsed.keyT) {\r\n         let keyT = parsed.keyT;\r\n         if (!(Array.isArray(parsed.keyT))) {\r\n            keyT = [parsed.keyT]\r\n         }\r\n         keyT.map(keyID => tKey.push({ label: this.props.keywords.items[keyID].keywordName, value: keyID }))\r\n      }\r\n      if (parsed.clb) {\r\n         let clb = parsed.clb;\r\n         if (!(Array.isArray(parsed.clb))) {\r\n            clb = [parsed.clb]\r\n         }\r\n         clb.map(clbID => cKey.push({ label: this.props.collaborations.items[clbID].collaborationName, value: clbID }))\r\n      }\r\n      if (parsed.org) {\r\n         let orgL = parsed.org;\r\n         if (!(Array.isArray(orgL))) {\r\n            orgL = [parsed.org]\r\n         }\r\n         orgL.map(orgID => orgsA.push({ label: this.props.orgs.items[orgID].orgNameUnique, value: orgID }))\r\n      }\r\n      let selectedQueryStatements = {\r\n         activityKeywords: aKey,\r\n         topicalKeywords: tKey,\r\n         collaborations: cKey,\r\n         selectedUniversities: orgsA\r\n      }\r\n      this.props.setQueryStatement(selectedQueryStatements)\r\n      this.props.fetchUnivCollaborators(buildURL(selectedQueryStatements));\r\n      this.setState({readParams: true})\r\n   }\r\n\r\n   handleSubmit = (item) => {\r\n      if (this.props.collaborators.selectedQueryStatements === item) {\r\n         return\r\n      }\r\n      this.props.setQueryStatement(item);\r\n      this.props.history.push(`?${buildQueryString(item)}`);\r\n      this.props.fetchUnivCollaborators(buildURL(item));\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <Title name=\"Search for University Collaborator\" />\r\n            <Jumbotron fluid>\r\n               <Container fluid>\r\n                  <Row>\r\n                  <Col sm={{ size: 6, order: 2, offset: 1 }}>\r\n                     <h1 className=\"display-3\">Looking for a Collaborator?</h1>\r\n                     <p className=\"lead\">Use the form below to query potential collaborators.</p>\r\n                     <HowToSearchModal />\r\n                     <hr className=\"my-2\" />\r\n                     {this.state.readParams? \r\n                     <SearchForCollaboratorForm \r\n                        selectedQuery={this.props.collaborators.selectedQueryStatements}\r\n                        submitHandler={this.handleSubmit}\r\n                        history={this.props.history}/>: null}\r\n                        </Col>\r\n                        </Row>\r\n               </Container>\r\n            </Jumbotron>\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   nav: state.nav,\r\n   orgs: state.orgs,\r\n   keywords: state.keywords,\r\n   collaborations: state.collaborations,\r\n   collaborators: state.univCollaborators,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   toggleSearchForUnivCollaborator,\r\n   fetchUnivCollaborators,\r\n   setURL,\r\n   setQueryStatement,\r\n};\r\n\r\n// function mapDispatchToProps(dispatch) {\r\n//    return bindActionCreators({ toggleSearchForCollaborator, fetchCollaborators}, dispatch)\r\n// }\r\n\r\nSearchForCollaborator = withRouter(SearchForCollaborator);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForCollaborator);","export default class Loader {\r\n   static loadingItems = {};\r\n   static loadingStatus = false;\r\n\r\n   static addLoadItem(key, value) {\r\n      var pair = {[key]: value}\r\n      this.loadingItems = {...this.loadingItems, ...pair}\r\n      // this.loadingStatus = this.calculateLoadingState();\r\n   }\r\n\r\n   static getLoadingItems() {\r\n      return Object.values(this.loadingItems)\r\n   }\r\n\r\n   static loadingState() {\r\n      return this.loadingStatus;\r\n   }\r\n\r\n   static calculateLoadingState(loader) {\r\n      let openStatus = [];\r\n      let loadValues = loader;\r\n      loadValues.map(loadInfo => openStatus.push(loadInfo.condition, loadInfo.error !== null))\r\n      openStatus = openStatus.every(x => x === false);\r\n      return openStatus\r\n   }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Table,\r\n   Spinner,\r\n   Alert,\r\n} from 'reactstrap';\r\nimport PaginationWrapper from '../Pagination'\r\nimport { connect } from 'react-redux'\r\nimport {fetchKeywords} from '../actions/keywordActions'\r\nimport {fetchOrganizations} from '../actions/organizationActions'\r\nimport { fetchCollaborations } from '../actions/collaborationsActions'\r\nimport Keyword from '../Keywords'\r\nimport Organizations from '../Organizations'\r\nimport UserDetail from '../User'\r\nimport SearchForCollaborator from './searchForUniversity'\r\nimport Loader from '../loader';\r\nimport Loading from '../Loading'\r\nimport '../App.css';\r\nimport Obfuscate from 'react-obfuscate'\r\n\r\nclass TableView extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         pageItems: [],\r\n         pageSize: 30,\r\n      };\r\n      this.onChangePage = this.onChangePage.bind(this);\r\n   }\r\n  \r\n   componentDidMount() {\r\n      this.props.fetchKeywords();\r\n      this.props.fetchOrganizations();\r\n      this.props.fetchCollaborations();\r\n   }\r\n\r\n   onChangePage(pageOfItems) {\r\n      this.setState({ pageItems: pageOfItems })\r\n   }\r\n\r\n   renderDisplayUserItems = () => {\r\n      const items = this.state.pageItems;\r\n      let renderItems = \"\"\r\n      renderItems = items.map(item => (\r\n         <tr key={item.id}>\r\n            <th scope=\"row\">{item.firstName} {item.lastName}</th>\r\n            <td>{!this.props.orgsLoading || this.props.orgs === [] ? <Organizations items={item.organization} displayLength={20} /> : <Spinner color=\"primary\" />}</td>\r\n            <td><Obfuscate email={item.emailAddress} /></td>\r\n            <td>{!this.props.keywordsLoading || this.props.keywords === [] ? <Keyword items={item.keywords} displayLength={75}/> : <Spinner color=\"primary\" />}</td>\r\n            <td><UserDetail user={item}/></td>\r\n         </tr>\r\n      ));\r\n      return renderItems;\r\n   };\r\n\r\n   render() {\r\n      let loader = [\r\n         { friendlyName: 'Keywords', condition: this.props.keywordsLoading, error: this.props.keywordError },\r\n         { friendlyName: 'Organizations', condition: this.props.orgsLoading, error: this.props.orgError },\r\n         { friendlyName: 'Collaborations', condition: this.props.collaborationsLoading, error: this.props.collaborationsError },\r\n         { friendlyName: 'University Collaborators', condition: this.props.univCollaboratorsLoading, error: this.props.univCollaboratorsError },\r\n      ]\r\n      let loadStatus = Loader.calculateLoadingState(loader);      \r\n      return (\r\n         <>\r\n            <Loading body={loader} status={loadStatus} />\r\n            {(!this.props.keywordsLoading || this.props.keywords === []) && (!this.props.orgsLoading || this.props.orgs === []) && (!this.props.collaborationsLoading || this.props.collaborations === []) ? <SearchForCollaborator /> : null }\r\n         <Container fluid>\r\n            {this.props.univCollaborators.length === 0 ? \r\n               <Alert color=\"info\">\r\n                  <h4 className=\"alert-heading\">No Results</h4>\r\n                  <p>\r\n                     Hmm, it looks like there are no results with your\r\n                     current query. Try a different combination.\r\n                  </p>\r\n               </Alert> :\r\n               <>\r\n                  <Table hover responsive>\r\n                     <thead>\r\n                        <tr>\r\n                           <th>Name</th>\r\n                           <th>Organization(s)</th>\r\n                           <th>Email Address</th>\r\n                           <th>Keyword(s)</th>\r\n                           <th>More Information</th>\r\n                        </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                        {this.renderDisplayUserItems()}\r\n                     </tbody>\r\n                  </Table>\r\n                  <div className=\"centerd-pagination\">\r\n                     <PaginationWrapper pageSize={this.state.pageSize} items={this.props.univCollaborators} onChangePage={this.onChangePage} />\r\n                  </div>\r\n               </>\r\n            }\r\n         </Container>\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   keywords: state.keywords.items,\r\n   keywordsLoading: state.keywords.loading,\r\n   keywordError: state.keywords.error,\r\n\r\n   orgs: state.orgs.items,\r\n   orgsLoading: state.orgs.loading,\r\n   orgError: state.orgs.error,\r\n\r\n   univCollaborators: state.univCollaborators.items,\r\n   univCollaboratorsLoading: state.univCollaborators.loading,\r\n   univCollaboratorsError: state.univCollaborators.error,\r\n\r\n   collaborations: state.collaborations.items,\r\n   collaborationsLoading: state.collaborations.loading,\r\n   collaborationsError: state.collaborations.error,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   fetchKeywords,\r\n   fetchOrganizations,\r\n   fetchCollaborations\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableView);","import React, { Component } from 'react';\r\nimport {\r\n   Collapse,\r\n   Navbar,\r\n   NavbarToggler,\r\n   NavbarBrand,\r\n   Nav,\r\n   NavItem,\r\n   NavLink,\r\n   } from 'reactstrap';\r\nimport './App.css';\r\nimport { connect } from 'react-redux';\r\nimport { toggleNavBar, toggleDevMode, toggleSearchForUnivCollaborator } from './actions/menuActions'\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\n\r\nclass Navigation extends Component {\r\n\r\n   render() {\r\n      const {nav, settings} = this.props;\r\n      return (\r\n\r\n         <Navbar color=\"dark\" dark expand=\"md\">\r\n            <NavbarBrand tag={RRNavLink} exact to=\"/\">{settings.siteHeading}</NavbarBrand>\r\n            <NavbarToggler onClick={() => this.props.toggleNavBar()} />\r\n            <Collapse isOpen={nav.navOpen} navbar>\r\n               <Nav className=\"ml-auto\" navbar>\r\n                  <NavItem>\r\n                     <NavLink tag={RRNavLink} exact to=\"/univCollaborator\" activeClassName=\"active\">Search for a University Collaborator</NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                     <NavLink tag={RRNavLink} exact to=\"/4CCollaborator\" activeClassName=\"active\">Search for a 4C Member</NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                  </NavItem>\r\n               </Nav>\r\n            </Collapse>\r\n         </Navbar>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   nav: state.nav,\r\n   settings: state.settings,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   toggleNavBar,\r\n   toggleDevMode,\r\n   toggleSearchForUnivCollaborator\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation)","import React, { Component } from 'react';\r\nimport {\r\n   Alert,\r\n} from 'reactstrap';\r\nimport './App.css';\r\nimport { connect } from 'react-redux';\r\nimport {toggleDevMode} from './actions/menuActions'\r\n\r\nclass DebugMessage extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n         navIsOpen: false,\r\n         devModeOpen: true,\r\n      };\r\n   }\r\n\r\n   render() {\r\n      const { nav, settings } = this.props;\r\n      return (\r\n         <>\r\n         {settings.commitBranch === \"dev\" ? (\r\n               <Alert color=\"light\" isOpen={nav.devModeOpen} toggle={() => this.props.toggleDevMode()}>\r\n                  <h4 className=\"alert-heading\">Development Mode</h4>\r\n                  <p>\r\n                     The 4C database query utility is currently being <b>developed</b>. To view the repository, please visit: <a href=\"https://github.com/dgaiero/c4-website\">https://github.com/dgaiero/c4-website</a>\r\n                  </p>\r\n                  <p>\r\n                     Directory information contained on this website may be falsified while the site is under development.\r\n                  </p>\r\n                  <hr />\r\n                  <p className=\"mb-0\">\r\n                     The current running commit has a message of: <em>{settings.commitMessage}</em>< br />\r\n                     When providing support or feedback, please provide the following version information:< br />\r\n                     <code>{settings.commitBranch}/{settings.commitHash}</code>< br />\r\n                     <a href={'https://github.com/dgaiero/c4-website/tree/' + settings.commitHash} target=\"_blank\" rel=\"noopener noreferrer\">Open in Remote</a>\r\n                  </p>\r\n               </Alert>\r\n            ) : null}\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   nav: state.nav,\r\n   settings: state.settings,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   toggleDevMode\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DebugMessage);","import axios from 'axios';\r\n\r\nexport const Actions = {\r\n   FETCH_SETTINGS_BEGIN: 'FETCH_SETTINGS_BEGIN',\r\n   FETCH_SETTINGS_SUCCESS: 'FETCH_SETTINGS_SUCCESS',\r\n   FETCH_SETTINGS_FAILURE: 'FETCH_SETTINGS_FAILURE',\r\n}\r\n\r\nexport const fetchSettingsBegin = () => ({\r\n   type: Actions.FETCH_SETTINGS_BEGIN\r\n});\r\n\r\nexport const fetchSettingsSuccess = (settings) => ({\r\n   \r\n   type: Actions.FETCH_SETTINGS_SUCCESS,\r\n   payload: {settings}\r\n})\r\n\r\nexport const fetchSettingsFailure = (error) => ({\r\n   type: Actions.FETCH_SETTINGS_FAILURE,\r\n   payload: { error }\r\n})\r\n\r\nexport function fetchSettings() {\r\n   return dispatch => {\r\n      dispatch(fetchSettingsBegin());\r\n      return axios.get('api/v1/frontendParameters/1/?format=json')\r\n         .then(response => {dispatch(fetchSettingsSuccess(response.data))})\r\n         .catch(error => dispatch(fetchSettingsFailure(error)));\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Button,\r\n   Jumbotron,\r\n   Row,\r\n   Col,\r\n} from 'reactstrap';\r\nimport './App.css';\r\nimport './welcomeJumbotron.css'\r\nimport { connect } from 'react-redux';\r\n\r\nclass WelcomeJumbotron extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n         navIsOpen: false,\r\n         devModeOpen: true,\r\n      };\r\n   }\r\n   render() {\r\n      const { settings } = this.props;\r\n      return (\r\n\r\n         <Jumbotron className=\"welcome text-light\" fluid>\r\n            <Container fluid>\r\n               <Row>\r\n                  <Col sm={{ size: 6, order: 2, offset: 1 }}>\r\n                  <h1 className=\"display-3\">{settings.frontHeading}</h1>\r\n                  <p className=\"lead\">{settings.frontMessage}</p>\r\n                  <hr className=\"my-2 hr-light\" />\r\n                  <p>{settings.frontMessageSubText}</p>\r\n                  <p className=\"lead\">\r\n                     <Button href={'mailto:' + settings.additionEmailAddress} color=\"light\">Request Addition to Database</Button>\r\n                  </p>\r\n                  </Col>\r\n               </Row>\r\n            </Container>\r\n         </Jumbotron>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   settings: state.settings,\r\n})\r\n\r\nexport default connect(mapStateToProps)(WelcomeJumbotron)","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Button,\r\n   Card,\r\n   CardDeck,\r\n   CardColumns,\r\n   CardFooter,\r\n   CardBody,\r\n   CardText,\r\n} from 'reactstrap';\r\nimport './App.css';\r\nimport './indexCards.css'\r\nimport { connect } from 'react-redux';\r\nimport WelcomeJumbotron from './WelcomeJumbotron';\r\nimport { NavLink as RRNavLink } from 'react-router-dom';\r\n\r\nimport PasteFromCipboardModal from './PasteQueryFromKeyboard'\r\nimport Title from './head'\r\n\r\n\r\n\r\n// const UnderConstructionCard = () => {\r\n//    return (\r\n//       <Card className=\"cardHideOverflow card-no-border shadow text-light\">\r\n//             <div style={{ border: '1px solid rgb(33, 37, 41)', overflow: 'hidden', borderRadius: '.25rem', 'zIndex': '300', 'height': '100%', 'position': 'relative' }}>\r\n//                 <span className=\"newFeaturesBanner\"><b>New Features Coming Soon!</b></span>\r\n//                 <div className=\"underConstructionCardImage\">\r\n//                 <CardBody>\r\n//                     <h5 className='cardTitle'>Under Construction</h5>\r\n//                     <CardText>New features will be coming soon!</CardText>\r\n//                 </CardBody>\r\n//                 <div className=\"card-footer-light\"><Button color=\"light\" disabled>Button Coming Soon</Button></div>\r\n//                 </div>\r\n//             </div>\r\n//          </Card>\r\n//    )\r\n// }\r\n\r\nconst LookingForUnivCollaboratorCard = () => {\r\n   return (\r\n      <Card className=\"cardHideOverflow card-no-border shadow text-light\" >\r\n                <div className=\"lookingForUnivCollaboratorCardImage card-defaults\">\r\n                <CardBody>\r\n                    <h5 className='cardTitle'>Looking for a University Collaborator?</h5>\r\n                    <CardText>Interested in finding faculty, staff, or students to work on a project?</CardText>\r\n\r\n                </CardBody>\r\n            <div className=\"card-footer-light\"><Button color=\"light\" tag={RRNavLink} exact to=\"/univCollaborator\">Search For a University Collaborator</Button></div>\r\n                </div>\r\n         </Card>\r\n   )\r\n}\r\n\r\nconst LookingFor4CCollaboratorCard = () => {\r\n   return (\r\n      <Card className=\"cardHideOverflow card-no-border shadow text-light\" >\r\n            <div className=\"lookingForGovCollaboratorCardImage card-defaults\">\r\n               <CardBody>\r\n                  <h5 className='cardTitle'>Looking for a 4C Collaborator?</h5>\r\n                  <CardText>Interested in finding a city, county, NGO, or regional staff?</CardText>\r\n\r\n               </CardBody>\r\n            <div className=\"card-footer-light\"><Button color=\"light\" tag={RRNavLink} exact to=\"/4CCollaborator\">Search For a 4C Collaborator</Button></div>\r\n            </div>\r\n      </Card>\r\n   )\r\n}\r\n\r\nclass FrontPageCards extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n         navIsOpen: false,\r\n         devModeOpen: true,\r\n         pasteFromClipBoardToggle: false,\r\n      };\r\n   }\r\n\r\n   PasteQCode = () => {\r\n      return (\r\n         <Card className=\"cardHideOverflow card-no-border shadow text-light\" >\r\n               <div className=\"PasteQCodeCardImage card-defaults\">\r\n                  <CardBody>\r\n                     <h5 className='cardTitle'>Have a saved query?</h5>\r\n                     <CardText>If you have a saved code, you can retrieve it here.</CardText>\r\n\r\n                  </CardBody>\r\n                  <div className=\"card-footer-light\"><Button color=\"light\" onClick={() => this.setState({ pasteFromClipBoardToggle: !this.state.pasteFromClipBoardToggle })}>Paste Code</Button></div>\r\n                  <PasteFromCipboardModal\r\n                     openStatus={this.state.pasteFromClipBoardToggle}\r\n                     endpoint=\"univCollaborator\"\r\n                     history={this.props.history}\r\n                     toggle={() => this.setState(\r\n                        {\r\n                           pasteFromClipBoardToggle: !this.state.pasteFromClipBoardToggle\r\n                        })}\r\n                     size='lg'\r\n                  />\r\n               </div>\r\n         </Card>\r\n      )\r\n   }\r\n\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n         <Title name=\"Home\" />\r\n         <WelcomeJumbotron />\r\n            <Container>\r\n               <CardDeck className=\"card-deck-overrides\">\r\n                  <LookingForUnivCollaboratorCard />\r\n                  <LookingFor4CCollaboratorCard />\r\n                  {/* <UnderConstructionCard /> */}\r\n                  <this.PasteQCode />\r\n               </CardDeck>\r\n            </Container>\r\n        </>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   settings: state.settings,\r\n})\r\n\r\n// FrontPageCards = withRouter(FrontPageCards)\r\n\r\nexport default connect(mapStateToProps)(FrontPageCards)","import React, { Component } from 'react';\r\nimport {\r\n   Jumbotron,\r\n   Button\r\n} from 'reactstrap';\r\nimport { NavLink as RRNavLink, Redirect } from 'react-router-dom';\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from 'react-redux'\r\n\r\nimport { setQueryStatement } from './actions/searchForUnivCollaboratorActions'\r\nimport Title from './head'\r\nvar base64 = require('base-64');\r\n\r\nclass ParseSaveQuery extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { seconds: 5 }\r\n      this.tick = this.tick.bind(this)\r\n      this.props.setQueryStatement({\r\n         activityKeywords: [],\r\n         topicalKeywords: [],\r\n          collaborations: [],\r\n         selectedUniversities: [],\r\n      })\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.timer = setInterval(this.tick, 1000);\r\n   }\r\n\r\n   tick() {\r\n      if (this.state.seconds > 0) {\r\n         this.setState({ seconds: this.state.seconds - 1 })\r\n      } else {\r\n         clearInterval(this.timer);\r\n      }\r\n   }\r\n\r\n   render() {\r\n      const { match, history } = this.props;\r\n      if (!match.params.id) {\r\n         history.replace({ pathname: '/' });\r\n      }\r\n      let query = match.params.id;\r\n      let decoded_query;\r\n      try {\r\n      decoded_query = base64.decode(query);\r\n      }\r\n      catch {\r\n         return (\r\n            <>\r\n            <Title name=\"No Match Found\" />\r\n               <Jumbotron>\r\n                  <h1 className=\"display-3\">No Match Found!</h1>\r\n                  <p className=\"lead\">A match could not be found for the code <code>{query}</code></p>\r\n                  <hr className=\"my-2\" />\r\n                  <p>You will be redirected to the homepage in {this.state.seconds} seconds</p>\r\n                  {this.state.seconds === 0 ? <Redirect to='/' /> : null}\r\n                  <p className=\"lead\">\r\n                     <Button tag={RRNavLink} exact to=\"/\" color=\"primary\">Go Home</Button>\r\n                  </p>\r\n               </Jumbotron>\r\n            </>\r\n         )\r\n      }      \r\n      return (\r\n         <>\r\n            <Title name=\"Match Found\" />\r\n            <Jumbotron>\r\n               <h1 className=\"display-3\">Match Found!</h1>\r\n               <p className=\"lead\">A match could be found for the code <code>{query}</code></p>\r\n               <hr className=\"my-2\" />\r\n               <p>You will be redirected to <code>{decoded_query}</code> in {this.state.seconds} seconds</p>\r\n               {/* {this.state.seconds === 0 ? <Redirect to={decoded_query} /> : null} */}\r\n               <Redirect to={\"/\" + decoded_query}/>\r\n            </Jumbotron>\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   collaborators: state.collaborators,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   setQueryStatement,\r\n};\r\n\r\nParseSaveQuery = withRouter(ParseSaveQuery);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ParseSaveQuery);","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Jumbotron,\r\n} from 'reactstrap';\r\nimport './App.css';\r\nimport Title from './head'\r\n\r\nclass NotFound extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n         navIsOpen: false,\r\n         devModeOpen: true,\r\n      };\r\n   }\r\n   render() {\r\n      const { pathname } = this.props.location;\r\n      return (\r\n         <>\r\n         <Title name=\"404\" />\r\n         <Jumbotron fluid>\r\n            <Container fluid>\r\n               <h1 className=\"display-3\">404</h1>\r\n               <p className=\"lead\">Page not found</p>\r\n               <hr className=\"my-2\" />\r\n               <p>The requested URL was not found on this server</p>\r\n               <p className=\"lead\">\r\n                  The path <code>{pathname}</code> could not be found in this application.\r\n               </p>\r\n            </Container>\r\n         </Jumbotron>\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nexport default NotFound","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n   Jumbotron,\r\n} from 'reactstrap';\r\nimport './App.css';\r\nimport Title from './head'\r\n\r\nclass ComingSoon extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n         navIsOpen: false,\r\n         devModeOpen: true,\r\n      };\r\n   }\r\n   render() {\r\n      const { pathname } = this.props.location;\r\n      return (\r\n         <>\r\n         <Title name=\"Coming Soon\" />\r\n         <Jumbotron fluid>\r\n            <Container fluid>\r\n               <h1 className=\"display-3\">Coming Soon</h1>\r\n               <p className=\"lead\">Feature Coming Soon!</p>\r\n               <hr className=\"my-2\" />\r\n               {/* <p>The selected feature is coming soon!</p> */}\r\n               <p className=\"lead\">\r\n                  Hang tight, <code>{pathname}</code> feature is coming soon.\r\n               </p>\r\n            </Container>\r\n         </Jumbotron>\r\n         </>\r\n      );\r\n   }\r\n}\r\n\r\nexport default ComingSoon","import React, { Component } from 'react';\r\nimport Loading from './Loading'\r\nimport './App.css';\r\nimport { connect } from 'react-redux';\r\nimport TableView from './universityCollaborators/TableView'\r\nimport Navigation from './Navigation'\r\nimport DebugMessage from './DebugMessage'\r\nimport { fetchSettings }from './actions/settingsActions'\r\nimport FrontPageCards from './indexPage';\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport ParseSaveQuery from './ParseSaveQuery'\r\nimport Loader from './loader';\r\nimport NotFound from './404'\r\nimport ComingSoon from './ComingSoon'\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = \"https://api.centralcoastclimate.org\"\r\n// axios.defaults.baseURL = \"http://192.168.86.218:8000\"\r\n\r\nclass RootContainer extends Component {\r\n\r\n   componentDidMount() {\r\n      this.props.fetchSettings();\r\n   }\r\n\r\n   render() {\r\n      let loader = [\r\n         { friendlyName: 'Settings', condition: this.props.settings.loading, error: this.props.settings.error },\r\n      ]\r\n      let loadStatus = Loader.calculateLoadingState(loader);\r\n      return (\r\n         <main className=\"App content\">\r\n            <Loading body={loader} status={loadStatus} />\r\n                  <DebugMessage />\r\n                  <Navigation />\r\n                  <Switch>\r\n                     <Route path=\"/\" exact component={FrontPageCards} />\r\n                     <Route path=\"/save/:id?\" component={ParseSaveQuery} />\r\n                     <Route path=\"/univCollaborator/\" exact component={TableView} />\r\n                     <Route path=\"/4CCollaborator/\" exact component={ComingSoon} />\r\n                     <Route component={NotFound} status={404}/>\r\n                  </Switch>\r\n         </main>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n   settings: state.settings,\r\n   keywords: state.keywords,\r\n   orgs: state.orgs,\r\n   collaborators: state.collaborators\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n   fetchSettings,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RootContainer)","import React from 'react';\r\nimport './App.css';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport RootContainer from './RootContainer';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nconst App = ({ store }) => (\r\n   <Provider store={store}>\r\n      <Router>\r\n         <Route path=\"/:filter?\" component={RootContainer} />\r\n      </Router>\r\n   </Provider>\r\n);\r\n\r\n\r\nApp.propTypes = {\r\n   store: PropTypes.object.isRequired\r\n}\r\n\r\nexport default App;","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport {\n   Alert,\n   Button,\n   Nav,\n   NavItem,\n   NavLink,\n   Modal,\n   ModalHeader,\n   ModalFooter,\n   ModalBody, TabContent, TabPane, Card, CardText, CardDeck, CardBody, CardFooter, CardColumns, CardImg,\n   Spinner\n} from 'reactstrap';\nimport './App.css';\nimport './appInfo.css';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport Obfuscate from \"react-obfuscate\";\nvar base64 = require('base-64');\n\nclass AppInfo extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         hash: 'Loading',\n         loadVersionHash: true,\n         commitError: null,\n\n         license: 'Loading',\n         loadLicense: true,\n         licenseError: null,\n\n         moduleLicense: 'Loading',\n         loadModuleLicense: true,\n         moduleLicenseError: null,\n\n         activeTab: '1'\n      };\n      this.getCommitHash = this.getCommitHash.bind(this);\n      this.getLicense = this.getLicense.bind(this);\n      this.getModuleLicenses = this.getModuleLicenses.bind(this);\n      this.toggle = this.toggle.bind(this);\n   }\n\n   componentDidMount() {\n      this.getCommitHash();\n      this.getLicense();\n      this.getModuleLicenses();\n   }\n\n   getCommitHash() {\n      axios.get('https://api.github.com/repos/dgaiero/c4-website/commits/gh-pages')\n         .then(res => {\n            this.setState({ hash: res.data.sha, loadVersionHash: false });\n         })\n         .catch(err => this.setState({ commitError: err.response }))\n   }\n\n   getLicense() {\n      axios.get('https://api.github.com/repos/dgaiero/c4-website/license')\n         .then(res => {\n            this.setState({ license: res.data, loadLicense: false });\n         })\n         .catch(err => this.setState({ licenseError: err.response }))\n   }\n\n   getModuleLicenses() {\n      axios.get('https://raw.githubusercontent.com/dgaiero/c4-website/dev/webserver/c4Lookup/c4frontend/oLICENSE')\n         .then(res => {\n            this.setState({ moduleLicense: res.data, loadModuleLicense: false });\n         })\n         .catch(err => this.setState({ moduleLicenseError: err.response }))\n   }\n\n   toggle(tab) {\n      if (this.state.activeTab !== tab) {\n         this.setState({\n            activeTab: tab\n         });\n      }\n   }\n\n   tab1Content = () => {\n      return (\n         <>\n            <Alert color=\"dark\">\n               <h4 className=\"alert-heading\">Application Frontend and Backend Versions</h4>\n               <p>\n                  This application is broken up into a frontend service\n                  (this website) and a backend API service.\n                  Each service has its own version information.\n                              </p>\n               <hr />\n               <p className=\"mb-0\">\n                  When providing feedback or if you have a question or\n                  issue with this website, please make sure to refer to\n                                 <b> both</b> version tags.\n                              </p>\n            </Alert>\n\n            <div style={{ marginBottom: '16px' }}>\n               <CardDeck>\n                  <Card>\n                     <CardBody>\n                        <h5 className='cardTitle'>Backend API</h5>\n                        <CardText>\n                           <b>Branch: </b>{this.props.settings.commitBranch}< br />\n                           <b>Commit Hash: </b><code>{this.props.settings.commitHash}</code><br />\n                        </CardText>\n\n                     </CardBody>\n                     <CardFooter><a href={'https://github.com/dgaiero/c4-website/tree/' + this.props.settings.commitHash} target=\"_blank\" rel=\"noopener noreferrer\">Open in Remote</a></CardFooter>\n                  </Card>\n                  <Card>\n                     <CardBody>\n                        <h5 className='cardTitle'>Frontend Service</h5>\n                        <b>Commit Hash: </b><code>{this.state.hash}</code><br />\n\n                     </CardBody>\n                     <CardFooter><a href={'https://github.com/dgaiero/c4-website/tree/' + this.state.hash} target=\"_blank\" rel=\"noopener noreferrer\">Open in Remote</a></CardFooter>\n                  </Card>\n               </CardDeck>\n            </div>\n            Designed and developed by Dominic Gaiero (<Obfuscate email=\"4cwebsite@dgaiero.me\" />)\n         </>\n      )\n   }\n\n   tab2Content = () => {\n      return (\n         <>\n         {this.state.licenseError !== null ? \"An error occured fetching the license\" :\n            !this.state.loadLicense ? \n            <>\n               <b>This application is licensed under the {this.state.license.license.name}</b>\n               <pre className=\"license form-control\">{base64.decode(this.state.license.content)}</pre>\n            </>\n         : <Spinner color=\"primary\" />\n         }\n         </>\n      )\n   }\n\n   tab3Content = () => {\n      return (\n         <>\n            {this.state.moduleLicenseError !== null ? \"An error occured fetching the license\" :\n               !this.state.loadModuleLicense ?\n                  <>\n                     <b>The following is all of the licenses of software used in this application</b>\n                     <pre className=\"license form-control\">{this.state.moduleLicense}</pre>\n                  </>\n                  : <Spinner color=\"primary\" />\n            }\n         </>\n      )\n   }\n\n   tab4Content = () => {\n      return (\n         <>\n            <CardColumns>\n               <Card>\n                  <CardImg top width=\"100%\" src=\"https://images.unsplash.com/photo-1478486982180-2de2fafa19f9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80\" alt=\"Construction Image\" />\n                  <CardBody>\n                     <CardText><span>Photo by <a href=\"https://unsplash.com/@thatsmrbio?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Matthew Hamilton</a> on <a href=\"/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></CardText>\n                  </CardBody>\n               </Card>\n               <Card>\n                  <CardImg top width=\"100%\" src=\"https://images.unsplash.com/photo-1552664730-d307ca884978?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjE3MzYxfQ&auto=format&fit=crop&w=500&q=80\" alt=\"Collaboration Image\" />\n                  <CardBody>\n                     <CardText><span>Photo by <a href=\"https://unsplash.com/@youxventures?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">You X Ventures</a> on <a href=\"/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></CardText>\n                  </CardBody>\n               </Card>\n               <Card>\n                  <CardImg top width=\"100%\" src=\"https://images.unsplash.com/photo-1491772135384-20292e4b5ea1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80\" alt=\"Waves Image\" />\n                  <CardBody>\n                     <CardText><span>Photo by <a href=\"https://unsplash.com/@johnonolan?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">John O'Nolan</a> on <a href=\"/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></CardText>\n                  </CardBody>\n               </Card>\n               <Card>\n                  <CardImg top width=\"100%\" src=\"https://images.unsplash.com/photo-1556761175-b413da4baf72?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=80\" alt=\"Waves Image\" />\n                  <CardBody>\n                     <CardText><span>Photo by <a href=\"https://unsplash.com/@austindistel?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Austin Distel</a> on <a href=\"/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></CardText>\n                  </CardBody>\n               </Card>\n               <Card>\n                  <CardImg top width=\"100%\" src=\"https://images.unsplash.com/photo-1515879218367-8466d910aaa4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80\" alt=\"Waves Image\" />\n                  <CardBody>\n                     <CardText><span>Photo by <a href=\"https://unsplash.com/@cdr6934?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Chris Ried</a> on <a href=\"/s/photos/programming?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></CardText>\n                  </CardBody>\n               </Card>\n            </CardColumns>\n         </>\n      )\n   }\n\n   render() {\n      const { openStatus, toggle } = this.props;\n      return (\n         <>\n            <Modal isOpen={openStatus} toggle={toggle} size=\"lg\">\n               <ModalHeader toggle={toggle}>Application Information</ModalHeader>\n               <ModalBody>\n                  <div>\n                     <Nav pills>\n                        <NavItem>\n                           <NavLink\n                              href=\"#0\"\n                              className={classnames({ active: this.state.activeTab === '1' })}\n                              onClick={() => { this.toggle('1'); }}>\n                              About Application\n                           </NavLink>\n                        </NavItem>\n                        <NavItem>\n                           <NavLink\n                              href=\"#0\"\n                              className={classnames({ active: this.state.activeTab === '2' })}\n                              onClick={() => { this.toggle('2'); }}>\n                              Application License\n                           </NavLink>\n                        </NavItem>\n                        <NavItem>\n                           <NavLink\n                              href=\"#0\"\n                              className={classnames({ active: this.state.activeTab === '3' })}\n                              onClick={() => { this.toggle('3'); }}>\n                              Other Licenses\n                           </NavLink>\n                        </NavItem>\n                        <NavItem>\n                           <NavLink\n                              href=\"#0\"\n                              className={classnames({ active: this.state.activeTab === '4' })}\n                              onClick={() => { this.toggle('4'); }}>\n                              Photo Credits\n                           </NavLink>\n                        </NavItem>\n                     </Nav>\n                     < br />\n                     <TabContent activeTab={this.state.activeTab}>\n                        <TabPane tabId=\"1\">\n                           {this.tab1Content()}\n                        </TabPane>\n                        <TabPane tabId=\"2\">\n                           {this.tab2Content()}\n                        </TabPane>\n                        <TabPane tabId=\"3\">\n                           {this.tab3Content()}\n                        </TabPane>\n                        <TabPane tabId=\"4\">\n                           {this.tab4Content()}\n                        </TabPane>\n                     </TabContent>\n                  </div>\n               </ModalBody>\n               <ModalFooter>\n                  <Button color=\"primary\" onClick={toggle}>Close</Button>\n               </ModalFooter>\n            </Modal>\n         </>\n      )\n   }\n\n}\n\nconst mapStateToProps = state => ({\n   settings: state.settings,\n})\n\nexport default connect(mapStateToProps)(AppInfo)","import React, { Component } from 'react';\r\nimport {\r\n   Container,\r\n} from 'reactstrap';\r\n\r\nimport './App.css';\r\nimport { NBSP } from './helper';\r\nimport './footer.css'\r\nimport AppInfo from './AppInfo'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faInfoCircle);\r\n\r\nclass Footer extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         showAppInfoModal: false,\r\n      };\r\n   }\r\n   render() {\r\n      return (\r\n         <footer className=\"footer mt-auto py-3\" style={{ backgroundColor: '#F8F9FA' }}>\r\n            <Container fluid className=\"clearfix\">\r\n               <div className=\"float-left\">\r\n                  <AppInfo\r\n                     openStatus={this.state.showAppInfoModal}\r\n                     toggle={() => this.setState(\r\n                        {\r\n                           showAppInfoModal: !this.state.showAppInfoModal\r\n                        })}\r\n                  />\r\n                  <a\r\n                     href=\"#0\"\r\n                     onClick={\r\n                        () => this.setState(\r\n                           {\r\n                              showAppInfoModal: !this.state.showAppInfoModal\r\n                           })\r\n                     }\r\n                  ><FontAwesomeIcon icon=\"info-circle\" /></a>\r\n                  {NBSP}<span className=\"text-muted\">|</span>{NBSP}\r\n                  <span className=\"text-muted\">Copyright {'\\u00A9'} 2019 Central Coast Climate Collaborative </span>\r\n               </div>\r\n               <div className=\"float-right\">\r\n                  <p className=\"c4-icon text-muted\"></p>\r\n                  {NBSP}\r\n                  <a href=\"https://www.centralcoastclimate.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Visit main website</a>\r\n               </div>\r\n            </Container>\r\n         </footer>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps)(Footer)","import { Actions } from '../actions/settingsActions'\r\n\r\nconst initialState = {\r\n   siteHeading: 'Loading...',\r\n   frontHeading: 'Loading...',\r\n   frontMessage: 'Loading...',\r\n   frontMessageSubText: 'Loading...',\r\n   additionEmailAddress: 'Loading...',\r\n   commitBranch: 'master',\r\n   commitHash: 'Loading...',\r\n   commitMessage: 'Loading...',\r\n   loading: true,\r\n   error: null,\r\n}\r\n\r\nexport default function settingsReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case Actions.FETCH_SETTINGS_BEGIN:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            error: null,\r\n         }\r\n      case Actions.FETCH_SETTINGS_SUCCESS:\r\n         return {\r\n            ...state,\r\n            ...action.payload.settings,\r\n            loading: false,\r\n         }\r\n      case Actions.FETCH_SETTINGS_FAILURE:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload.error,\r\n            items: [],\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import {Actions} from '../actions/keywordActions'\r\n\r\nconst initialState = {\r\n   items: [],\r\n   loading: true,\r\n   error: null\r\n}\r\n\r\nexport default function keywordsReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case Actions.FETCH_KEYWORDS_BEGIN:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            error: null,\r\n         }\r\n      case Actions.FETCH_KEYWORDS_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            items: action.payload.keywords,\r\n         }\r\n      case Actions.FETCH_KEYWORDS_FAILURE:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload.error,\r\n            items: [],\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import {Actions} from '../actions/organizationActions'\r\n\r\nconst initialState = {\r\n   items: [],\r\n   loading: true,\r\n   error: null\r\n}\r\n\r\nexport default function organizationsReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case Actions.FETCH_ORGANIZATIONS_BEGIN:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            error: null,\r\n         }\r\n      case Actions.FETCH_ORGANIZATIONS_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            items: action.payload.organizations,\r\n         }\r\n      case Actions.FETCH_ORGANIZATIONS_FAILURE:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload.error,\r\n            items: [],\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import {Actions} from '../actions/menuActions'\r\n\r\nconst initialState = {\r\n   searchForCollaborator: false,\r\n   devModeOpen: false,\r\n   navOpen: false,\r\n}\r\n\r\nexport default function menuReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case Actions.TOGGLE_SEARCH_FOR_COLLABORATOR:\r\n         return {\r\n            ...state,\r\n            searchForCollaborator: !state.searchForCollaborator,\r\n         }\r\n      case Actions.TOGGLE_DEV_MODE:\r\n         return {\r\n            ...state,\r\n            devModeOpen: !state.devModeOpen\r\n         };\r\n      case Actions.TOGGLE_NAV_BAR:\r\n         return {\r\n            ...state,\r\n            navOpen: !state.navOpen\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import { Actions } from '../actions/collaborationsActions'\n\nconst initialState = {\n   items: [],\n   loading: true,\n   error: null\n}\n\nexport default function collaborationsReducer(state = initialState, action) {\n   switch (action.type) {\n      case Actions.FETCH_COLLABORATIONS_BEGIN:\n         return {\n            ...state,\n            loading: true,\n            error: null,\n         }\n      case Actions.FETCH_COLLABORATIONS_SUCCESS:\n         return {\n            ...state,\n            loading: false,\n            items: action.payload.collaborations,\n         }\n      case Actions.FETCH_COLLABORATIONS_FAILURE:\n         return {\n            ...state,\n            loading: false,\n            error: action.payload.error,\n            items: [],\n         }\n      default:\n         return state;\n   }\n}","import { Actions } from '../actions/searchForUnivCollaboratorActions'\r\n\r\nconst initialState = {\r\n   items: [],\r\n   loading: true,\r\n   error: null,\r\n   url: '',\r\n   'selectedQueryStatements': {\r\n      activityKeywords: [],\r\n      topicalKeywords: [],\r\n      collaborations: [],\r\n      selectedUniversities: [],\r\n   }\r\n}\r\n\r\nexport default function univCollaboratorsReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n      case Actions.FETCH_COLLABORATORS_BEGIN:\r\n         return {\r\n            ...state,\r\n            loading: true,\r\n            error: null,\r\n         }\r\n      case Actions.FETCH_COLLABORATORS_SUCCESS:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            items: action.payload.collaborators,\r\n         }\r\n      case Actions.FETCH_COLLABORATORS_FAILURE:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            error: action.payload.error,\r\n            items: [],\r\n         }\r\n      case Actions.SET_QUERY_STATEMENT:\r\n         return {\r\n            ...state,\r\n            selectedQueryStatements: action.payload.query,\r\n         }\r\n      case Actions.SET_URL:\r\n         return {\r\n            ...state,\r\n            url: action.payload.url,\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import {combineReducers} from 'redux'\r\n\r\nimport settings from './settingsReducer'\r\nimport keywords from './keywordReducer'\r\nimport orgs from './organizationReducer'\r\nimport nav from './menuReducer'\r\nimport collaborations from './collaborationsReducer'\r\nimport univCollaborators from './searchForUnivCollaboratorReducer'\r\n\r\n\r\nexport default combineReducers({\r\n   settings,\r\n   keywords,\r\n   orgs,\r\n   nav,\r\n   univCollaborators,\r\n   collaborations,\r\n\r\n});","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n   window.location.hostname === 'localhost' ||\n   // [::1] is the IPv6 localhost address.\n   window.location.hostname === '[::1]' ||\n   // 127.0.0.1/8 is considered localhost for IPv4.\n   window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n   )\n);\n\nexport default function register() {\n   if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n         // Our service worker won't work if PUBLIC_URL is on a different origin\n         // from what our page is served on. This might happen if a CDN is used to\n         // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n         return;\n      }\n\n      window.addEventListener('load', () => {\n         const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n         if (isLocalhost) {\n            // This is running on localhost. Lets check if a service worker still exists or not.\n            checkValidServiceWorker(swUrl);\n\n            // Add some additional logging to localhost, pointing developers to the\n            // service worker/PWA documentation.\n            navigator.serviceWorker.ready.then(() => {\n               console.log(\n                  'This web app is being served cache-first by a service ' +\n                  'worker. To learn more, visit https://goo.gl/SC7cgQ'\n               );\n            });\n         } else {\n            // Is not local host. Just register service worker\n            registerValidSW(swUrl);\n         }\n      });\n   }\n}\n\nfunction registerValidSW(swUrl) {\n   navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n         registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n               if (installingWorker.state === 'installed') {\n                  if (navigator.serviceWorker.controller) {\n                     // At this point, the old content will have been purged and\n                     // the fresh content will have been added to the cache.\n                     // It's the perfect time to display a \"New content is\n                     // available; please refresh.\" message in your web app.\n                     console.log('New content is available; please refresh.');\n                  } else {\n                     // At this point, everything has been precached.\n                     // It's the perfect time to display a\n                     // \"Content is cached for offline use.\" message.\n                     console.log('Content is cached for offline use.');\n                  }\n               }\n            };\n         };\n      })\n      .catch(error => {\n         console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n   // Check if the service worker can be found. If it can't reload the page.\n   fetch(swUrl)\n      .then(response => {\n         // Ensure service worker exists, and that we really are getting a JS file.\n         if (\n            response.status === 404 ||\n            response.headers.get('content-type').indexOf('javascript') === -1\n         ) {\n            // No service worker found. Probably a different app. Reload the page.\n            navigator.serviceWorker.ready.then(registration => {\n               registration.unregister().then(() => {\n                  window.location.reload();\n               });\n            });\n         } else {\n            // Service worker found. Proceed as normal.\n            registerValidSW(swUrl);\n         }\n      })\n      .catch(() => {\n         console.log(\n            'No internet connection found. App is running in offline mode.'\n         );\n      });\n}\n\nexport function unregister() {\n   if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n         registration.unregister();\n      });\n   }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport Footer from './Footer'\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './reducers/rootReducer'\nimport thunk from 'redux-thunk'; \nimport { Provider } from 'react-redux';\n\nimport registerServiceWorker from './registerServiceWorker';\n\nconst createStoreWithMiddleware = applyMiddleware(thunk)(createStore);\nconst store = createStoreWithMiddleware(rootReducer);\n\nReactDOM.render(\n   [<App store={store} key={1} />, <Provider store={store} key={2} ><Footer store={store}/></Provider>], document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}